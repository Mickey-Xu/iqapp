{"ast":null,"code":"import*as action from\"actions\";import*as repo from\"js/fetch\";import*as installationStep from\"js/installationStep\";import{getDocumentListParmas}from\"js/util\";import{db}from\"js/db\";var projectNos=[];export var fetchAll=function fetchAll(type){return function(dispatch){dispatch(action.showLoading());return repo.fetchMasterData(type).then(function(data){var projects=data.workCenters?Object.keys(data.workCenters):[];data=installationStep.updateInstallationStepDesc(data);dispatch(action.setEntities(data));return repo.fetchOrdersDataByProjects(type,projects,1);// return repo.fetchOrdersData(type);\n}).then(function(data){data=installationStep.addActivityStepEditable(data);data=installationStep.nineStepsToFourteen(data);dispatch(action.setEntities(data));projectNos=Object.keys(data.projects);return repo.fetchLocalInstallationStepsConfirmDate({projectNos:projectNos},type);}).then(function(data){dispatch(action.setAllLocalInstallationStepConfirmDate(data));var result=getDocumentListParmas(projectNos);return repo.fetchDocumentList(result,type);}).then(function(data){dispatch(action.setDocuments(data));return repo.fetchTemplatesData(type);}).then(function(data){dispatch(action.setTemplates(data));return repo.fetchTasks(type);}).then(function(data){dispatch(action.setTasks(data));}).then(function(){return repo.fetchInstMethods(type);}).then(function(data){dispatch(action.setMethods(data));}).catch(function(error){if(error.code===401){window.localStorage.removeItem(\"auth\");dispatch(action.setAuth(null));}dispatch(action.setError(error.message));}).finally(function(){db.cache.get(\"dataVersion\").then(function(cache){if((cache===null||cache===void 0?void 0:cache.data)===\"lastVersion\"){db.cache.put({id:\"dataVersion\",data:\"initVersion\"});window.location.reload();}dispatch(action.hideLoading());});});};};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/actions/initialization.js"],"names":["action","repo","installationStep","getDocumentListParmas","db","projectNos","fetchAll","type","dispatch","showLoading","fetchMasterData","then","data","projects","workCenters","Object","keys","updateInstallationStepDesc","setEntities","fetchOrdersDataByProjects","addActivityStepEditable","nineStepsToFourteen","fetchLocalInstallationStepsConfirmDate","setAllLocalInstallationStepConfirmDate","result","fetchDocumentList","setDocuments","fetchTemplatesData","setTemplates","fetchTasks","setTasks","fetchInstMethods","setMethods","catch","error","code","window","localStorage","removeItem","setAuth","setError","message","finally","cache","get","put","id","location","reload","hideLoading"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,MAAZ,KAAwB,SAAxB,CACA,MAAO,GAAKC,CAAAA,IAAZ,KAAsB,UAAtB,CACA,MAAO,GAAKC,CAAAA,gBAAZ,KAAkC,qBAAlC,CACA,OAASC,qBAAT,KAAsC,SAAtC,CACA,OAASC,EAAT,KAAmB,OAAnB,CAEA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,QAAU,UAACC,QAAD,CAAc,CAC9CA,QAAQ,CAACR,MAAM,CAACS,WAAP,EAAD,CAAR,CACA,MAAOR,CAAAA,IAAI,CACRS,eADI,CACYH,IADZ,EAEJI,IAFI,CAEC,SAACC,IAAD,CAAU,CACd,GAAIC,CAAAA,QAAQ,CAAGD,IAAI,CAACE,WAAL,CAAmBC,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACE,WAAjB,CAAnB,CAAmD,EAAlE,CACAF,IAAI,CAAGV,gBAAgB,CAACe,0BAAjB,CAA4CL,IAA5C,CAAP,CACAJ,QAAQ,CAACR,MAAM,CAACkB,WAAP,CAAmBN,IAAnB,CAAD,CAAR,CAEA,MAAOX,CAAAA,IAAI,CAACkB,yBAAL,CAA+BZ,IAA/B,CAAqCM,QAArC,CAA+C,CAA/C,CAAP,CACA;AACD,CATI,EAUJF,IAVI,CAUC,SAACC,IAAD,CAAU,CACdA,IAAI,CAAGV,gBAAgB,CAACkB,uBAAjB,CAAyCR,IAAzC,CAAP,CACAA,IAAI,CAAGV,gBAAgB,CAACmB,mBAAjB,CAAqCT,IAArC,CAAP,CACAJ,QAAQ,CAACR,MAAM,CAACkB,WAAP,CAAmBN,IAAnB,CAAD,CAAR,CAEAP,UAAU,CAAGU,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACC,QAAjB,CAAb,CAEA,MAAOZ,CAAAA,IAAI,CAACqB,sCAAL,CAA4C,CAAEjB,UAAU,CAAVA,UAAF,CAA5C,CAA4DE,IAA5D,CAAP,CACD,CAlBI,EAmBJI,IAnBI,CAmBC,SAACC,IAAD,CAAU,CACdJ,QAAQ,CAACR,MAAM,CAACuB,sCAAP,CAA8CX,IAA9C,CAAD,CAAR,CACA,GAAMY,CAAAA,MAAM,CAAGrB,qBAAqB,CAACE,UAAD,CAApC,CACA,MAAOJ,CAAAA,IAAI,CAACwB,iBAAL,CAAuBD,MAAvB,CAA+BjB,IAA/B,CAAP,CACD,CAvBI,EAwBJI,IAxBI,CAwBC,SAACC,IAAD,CAAU,CACdJ,QAAQ,CAACR,MAAM,CAAC0B,YAAP,CAAoBd,IAApB,CAAD,CAAR,CACA,MAAOX,CAAAA,IAAI,CAAC0B,kBAAL,CAAwBpB,IAAxB,CAAP,CACD,CA3BI,EA4BJI,IA5BI,CA4BC,SAACC,IAAD,CAAU,CACdJ,QAAQ,CAACR,MAAM,CAAC4B,YAAP,CAAoBhB,IAApB,CAAD,CAAR,CACA,MAAOX,CAAAA,IAAI,CAAC4B,UAAL,CAAgBtB,IAAhB,CAAP,CACD,CA/BI,EAgCJI,IAhCI,CAgCC,SAACC,IAAD,CAAU,CACdJ,QAAQ,CAACR,MAAM,CAAC8B,QAAP,CAAgBlB,IAAhB,CAAD,CAAR,CACD,CAlCI,EAmCJD,IAnCI,CAmCC,UAAM,CACV,MAAOV,CAAAA,IAAI,CAAC8B,gBAAL,CAAsBxB,IAAtB,CAAP,CACD,CArCI,EAsCJI,IAtCI,CAsCC,SAACC,IAAD,CAAU,CACdJ,QAAQ,CAACR,MAAM,CAACgC,UAAP,CAAkBpB,IAAlB,CAAD,CAAR,CACD,CAxCI,EAyCJqB,KAzCI,CAyCE,SAACC,KAAD,CAAW,CAChB,GAAIA,KAAK,CAACC,IAAN,GAAe,GAAnB,CAAwB,CACtBC,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,MAA/B,EACA9B,QAAQ,CAACR,MAAM,CAACuC,OAAP,CAAe,IAAf,CAAD,CAAR,CACD,CACD/B,QAAQ,CAACR,MAAM,CAACwC,QAAP,CAAgBN,KAAK,CAACO,OAAtB,CAAD,CAAR,CACD,CA/CI,EAgDJC,OAhDI,CAgDI,UAAM,CACbtC,EAAE,CAACuC,KAAH,CAASC,GAAT,CAAa,aAAb,EAA4BjC,IAA5B,CAAiC,SAAAgC,KAAK,CAAI,CACxC,GAAI,CAAAA,KAAK,OAAL,EAAAA,KAAK,SAAL,QAAAA,KAAK,CAAE/B,IAAP,IAAgB,aAApB,CAAmC,CACjCR,EAAE,CAACuC,KAAH,CAASE,GAAT,CAAa,CAAEC,EAAE,CAAE,aAAN,CAAqBlC,IAAI,CAAE,aAA3B,CAAb,EACAwB,MAAM,CAACW,QAAP,CAAgBC,MAAhB,GACD,CACDxC,QAAQ,CAACR,MAAM,CAACiD,WAAP,EAAD,CAAR,CACD,CAND,EAOD,CAxDI,CAAP,CAyDD,CA3DuB,EAAjB","sourcesContent":["import * as action from \"actions\";\r\nimport * as repo from \"js/fetch\";\r\nimport * as installationStep from \"js/installationStep\";\r\nimport { getDocumentListParmas } from \"js/util\";\r\nimport { db } from \"js/db\";\r\n\r\nlet projectNos = [];\r\n\r\nexport const fetchAll = (type) => (dispatch) => {\r\n  dispatch(action.showLoading());\r\n  return repo\r\n    .fetchMasterData(type)\r\n    .then((data) => {\r\n      let projects = data.workCenters ? Object.keys(data.workCenters) : [];\r\n      data = installationStep.updateInstallationStepDesc(data);\r\n      dispatch(action.setEntities(data));\r\n\r\n      return repo.fetchOrdersDataByProjects(type, projects, 1);\r\n      // return repo.fetchOrdersData(type);\r\n    })\r\n    .then((data) => {\r\n      data = installationStep.addActivityStepEditable(data);\r\n      data = installationStep.nineStepsToFourteen(data);\r\n      dispatch(action.setEntities(data));\r\n\r\n      projectNos = Object.keys(data.projects);\r\n\r\n      return repo.fetchLocalInstallationStepsConfirmDate({ projectNos }, type);\r\n    })\r\n    .then((data) => {\r\n      dispatch(action.setAllLocalInstallationStepConfirmDate(data));\r\n      const result = getDocumentListParmas(projectNos);\r\n      return repo.fetchDocumentList(result, type);\r\n    })\r\n    .then((data) => {\r\n      dispatch(action.setDocuments(data));\r\n      return repo.fetchTemplatesData(type);\r\n    })\r\n    .then((data) => {\r\n      dispatch(action.setTemplates(data));\r\n      return repo.fetchTasks(type);\r\n    })\r\n    .then((data) => {\r\n      dispatch(action.setTasks(data));\r\n    })\r\n    .then(() => {\r\n      return repo.fetchInstMethods(type);\r\n    })\r\n    .then((data) => {\r\n      dispatch(action.setMethods(data));\r\n    })\r\n    .catch((error) => {\r\n      if (error.code === 401) {\r\n        window.localStorage.removeItem(\"auth\");\r\n        dispatch(action.setAuth(null));\r\n      }\r\n      dispatch(action.setError(error.message));\r\n    })\r\n    .finally(() => {\r\n      db.cache.get(\"dataVersion\").then(cache => {\r\n        if (cache?.data === \"lastVersion\") {\r\n          db.cache.put({ id: \"dataVersion\", data: \"initVersion\" })\r\n          window.location.reload()\r\n        }\r\n        dispatch(action.hideLoading());\r\n      })\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */import{appendChild,appendQuestionBlock,hasChildNode,getChildNode,getRequiredAttr,readQuestionBlock,getAttrWithDefault}from\"./utils/xml\";export default{serialize:function serialize(doc,findField,parentNode,field){// const { settings } = field;\n// const { prefilledAnswer } = settings;\nvar questionBlock=appendQuestionBlock(doc,findField,parentNode,\"string\",field);// appendChild(doc, questionBlock, \"textarea\", null, {\n//   \"prefilled-answer\": prefilledAnswer,\n// });\nappendChild(doc,questionBlock,\"textarea\",field.settings.value);},canDeserialize:function canDeserialize(node){return node.nodeName===\"question_block\"&&hasChildNode(node,\"textarea\");},deserialize:function deserialize(node){var field=readQuestionBlock(node,\"paragraph\",\"string\");// eslint-disable-line prefer-const\nfield.settings.required=getRequiredAttr(node,\"required\")===\"true\";var textAreaNode=getChildNode(node,\"textarea\");field.settings.text=textAreaNode.textContent;field.settings.prefilledAnswer=getAttrWithDefault(textAreaNode,\"prefilled-answer\",\"\");field.settings.value=textAreaNode.textContent;return field;}};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/ParagraphTextIO.js"],"names":["appendChild","appendQuestionBlock","hasChildNode","getChildNode","getRequiredAttr","readQuestionBlock","getAttrWithDefault","serialize","doc","findField","parentNode","field","questionBlock","settings","value","canDeserialize","node","nodeName","deserialize","required","textAreaNode","text","textContent","prefilledAnswer"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,OACEA,WADF,CAEEC,mBAFF,CAGEC,YAHF,CAIEC,YAJF,CAKEC,eALF,CAMEC,iBANF,CAOEC,kBAPF,KAQO,aARP,CAUA,cAAe,CACbC,SADa,oBACHC,GADG,CACEC,SADF,CACaC,UADb,CACyBC,KADzB,CACgC,CAC3C;AACA;AAEA,GAAMC,CAAAA,aAAa,CAAGX,mBAAmB,CACvCO,GADuC,CAEvCC,SAFuC,CAGvCC,UAHuC,CAIvC,QAJuC,CAKvCC,KALuC,CAAzC,CAOA;AACA;AACA;AAEAX,WAAW,CAACQ,GAAD,CAAMI,aAAN,CAAqB,UAArB,CAAiCD,KAAK,CAACE,QAAN,CAAeC,KAAhD,CAAX,CACD,CAjBY,CAmBbC,cAnBa,yBAmBEC,IAnBF,CAmBQ,CACnB,MAAOA,CAAAA,IAAI,CAACC,QAAL,GAAkB,gBAAlB,EAAsCf,YAAY,CAACc,IAAD,CAAO,UAAP,CAAzD,CACD,CArBY,CAuBbE,WAvBa,sBAuBDF,IAvBC,CAuBK,CAChB,GAAIL,CAAAA,KAAK,CAAGN,iBAAiB,CAACW,IAAD,CAAO,WAAP,CAAoB,QAApB,CAA7B,CAA4D;AAC5DL,KAAK,CAACE,QAAN,CAAeM,QAAf,CAA0Bf,eAAe,CAACY,IAAD,CAAO,UAAP,CAAf,GAAsC,MAAhE,CAEA,GAAMI,CAAAA,YAAY,CAAGjB,YAAY,CAACa,IAAD,CAAO,UAAP,CAAjC,CACAL,KAAK,CAACE,QAAN,CAAeQ,IAAf,CAAsBD,YAAY,CAACE,WAAnC,CACAX,KAAK,CAACE,QAAN,CAAeU,eAAf,CAAiCjB,kBAAkB,CACjDc,YADiD,CAEjD,kBAFiD,CAGjD,EAHiD,CAAnD,CAMAT,KAAK,CAACE,QAAN,CAAeC,KAAf,CAAuBM,YAAY,CAACE,WAApC,CAEA,MAAOX,CAAAA,KAAP,CACD,CAtCY,CAAf","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport {\r\n  appendChild,\r\n  appendQuestionBlock,\r\n  hasChildNode,\r\n  getChildNode,\r\n  getRequiredAttr,\r\n  readQuestionBlock,\r\n  getAttrWithDefault,\r\n} from \"./utils/xml\";\r\n\r\nexport default {\r\n  serialize(doc, findField, parentNode, field) {\r\n    // const { settings } = field;\r\n    // const { prefilledAnswer } = settings;\r\n\r\n    const questionBlock = appendQuestionBlock(\r\n      doc,\r\n      findField,\r\n      parentNode,\r\n      \"string\",\r\n      field\r\n    );\r\n    // appendChild(doc, questionBlock, \"textarea\", null, {\r\n    //   \"prefilled-answer\": prefilledAnswer,\r\n    // });\r\n\r\n    appendChild(doc, questionBlock, \"textarea\", field.settings.value);\r\n  },\r\n\r\n  canDeserialize(node) {\r\n    return node.nodeName === \"question_block\" && hasChildNode(node, \"textarea\");\r\n  },\r\n\r\n  deserialize(node) {\r\n    let field = readQuestionBlock(node, \"paragraph\", \"string\"); // eslint-disable-line prefer-const\r\n    field.settings.required = getRequiredAttr(node, \"required\") === \"true\";\r\n\r\n    const textAreaNode = getChildNode(node, \"textarea\");\r\n    field.settings.text = textAreaNode.textContent;\r\n    field.settings.prefilledAnswer = getAttrWithDefault(\r\n      textAreaNode,\r\n      \"prefilled-answer\",\r\n      \"\"\r\n    );\r\n\r\n    field.settings.value = textAreaNode.textContent;\r\n\r\n    return field;\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
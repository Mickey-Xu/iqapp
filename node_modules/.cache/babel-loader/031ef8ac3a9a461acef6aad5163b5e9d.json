{"ast":null,"code":"import _slicedToArray from\"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{Box}from\"@material-ui/core\";import Fab from\"@material-ui/core/Fab\";import AddIcon from\"@material-ui/icons/Add\";import*as action from\"actions\";import FFTab from\"components/FFTab\";import TaskList from\"components/TaskList\";import{LocalizeContext}from\"i18n\";import*as repo from\"js/fetch\";import{getTaskCount}from\"js/util\";import PrimaryLayout from\"layouts/PrimaryLayout\";import React from\"react\";import{connect}from\"react-redux\";import{useHistory}from\"react-router-dom\";import{taskCleaner}from\"js/publicFn\";var Tasks=function Tasks(_ref){var type=_ref.type,tasksData=_ref.tasksData,_submit=_ref.submit;var history=useHistory();var i18n=React.useContext(LocalizeContext);var _React$useState=React.useState(\"open\"),_React$useState2=_slicedToArray(_React$useState,2),status=_React$useState2[0],setStatus=_React$useState2[1];var tabs=[{title:i18n.ISNTAPP_TO_COMPLETE,value:\"open\"},{title:i18n.ISNTAPP_TO_CLOSE,value:\"pending\"},{title:i18n.ISNTAPP_CLOSED,value:\"close\"}];var currentStatusTasks=[];if(status===\"open\"){tasksData.forEach(function(item){if(item.Status===\"A\"){currentStatusTasks.push(item);}});}if(status===\"pending\"){tasksData.forEach(function(item){if(item.Status===\"D\"){currentStatusTasks.push(item);}});}if(status===\"close\"){tasksData.forEach(function(item){if(item.Status===\"CL\"){currentStatusTasks.push(item);}});}currentStatusTasks.sort(function(a,b){return a.DueDate?a.DueDate>b.DueDate?1:-1:1;});var pending=getTaskCount().awaitCloseNum;var open=getTaskCount().awaitComplateNum;return/*#__PURE__*/React.createElement(PrimaryLayout,{name:\"tasks\",title:i18n.INSTAPP_JOBLIST_TASKS},/*#__PURE__*/React.createElement(Box,{style:{position:\"fixed\",top:\"52px\",width:\"100%\",zIndex:\"10000\"}},/*#__PURE__*/React.createElement(FFTab,{tabs:tabs,selectedTabValue:\"open\",onTabChange:function onTabChange(value){return setStatus(value);}}),type===\"assigner\"?pending>0&&/*#__PURE__*/React.createElement(\"span\",{style:{position:\"absolute\",top:\"0\",left:\"55%\",padding:\"2px 8px\",backgroundColor:\"red\",borderRadius:\"40px\",color:\"white\"}},pending):open>0&&/*#__PURE__*/React.createElement(\"span\",{style:{position:\"absolute\",top:\"0\",left:\"21%\",padding:\"2px 8px\",backgroundColor:\"red\",borderRadius:\"40px\",color:\"white\"}},open)),/*#__PURE__*/React.createElement(Box,{style:{width:\"100%\",padding:\"16px\",position:\"absolute\",top:\"32px\",height:window.screen.height-157+\"px\",overflow:\"hidden auto\"}},/*#__PURE__*/React.createElement(TaskList,{data:currentStatusTasks,status:status,type:type,submit:function submit(submitDatas){_submit(submitDatas);}})),type===\"assigner\"&&/*#__PURE__*/React.createElement(Box,{variant:\"contained\",color:\"secondary\",style:{position:\"fixed\",bottom:\"90px\",right:\"16px\"},onClick:function onClick(){history.push(\"/taskcreate\");}},/*#__PURE__*/React.createElement(Fab,{style:{backgroundColor:\"#cb0c33a8\",color:\"white\"}},/*#__PURE__*/React.createElement(AddIcon,null))));};var mapStateToProps=function mapStateToProps(state,ownProps){var match=ownProps.match;var params=match.params;var type=params.type;var tasks=state.tasks,orders=state.orders,projects=state.projects;return{type:type,tasksData:type===\"assigner\"?taskCleaner(tasks.assigner,orders,projects)||[]:type===\"assignee\"?taskCleaner(tasks.assignee,orders,projects)||[]:[]};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{submit:function submit(submitDatas){dispatch(action.fetchCreateTask([submitDatas])).then(function(response){repo.fetchTasks().then(function(data){dispatch(action.setTasks(data));});});}};};export default connect(mapStateToProps,mapDispatchToProps)(Tasks);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/TasksPage/index.js"],"names":["Box","Fab","AddIcon","action","FFTab","TaskList","LocalizeContext","repo","getTaskCount","PrimaryLayout","React","connect","useHistory","taskCleaner","Tasks","type","tasksData","submit","history","i18n","useContext","useState","status","setStatus","tabs","title","ISNTAPP_TO_COMPLETE","value","ISNTAPP_TO_CLOSE","ISNTAPP_CLOSED","currentStatusTasks","forEach","item","Status","push","sort","a","b","DueDate","pending","awaitCloseNum","open","awaitComplateNum","INSTAPP_JOBLIST_TASKS","position","top","width","zIndex","left","padding","backgroundColor","borderRadius","color","height","window","screen","overflow","submitDatas","bottom","right","mapStateToProps","state","ownProps","match","params","tasks","orders","projects","assigner","assignee","mapDispatchToProps","dispatch","fetchCreateTask","then","response","fetchTasks","data","setTasks"],"mappings":"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","sourcesContent":["import { Box } from \"@material-ui/core\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport * as action from \"actions\";\r\nimport FFTab from \"components/FFTab\";\r\nimport TaskList from \"components/TaskList\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport * as repo from \"js/fetch\";\r\nimport { getTaskCount } from \"js/util\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { taskCleaner } from \"js/publicFn\";\r\n\r\nconst Tasks = ({ type, tasksData, submit }) => {\r\n  const history = useHistory();\r\n  const i18n = React.useContext(LocalizeContext);\r\n  const [status, setStatus] = React.useState(\"open\");\r\n\r\n  const tabs = [\r\n    { title: i18n.ISNTAPP_TO_COMPLETE, value: \"open\" },\r\n    { title: i18n.ISNTAPP_TO_CLOSE, value: \"pending\" },\r\n    { title: i18n.ISNTAPP_CLOSED, value: \"close\" },\r\n  ];\r\n\r\n  let currentStatusTasks = [];\r\n\r\n  if (status === \"open\") {\r\n    tasksData.forEach((item) => {\r\n      if (item.Status === \"A\") {\r\n        currentStatusTasks.push(item);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (status === \"pending\") {\r\n    tasksData.forEach((item) => {\r\n      if (item.Status === \"D\") {\r\n        currentStatusTasks.push(item);\r\n      }\r\n    });\r\n  }\r\n\r\n  if (status === \"close\") {\r\n    tasksData.forEach((item) => {\r\n      if (item.Status === \"CL\") {\r\n        currentStatusTasks.push(item);\r\n      }\r\n    });\r\n  }\r\n\r\n  currentStatusTasks.sort((a, b) =>\r\n    a.DueDate ? (a.DueDate > b.DueDate ? 1 : -1) : 1\r\n  );\r\n\r\n  const pending = getTaskCount().awaitCloseNum;\r\n  const open = getTaskCount().awaitComplateNum;\r\n  return (\r\n    <PrimaryLayout name=\"tasks\" title={i18n.INSTAPP_JOBLIST_TASKS}>\r\n      <Box\r\n        style={{\r\n          position: \"fixed\",\r\n          top: \"52px\",\r\n          width: \"100%\",\r\n          zIndex: \"10000\",\r\n        }}\r\n      >\r\n        <FFTab\r\n          tabs={tabs}\r\n          selectedTabValue={\"open\"}\r\n          onTabChange={(value) => setStatus(value)}\r\n        />\r\n        {type === \"assigner\"\r\n          ? pending > 0 && (\r\n              <span\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"0\",\r\n                  left: \"55%\",\r\n                  padding: \"2px 8px\",\r\n                  backgroundColor: \"red\",\r\n                  borderRadius: \"40px\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {pending}\r\n              </span>\r\n            )\r\n          : open > 0 && (\r\n              <span\r\n                style={{\r\n                  position: \"absolute\",\r\n                  top: \"0\",\r\n                  left: \"21%\",\r\n                  padding: \"2px 8px\",\r\n                  backgroundColor: \"red\",\r\n                  borderRadius: \"40px\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {open}\r\n              </span>\r\n            )}\r\n      </Box>\r\n\r\n      <Box\r\n        style={{\r\n          width: \"100%\",\r\n          padding: \"16px\",\r\n          position: \"absolute\",\r\n          top: \"32px\",\r\n          height: window.screen.height - 157 + \"px\",\r\n          overflow: \"hidden auto\",\r\n        }}\r\n      >\r\n        <TaskList\r\n          data={currentStatusTasks}\r\n          status={status}\r\n          type={type}\r\n          submit={(submitDatas) => {\r\n            submit(submitDatas);\r\n          }}\r\n        ></TaskList>\r\n      </Box>\r\n\r\n      {type === \"assigner\" && (\r\n        <Box\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          style={{\r\n            position: \"fixed\",\r\n            bottom: \"90px\",\r\n            right: \"16px\",\r\n          }}\r\n          onClick={() => {\r\n            history.push(\"/taskcreate\");\r\n          }}\r\n        >\r\n          <Fab style={{ backgroundColor: \"#cb0c33a8\", color: \"white\" }}>\r\n            <AddIcon />\r\n          </Fab>\r\n        </Box>\r\n      )}\r\n    </PrimaryLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { match } = ownProps;\r\n  const { params } = match;\r\n  const { type } = params;\r\n\r\n  const { tasks, orders, projects } = state;\r\n\r\n  return {\r\n    type,\r\n    tasksData:\r\n      type === \"assigner\"\r\n        ? taskCleaner(tasks.assigner, orders, projects) || []\r\n        : type === \"assignee\"\r\n        ? taskCleaner(tasks.assignee, orders, projects) || []\r\n        : [],\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    submit: (submitDatas) => {\r\n      dispatch(action.fetchCreateTask([submitDatas])).then((response) => {\r\n        repo.fetchTasks().then((data) => {\r\n          dispatch(action.setTasks(data));\r\n        });\r\n      });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tasks);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TaskItemCard\\\\index.js\";\nimport { Box, Button, Card, CardActions, CardContent, Grid, Typography, withStyles } from \"@material-ui/core\";\nimport { CheckCircleOutlineOutlined, DescriptionOutlined } from \"@material-ui/icons\";\nimport HourglassEmptySharpIcon from '@material-ui/icons/HourglassEmptySharp';\nimport { useHistory } from \"react-router-dom\";\nimport { LocalizeContext } from \"i18n\";\nimport React from \"react\";\nconst TaskListCard = withStyles(({\n  spacing\n}) => {\n  return {\n    button: {\n      borderRadius: spacing(2.5),\n      lineHeight: \"unset\",\n      fontSize: \"0.5rem\",\n      padding: \"2px 14px\"\n    },\n    card: {\n      marginTop: spacing(2)\n    },\n    cardActions: {\n      marginLeft: \"0px\"\n    },\n    contentColor: {\n      color: \"#999999\",\n      wordBreak: \"break-word\"\n    },\n    fontColor: {\n      color: \"#e54141\" // color: \"rgba(0, 0, 0, 0.54)\",\n\n    },\n    iconColor: {\n      color: \"rgba(0, 0, 0, 0.54)\"\n    }\n  };\n})(({\n  classes,\n  data,\n  submit\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  const history = useHistory();\n  console.log(data);\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    onClick: () => history.push(`/order/${data.orderNo}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    style: {\n      display: \"inline-flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, i18n.JOBLIST_ORDER, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, data.orderNo))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    style: {\n      display: \"inline-flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, i18n.PROJECTLIST_PROJECT, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, data.projectName))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      display: \"flex\",\n      justifyContent: 'space-between'\n    },\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, i18n.ISNTAPP_PLAN_START_DATE, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, data.planStartDate)), /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, i18n.ISNTAPP_ACTUAL_START_DATE), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, data.actualStartDate))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      display: \"flex\",\n      justifyContent: 'space-between'\n    },\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, i18n.ISNTAPP_PLAN_END_DATE, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, data.planEndDate)), /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, i18n.ISNTAPP_ACTUAL_END_DATE, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, data.actualEndDate))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      display: \"flex\",\n      justifyContent: 'space-between'\n    },\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }), data.status === 'closed' && /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, i18n.ISNTAPP_ACTUAL_CLOSED_DATE, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, data.actualCloseDate))))), /*#__PURE__*/React.createElement(CardActions, {\n    style: {\n      backgroundColor: \"#f5f5f5\",\n      padding: \"2px\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    style: {\n      display: \"inline-grid\"\n    },\n    onClick: () => {\n      submit(\"start\", data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HourglassEmptySharpIcon, {\n    classes: {\n      root: classes.iconColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, i18n.ISNTAPP_START, \":\")), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    style: {\n      display: \"inline-grid\",\n      textAlign: \"center\"\n    },\n    onClick: () => {\n      history.push(`/documents/${data.activityNo}/${data.orderNo}/${data === null || data === void 0 ? void 0 : data.productFamily}/listCard`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DescriptionOutlined, {\n    style: {\n      margin: \"auto\"\n    },\n    classes: {\n      root: classes.iconColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, data.status === \"awaitClose\" ? i18n.ISNTAPP_JOBLIST_DOC_DONE : i18n.COCKPIT_FILTER_OPEN)), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    style: {\n      display: \"inline-grid\"\n    },\n    onClick: () => {\n      submit(data.status === \"awaitComplate\" ? \"close\" : \"done\", data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircleOutlineOutlined, {\n    classes: {\n      root: classes.iconColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, data.status === \"awaitComplate\" ? i18n.ISNTAPP_COMPLETE : i18n.ISNTAPP_CLOSE))));\n});\nexport default TaskListCard;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TaskItemCard/index.js"],"names":["Box","Button","Card","CardActions","CardContent","Grid","Typography","withStyles","CheckCircleOutlineOutlined","DescriptionOutlined","HourglassEmptySharpIcon","useHistory","LocalizeContext","React","TaskListCard","spacing","button","borderRadius","lineHeight","fontSize","padding","card","marginTop","cardActions","marginLeft","contentColor","color","wordBreak","fontColor","iconColor","classes","data","submit","i18n","useContext","history","console","log","push","orderNo","display","marginRight","JOBLIST_ORDER","PROJECTLIST_PROJECT","projectName","justifyContent","ISNTAPP_PLAN_START_DATE","planStartDate","ISNTAPP_ACTUAL_START_DATE","actualStartDate","ISNTAPP_PLAN_END_DATE","planEndDate","ISNTAPP_ACTUAL_END_DATE","actualEndDate","status","ISNTAPP_ACTUAL_CLOSED_DATE","actualCloseDate","backgroundColor","root","ISNTAPP_START","textAlign","activityNo","productFamily","margin","ISNTAPP_JOBLIST_DOC_DONE","COCKPIT_FILTER_OPEN","ISNTAPP_COMPLETE","ISNTAPP_CLOSE"],"mappings":"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","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  CheckCircleOutlineOutlined,\r\n  DescriptionOutlined\r\n} from \"@material-ui/icons\";\r\nimport HourglassEmptySharpIcon from '@material-ui/icons/HourglassEmptySharp';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport React from \"react\";\r\n\r\nconst TaskListCard = withStyles(({ spacing }) => {\r\n  return {\r\n    button: {\r\n      borderRadius: spacing(2.5),\r\n      lineHeight: \"unset\",\r\n      fontSize: \"0.5rem\",\r\n      padding: \"2px 14px\",\r\n    },\r\n    card: {\r\n      marginTop: spacing(2),\r\n    },\r\n    cardActions: {\r\n      marginLeft: \"0px\",\r\n    },\r\n    contentColor: {\r\n      color: \"#999999\",\r\n      wordBreak: \"break-word\",\r\n    },\r\n    fontColor: {\r\n      color: \"#e54141\",\r\n      // color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    iconColor: {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n  };\r\n})(\r\n  ({\r\n    classes,\r\n    data,\r\n    submit,\r\n  }) => {\r\n    const i18n = React.useContext(LocalizeContext);\r\n    const history = useHistory();\r\n    console.log(data)\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardContent onClick={() => history.push(`/order/${data.orderNo}`)}>\r\n          <Grid container>\r\n              <Grid item xs={12}>\r\n                <Box mt={1} style={{ display: \"inline-flex\" }}>\r\n                  <Typography variant=\"body2\" style={{ marginRight: \"4px\" }}>\r\n                  {i18n.JOBLIST_ORDER}:\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                  >\r\n                  {data.orderNo}\r\n                  </Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box mt={1} style={{ display: \"inline-flex\" }}>\r\n                <Typography variant=\"body2\" style={{ marginRight: \"4px\" }}>\r\n                  {i18n.PROJECTLIST_PROJECT}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                >\r\n                  {data.projectName}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item style={{display:\"flex\",justifyContent:'space-between'}} xs={12}>\r\n              <Box mt={1}>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    component=\"span\"\r\n                    style={{ marginRight: \"4px\" }}\r\n                  >\r\n                  {i18n.ISNTAPP_PLAN_START_DATE}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {data.planStartDate}\r\n                </Typography>\r\n              </Box>\r\n              <Box mt={1}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {i18n.ISNTAPP_ACTUAL_START_DATE}\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  \r\n                  {data.actualStartDate}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item style={{ display: \"flex\", justifyContent: 'space-between' }} xs={12}>\r\n              <Box mt={1}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {i18n.ISNTAPP_PLAN_END_DATE}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {data.planEndDate}\r\n                </Typography>\r\n              </Box>\r\n              <Box mt={1}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {i18n.ISNTAPP_ACTUAL_END_DATE}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {data.actualEndDate}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item style={{ display: \"flex\", justifyContent: 'space-between' }} xs={12}>\r\n              <Box mt={1}>\r\n              </Box>\r\n             \r\n                {data.status === 'closed' &&\r\n                <Box mt={1}>\r\n                  <Typography\r\n                  variant=\"body2\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                    {i18n.ISNTAPP_ACTUAL_CLOSED_DATE}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {data.actualCloseDate}\r\n                  </Typography>\r\n                </Box>\r\n               } \r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions\r\n          style={{\r\n            backgroundColor: \"#f5f5f5\",\r\n            padding: \"2px\",\r\n            justifyContent:\"space-around\"\r\n          }}\r\n        >\r\n            <Button\r\n              size=\"small\"\r\n              style={{\r\n                display: \"inline-grid\",\r\n              }}\r\n              onClick={() => {\r\n                submit(\"start\", data);\r\n              }}\r\n            >\r\n            <HourglassEmptySharpIcon\r\n                classes={{ root: classes.iconColor }}\r\n              />\r\n            <Typography variant=\"caption\">{i18n.ISNTAPP_START}:</Typography>\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              style={{\r\n                display: \"inline-grid\",\r\n                textAlign:\"center\"\r\n              }}\r\n              onClick={() => {\r\n              history.push(\r\n                `/documents/${data.activityNo}/${data.orderNo}/${data?.productFamily}/listCard`\r\n              );\r\n            }}\r\n            >\r\n            <DescriptionOutlined style={{ margin: \"auto\" }} classes={{ root: classes.iconColor }} />\r\n            <Typography variant=\"caption\">{data.status === \"awaitClose\" ? i18n.ISNTAPP_JOBLIST_DOC_DONE  :i18n.COCKPIT_FILTER_OPEN}</Typography>\r\n            </Button>\r\n            <Button\r\n              size=\"small\"\r\n              style={{\r\n                display: \"inline-grid\",\r\n              }}\r\n              onClick={() => {\r\n                submit(data.status === \"awaitComplate\"?\"close\":\"done\", data);\r\n              }}\r\n            >\r\n            <CheckCircleOutlineOutlined\r\n              classes={{ root: classes.iconColor }}\r\n            />\r\n            <Typography variant=\"caption\">{data.status === \"awaitComplate\" ? i18n.ISNTAPP_COMPLETE : i18n.ISNTAPP_CLOSE}</Typography>\r\n            </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n);\r\nexport default TaskListCard;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */import isValidIdentifier from\"../expr/isValidIdentifier\";import assert from\"assert\";export function isDuplicateValue(options,value){return options.filter(function(o){return o.value===value;}).length>=2;}export function generateUniqueOptionValue(options){var _loop=function _loop(i){var value=\"value\".concat(i);if(options.every(function(o){return o.value!==value;})){return{v:value};}};for(var i=1;;i+=1){var _ret=_loop(i);if(typeof _ret===\"object\")return _ret.v;}}export function ensureOptionValues(options){options.forEach(function(option){if(!option.value){option.value=generateUniqueOptionValue(options);}});}export var FREE_TEXT_VALUE=\"free_text_option_value\";assert(isValidIdentifier(FREE_TEXT_VALUE));","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/utils/options.js"],"names":["isValidIdentifier","assert","isDuplicateValue","options","value","filter","o","length","generateUniqueOptionValue","i","every","ensureOptionValues","forEach","option","FREE_TEXT_VALUE"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAOA,CAAAA,iBAAP,KAA8B,2BAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA,MAAO,SAASC,CAAAA,gBAAT,CAA0BC,OAA1B,CAAmCC,KAAnC,CAA0C,CAC/C,MAAOD,CAAAA,OAAO,CAACE,MAAR,CAAe,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACF,KAAF,GAAYA,KAAnB,EAAf,EAAyCG,MAAzC,EAAmD,CAA1D,CACD,CAED,MAAO,SAASC,CAAAA,yBAAT,CAAmCL,OAAnC,CAA4C,0BACxCM,CADwC,EAE/C,GAAML,CAAAA,KAAK,gBAAWK,CAAX,CAAX,CACA,GAAIN,OAAO,CAACO,KAAR,CAAc,SAACJ,CAAD,QAAOA,CAAAA,CAAC,CAACF,KAAF,GAAYA,KAAnB,EAAd,CAAJ,CAA6C,CAC3C,SAAOA,KAAP,EACD,CAL8C,EACjD,IAAK,GAAIK,CAAAA,CAAC,CAAG,CAAb,EAAkBA,CAAC,EAAI,CAAvB,CAA0B,gBAAjBA,CAAiB,0CAKzB,CACF,CAED,MAAO,SAASE,CAAAA,kBAAT,CAA4BR,OAA5B,CAAqC,CAC1CA,OAAO,CAACS,OAAR,CAAgB,SAACC,MAAD,CAAY,CAC1B,GAAI,CAACA,MAAM,CAACT,KAAZ,CAAmB,CACjBS,MAAM,CAACT,KAAP,CAAeI,yBAAyB,CAACL,OAAD,CAAxC,CACD,CACF,CAJD,EAKD,CAED,MAAO,IAAMW,CAAAA,eAAe,CAAG,wBAAxB,CACPb,MAAM,CAACD,iBAAiB,CAACc,eAAD,CAAlB,CAAN","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport isValidIdentifier from \"../expr/isValidIdentifier\";\r\nimport assert from \"assert\";\r\n\r\nexport function isDuplicateValue(options, value) {\r\n  return options.filter((o) => o.value === value).length >= 2;\r\n}\r\n\r\nexport function generateUniqueOptionValue(options) {\r\n  for (let i = 1; ; i += 1) {\r\n    const value = `value${i}`;\r\n    if (options.every((o) => o.value !== value)) {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport function ensureOptionValues(options) {\r\n  options.forEach((option) => {\r\n    if (!option.value) {\r\n      option.value = generateUniqueOptionValue(options);\r\n    }\r\n  });\r\n}\r\n\r\nexport const FREE_TEXT_VALUE = \"free_text_option_value\";\r\nassert(isValidIdentifier(FREE_TEXT_VALUE));\r\n"]},"metadata":{},"sourceType":"module"}
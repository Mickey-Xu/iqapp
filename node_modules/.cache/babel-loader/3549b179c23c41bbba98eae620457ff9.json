{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\ActivityList\\\\index.js\";\nimport { Box, Card, Grid, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as action from \"actions\";\nimport classnames from \"classnames\";\nimport { LocalizeContext } from \"i18n\";\nimport { showInActivityListSteps } from \"js/publicFn\";\nimport * as util from \"js/util\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nconst ActivityList = withStyles(({\n  spacing\n}) => {\n  return {\n    overdue: {\n      backgroundColor: \"red\",\n      color: \"white\"\n    },\n    normal: {\n      backgroundColor: \"#9cea40\",\n      color: \"white\"\n    },\n    cardStyle: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      width: \"33%\",\n      padding: \"20px 0\"\n    },\n    grid: {\n      fontSize: \"14px\",\n      marginLeft: 1\n    }\n  };\n})(({\n  classes,\n  overdueActivities,\n  data,\n  setOverdueActivities\n}) => {\n  const history = useHistory();\n  const i18n = React.useContext(LocalizeContext);\n\n  const useOverdueActivities = setOverdueActivities => {\n    useEffect(() => {\n      setOverdueActivities(overdueActivities);\n    }, [setOverdueActivities]);\n  };\n\n  useOverdueActivities(setOverdueActivities);\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, data.map((activity, index) => {\n    return activity.total > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      elevation: 0,\n      onClick: () => {\n        history.push(`/activity/${activity.number}`);\n      },\n      style: {\n        margin: \"8px 0\",\n        borderRadius: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: 80\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      style: {\n        width: \"1%\"\n      },\n      className: classnames({\n        [`${classes.overdue}`]: activity.overdue > 0,\n        [`${classes.normal}`]: activity.overdue <= 0\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: `2px`,\n        height: `80px`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      className: classes.grid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        fontWeight: \"bold\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, activity.number), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, activity.descriptionShort3 ? activity.descriptionShort3 + \"-扶梯\" : activity.descriptionShort), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, activity.descriptionShort14 ? activity.descriptionShort14 + \"-电梯\" : \"\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      style: {\n        textAlign: \"center\"\n      },\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, activity.total), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, i18n.INSTAPP_JOBLIST_ACTIVITY_SUM)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      style: {\n        textAlign: \"center\",\n        padding: \"12px 9px\"\n      },\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, activity.notOverdue), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, i18n.INSTALLATION_FUTURE)), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      style: {\n        textAlign: \"center\"\n      },\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, activity.overdue), /*#__PURE__*/React.createElement(Box, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, i18n.INSTAPP_JOBLIST_ACTIVITY_OVERDUE)))))) : null;\n  }));\n});\n\nconst mapStateToProps = ({\n  activities,\n  orderActivities,\n  timeHorizon,\n  auth\n}) => {\n  const today = new Date().setHours(0, 0, 0, 0); // const hideInProgress = auth.activityAuth.hideInProgress;\n\n  let overdueActivities = {};\n\n  const total = activityNumber => {\n    return Object.keys(orderActivities).filter(key => {\n      return orderActivities[key].activityNumber === activityNumber && !orderActivities[key].confirmedDate && util.timeHorizonFilter(orderActivities[key].leadingDate ? orderActivities[key].leadingDate : orderActivities[key].leadingEndDate, today, timeHorizon);\n    }).length;\n  }; // const overdue = (activityNumber) => {\n  //   const calculateOverdue = (orderActivityNumber) => {\n  //     if (orderActivities[orderActivityNumber]) {\n  //       return (\n  //         new Date(orderActivities[orderActivityNumber].leadingDate).getTime() <\n  //           today && !orderActivities[orderActivityNumber].confirmedDate\n  //       );\n  //     } else {\n  //       return false;\n  //     }\n  //   };\n  //   const overdueList = Object.keys(orderActivities).filter((key) => {\n  //     let passedActivity = false;\n  //     if (orderActivities[key].activityNumber !== activitiesList[0].number) {\n  //       if (orderActivities[key].activityNumber === activityNumber) {\n  //         let currentActivityIndex = 0;\n  //         const orderNumber = orderActivities[key].orderNumber;\n  //         activitiesList.forEach((item, activityIndex) => {\n  //           if (item.number === activityNumber) {\n  //             currentActivityIndex = activityIndex;\n  //           }\n  //         });\n  //         activitiesList.forEach((item, index) => {\n  //           if (index < currentActivityIndex) {\n  //             if (calculateOverdue(orderNumber + \"-\" + item.number)) {\n  //               passedActivity = calculateOverdue(\n  //                 orderNumber + \"-\" + item.number\n  //               );\n  //             }\n  //           }\n  //         });\n  //       }\n  //     } else {\n  //       passedActivity = false;\n  //     }\n  //     return (\n  //       orderActivities[key].activityNumber === activityNumber &&\n  //       util.timeHorizonFilter(\n  //         orderActivities[key].leadingDate,\n  //         today,\n  //         timeHorizon\n  //       ) &&\n  //       calculateOverdue(key) &&\n  //       !passedActivity\n  //     );\n  //   });\n  //   if (overdueList.length > 0) {\n  //     overdueActivities[activityNumber] = overdueList;\n  //   }\n  //   return overdueList.length;\n  // };\n\n\n  const overdue = activityNumber => {\n    const calculateOverdue = orderActivityNumber => {\n      const orderActivity = orderActivities[orderActivityNumber];\n\n      if (orderActivity) {\n        if (!orderActivity.leadingDate) {\n          if (orderActivity.leadingStartDate && orderActivity.leadingEndDate) {\n            return new Date(orderActivity.leadingEndDate).getTime() < today && !orderActivity.confirmedDate;\n          }\n        } else {\n          return new Date(orderActivity.leadingDate).getTime() < today && !orderActivity.confirmedDate;\n        }\n      } else {\n        return false;\n      }\n    };\n\n    const overdueList = Object.keys(orderActivities).filter(key => {\n      return orderActivities[key].activityNumber === activityNumber && util.timeHorizonFilter(orderActivities[key].leadingDate ? orderActivities[key].leadingDate : orderActivities[key].leadingEndDate, today, timeHorizon) && calculateOverdue(key);\n    });\n\n    if (overdueList.length > 0) {\n      overdueActivities[activityNumber] = overdueList;\n    }\n\n    return overdueList.length;\n  }; // const notOverdue = (total, overdue, activityNumber) => {\n  //   const confirmedCount = Object.keys(orderActivities).filter((key) => {\n  //     return (\n  //       orderActivities[key].activityNumber === activityNumber &&\n  //       util.timeHorizonFilter(\n  //         orderActivities[key].leadingDate,\n  //         today,\n  //         timeHorizon\n  //       ) &&\n  //       orderActivities[key].confirmedDate\n  //     );\n  //   }).length;\n  //   return total - overdue - confirmedCount;\n  // };\n\n\n  var orderActivitiesList = [];\n  Object.keys(orderActivities).forEach(item => {\n    orderActivitiesList.push(orderActivities[item]);\n  });\n  var activitiesObj = activities;\n  orderActivitiesList.forEach(item => {\n    if (activitiesObj[item.activityNumber]) {\n      activitiesObj[item.activityNumber].sort = item.sort;\n    }\n  });\n  var activitiesList = [];\n  Object.keys(activitiesObj).forEach(item => {\n    activitiesList.push(activitiesObj[item]);\n  });\n  let showStepNos = []; // let rolesMapper = { sc: \"Subcon TL\", pe: \"PE\" };\n  // Object.keys(auth.activityAuth).forEach((name) => {\n  //   if (auth.roles.indexOf(rolesMapper[name.substring(0, 2)]) > -1) {\n  //     showStepNos = showStepNos.concat(auth.activityAuth[name]);\n  //   }\n  // });\n\n  showStepNos = showInActivityListSteps(auth.activityAuth, auth.roles[0]);\n  activitiesList = activitiesList.filter(item => {\n    return (// !hideInProgress.includes(item.number) ||\n      showStepNos.includes(item.number)\n    );\n  }).sort((a, b) => a.sort ? a.sort > b.sort ? 1 : -1 : 1);\n  return {\n    data: activitiesList.map(item => {\n      return { ...activities[item.number],\n        total: total(item.number),\n        overdue: overdue(item.number),\n        notOverdue: total(item.number) - overdue(item.number) // notOverdue: notOverdue(\n        //   total(item.number),\n        //   overdue(item.number),\n        //   item.number\n        // ),\n\n      };\n    }),\n    overdueActivities: overdueActivities\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setOverdueActivities: data => {\n      dispatch(action.setOverdueActivities(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityList);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/ActivityList/index.js"],"names":["Box","Card","Grid","Typography","withStyles","action","classnames","LocalizeContext","showInActivityListSteps","util","React","useEffect","connect","useHistory","ActivityList","spacing","overdue","backgroundColor","color","normal","cardStyle","display","flexDirection","alignItems","width","padding","grid","fontSize","marginLeft","classes","overdueActivities","data","setOverdueActivities","history","i18n","useContext","useOverdueActivities","map","activity","index","total","push","number","margin","borderRadius","justifyContent","height","fontWeight","descriptionShort3","descriptionShort","descriptionShort14","textAlign","INSTAPP_JOBLIST_ACTIVITY_SUM","notOverdue","INSTALLATION_FUTURE","INSTAPP_JOBLIST_ACTIVITY_OVERDUE","mapStateToProps","activities","orderActivities","timeHorizon","auth","today","Date","setHours","activityNumber","Object","keys","filter","key","confirmedDate","timeHorizonFilter","leadingDate","leadingEndDate","length","calculateOverdue","orderActivityNumber","orderActivity","leadingStartDate","getTime","overdueList","orderActivitiesList","forEach","item","activitiesObj","sort","activitiesList","showStepNos","activityAuth","roles","includes","a","b","mapDispatchToProps","dispatch"],"mappings":";AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,UAA1B,QAA4C,mBAA5C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,eAAT,QAAgC,MAAhC;AACA,SAASC,uBAAT,QAAwC,aAAxC;AACA,OAAO,KAAKC,IAAZ,MAAsB,SAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,MAAMC,YAAY,GAAGV,UAAU,CAAC,CAAC;AAAEW,EAAAA;AAAF,CAAD,KAAiB;AAC/C,SAAO;AACLC,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAE,KADV;AAEPC,MAAAA,KAAK,EAAE;AAFA,KADJ;AAKLC,IAAAA,MAAM,EAAE;AACNF,MAAAA,eAAe,EAAE,SADX;AAENC,MAAAA,KAAK,EAAE;AAFD,KALH;AASLE,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE,MADA;AAETC,MAAAA,aAAa,EAAE,QAFN;AAGTC,MAAAA,UAAU,EAAE,QAHH;AAITC,MAAAA,KAAK,EAAE,KAJE;AAKTC,MAAAA,OAAO,EAAE;AALA,KATN;AAgBLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,MADN;AAEJC,MAAAA,UAAU,EAAE;AAFR;AAhBD,GAAP;AAqBD,CAtB8B,CAAV,CAsBlB,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,iBAAX;AAA8BC,EAAAA,IAA9B;AAAoCC,EAAAA;AAApC,CAAD,KAAgE;AACjE,QAAMC,OAAO,GAAGpB,UAAU,EAA1B;AACA,QAAMqB,IAAI,GAAGxB,KAAK,CAACyB,UAAN,CAAiB5B,eAAjB,CAAb;;AAEA,QAAM6B,oBAAoB,GAAIJ,oBAAD,IAA0B;AACrDrB,IAAAA,SAAS,CAAC,MAAM;AACdqB,MAAAA,oBAAoB,CAACF,iBAAD,CAApB;AACD,KAFQ,EAEN,CAACE,oBAAD,CAFM,CAAT;AAGD,GAJD;;AAMAI,EAAAA,oBAAoB,CAACJ,oBAAD,CAApB;AAEA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACM,GAAL,CAAS,CAACC,QAAD,EAAWC,KAAX,KAAqB;AAC7B,WAAOD,QAAQ,CAACE,KAAT,GAAiB,CAAjB,gBACL;AAAK,MAAA,GAAG,EAAED,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAE,CADb;AAEE,MAAA,OAAO,EAAE,MAAM;AACbN,QAAAA,OAAO,CAACQ,IAAR,CAAc,aAAYH,QAAQ,CAACI,MAAO,EAA1C;AACD,OAJH;AAKE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,YAAY,EAAE;AAAjC,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,GAAD;AACE,MAAA,KAAK,EAAE;AACLvB,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,aAAa,EAAE,KAFV;AAGLC,QAAAA,UAAU,EAAE,QAHP;AAILsB,QAAAA,cAAc,EAAE,QAJX;AAKLC,QAAAA,MAAM,EAAE;AALH,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE,oBAAC,GAAD;AACE,MAAA,KAAK,EAAE;AAAEtB,QAAAA,KAAK,EAAE;AAAT,OADT;AAEE,MAAA,SAAS,EAAElB,UAAU,CAAC;AACpB,SAAE,GAAEuB,OAAO,CAACb,OAAQ,EAApB,GAAwBsB,QAAQ,CAACtB,OAAT,GAAmB,CADvB;AAEpB,SAAE,GAAEa,OAAO,CAACV,MAAO,EAAnB,GAAuBmB,QAAQ,CAACtB,OAAT,IAAoB;AAFvB,OAAD,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AACE,MAAA,KAAK,EAAE;AACLQ,QAAAA,KAAK,EAAG,KADH;AAELsB,QAAAA,MAAM,EAAG;AAFJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CATF,eAuBE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,SAAS,EAAEjB,OAAO,CAACH,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEqB,QAAAA,UAAU,EAAE;AAAd,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,QAAQ,CAACI,MADZ,CADF,eAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,QAAQ,CAACU,iBAAT,GACGV,QAAQ,CAACU,iBAAT,GAA6B,KADhC,GAEGV,QAAQ,CAACW,gBAHf,CAJF,eASE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,QAAQ,CAACY,kBAAT,GACGZ,QAAQ,CAACY,kBAAT,GAA8B,KADjC,GAEG,EAHN,CATF,CADF,eAgBE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAA2C,MAAA,EAAE,EAAE,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+Bb,QAAQ,CAACE,KAAxC,CADF,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMN,IAAI,CAACkB,4BAAX,CAFF,CAhBF,eAoBE,oBAAC,IAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,KAAK,EAAE;AAAED,QAAAA,SAAS,EAAE,QAAb;AAAuB1B,QAAAA,OAAO,EAAE;AAAhC,OAFT;AAGE,MAAA,EAAE,EAAE,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGa,QAAQ,CAACe,UADZ,CALF,eAQE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMnB,IAAI,CAACoB,mBAAX,CARF,CApBF,eA8BE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,KAAK,EAAE;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAlB;AAA2C,MAAA,EAAE,EAAE,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,QAAQ,CAACtB,OADZ,CADF,eAIE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMkB,IAAI,CAACqB,gCAAX,CAJF,CA9BF,CAvBF,CAPF,CADF,CADK,GAwEH,IAxEJ;AAyED,GA1EA,CADH,CADF;AA+ED,CAjHoB,CAArB;;AAmHA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,UADuB;AAEvBC,EAAAA,eAFuB;AAGvBC,EAAAA,WAHuB;AAIvBC,EAAAA;AAJuB,CAAD,KAKlB;AACJ,QAAMC,KAAK,GAAG,IAAIC,IAAJ,GAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAd,CADI,CAEJ;;AACA,MAAIjC,iBAAiB,GAAG,EAAxB;;AAEA,QAAMU,KAAK,GAAIwB,cAAD,IAAoB;AAChC,WAAOC,MAAM,CAACC,IAAP,CAAYR,eAAZ,EAA6BS,MAA7B,CAAqCC,GAAD,IAAS;AAClD,aACEV,eAAe,CAACU,GAAD,CAAf,CAAqBJ,cAArB,KAAwCA,cAAxC,IACA,CAACN,eAAe,CAACU,GAAD,CAAf,CAAqBC,aADtB,IAEA5D,IAAI,CAAC6D,iBAAL,CACEZ,eAAe,CAACU,GAAD,CAAf,CAAqBG,WAArB,GACIb,eAAe,CAACU,GAAD,CAAf,CAAqBG,WADzB,GAEIb,eAAe,CAACU,GAAD,CAAf,CAAqBI,cAH3B,EAIEX,KAJF,EAKEF,WALF,CAHF;AAWD,KAZM,EAYJc,MAZH;AAaD,GAdD,CALI,CAqBJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AAEA,QAAMzD,OAAO,GAAIgD,cAAD,IAAoB;AAClC,UAAMU,gBAAgB,GAAIC,mBAAD,IAAyB;AAChD,YAAMC,aAAa,GAAGlB,eAAe,CAACiB,mBAAD,CAArC;;AACA,UAAIC,aAAJ,EAAmB;AACjB,YAAI,CAACA,aAAa,CAACL,WAAnB,EAAgC;AAC9B,cAAIK,aAAa,CAACC,gBAAd,IAAkCD,aAAa,CAACJ,cAApD,EAAoE;AAClE,mBACE,IAAIV,IAAJ,CAASc,aAAa,CAACJ,cAAvB,EAAuCM,OAAvC,KAAmDjB,KAAnD,IACA,CAACe,aAAa,CAACP,aAFjB;AAID;AACF,SAPD,MAOO;AACL,iBACE,IAAIP,IAAJ,CAASc,aAAa,CAACL,WAAvB,EAAoCO,OAApC,KAAgDjB,KAAhD,IACA,CAACe,aAAa,CAACP,aAFjB;AAID;AACF,OAdD,MAcO;AACL,eAAO,KAAP;AACD;AACF,KAnBD;;AAqBA,UAAMU,WAAW,GAAGd,MAAM,CAACC,IAAP,CAAYR,eAAZ,EAA6BS,MAA7B,CAAqCC,GAAD,IAAS;AAC/D,aACEV,eAAe,CAACU,GAAD,CAAf,CAAqBJ,cAArB,KAAwCA,cAAxC,IACAvD,IAAI,CAAC6D,iBAAL,CACEZ,eAAe,CAACU,GAAD,CAAf,CAAqBG,WAArB,GACIb,eAAe,CAACU,GAAD,CAAf,CAAqBG,WADzB,GAEIb,eAAe,CAACU,GAAD,CAAf,CAAqBI,cAH3B,EAIEX,KAJF,EAKEF,WALF,CADA,IAQAe,gBAAgB,CAACN,GAAD,CATlB;AAWD,KAZmB,CAApB;;AAcA,QAAIW,WAAW,CAACN,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B3C,MAAAA,iBAAiB,CAACkC,cAAD,CAAjB,GAAoCe,WAApC;AACD;;AAED,WAAOA,WAAW,CAACN,MAAnB;AACD,GAzCD,CAhFI,CA2HJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,MAAIO,mBAAmB,GAAG,EAA1B;AACAf,EAAAA,MAAM,CAACC,IAAP,CAAYR,eAAZ,EAA6BuB,OAA7B,CAAsCC,IAAD,IAAU;AAC7CF,IAAAA,mBAAmB,CAACvC,IAApB,CAAyBiB,eAAe,CAACwB,IAAD,CAAxC;AACD,GAFD;AAIA,MAAIC,aAAa,GAAG1B,UAApB;AACAuB,EAAAA,mBAAmB,CAACC,OAApB,CAA6BC,IAAD,IAAU;AACpC,QAAIC,aAAa,CAACD,IAAI,CAAClB,cAAN,CAAjB,EAAwC;AACtCmB,MAAAA,aAAa,CAACD,IAAI,CAAClB,cAAN,CAAb,CAAmCoB,IAAnC,GAA0CF,IAAI,CAACE,IAA/C;AACD;AACF,GAJD;AAMA,MAAIC,cAAc,GAAG,EAArB;AACApB,EAAAA,MAAM,CAACC,IAAP,CAAYiB,aAAZ,EAA2BF,OAA3B,CAAoCC,IAAD,IAAU;AAC3CG,IAAAA,cAAc,CAAC5C,IAAf,CAAoB0C,aAAa,CAACD,IAAD,CAAjC;AACD,GAFD;AAIA,MAAII,WAAW,GAAG,EAAlB,CA5JI,CA8JJ;AAEA;AACA;AACA;AACA;AACA;;AAEAA,EAAAA,WAAW,GAAG9E,uBAAuB,CAACoD,IAAI,CAAC2B,YAAN,EAAoB3B,IAAI,CAAC4B,KAAL,CAAW,CAAX,CAApB,CAArC;AAEAH,EAAAA,cAAc,GAAGA,cAAc,CAC5BlB,MADc,CACNe,IAAD,IAAU;AAChB,WACE;AACAI,MAAAA,WAAW,CAACG,QAAZ,CAAqBP,IAAI,CAACxC,MAA1B;AAFF;AAID,GANc,EAOd0C,IAPc,CAOT,CAACM,CAAD,EAAIC,CAAJ,KAAWD,CAAC,CAACN,IAAF,GAAUM,CAAC,CAACN,IAAF,GAASO,CAAC,CAACP,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAAjC,GAAsC,CAPxC,CAAjB;AASA,SAAO;AACLrD,IAAAA,IAAI,EAAEsD,cAAc,CAAChD,GAAf,CAAoB6C,IAAD,IAAU;AACjC,aAAO,EACL,GAAGzB,UAAU,CAACyB,IAAI,CAACxC,MAAN,CADR;AAELF,QAAAA,KAAK,EAAEA,KAAK,CAAC0C,IAAI,CAACxC,MAAN,CAFP;AAGL1B,QAAAA,OAAO,EAAEA,OAAO,CAACkE,IAAI,CAACxC,MAAN,CAHX;AAILW,QAAAA,UAAU,EAAEb,KAAK,CAAC0C,IAAI,CAACxC,MAAN,CAAL,GAAqB1B,OAAO,CAACkE,IAAI,CAACxC,MAAN,CAJnC,CAKL;AACA;AACA;AACA;AACA;;AATK,OAAP;AAWD,KAZK,CADD;AAcLZ,IAAAA,iBAAiB,EAAEA;AAdd,GAAP;AAgBD,CAtMD;;AAwMA,MAAM8D,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL7D,IAAAA,oBAAoB,EAAGD,IAAD,IAAU;AAC9B8D,MAAAA,QAAQ,CAACxF,MAAM,CAAC2B,oBAAP,CAA4BD,IAA5B,CAAD,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAenB,OAAO,CAAC4C,eAAD,EAAkBoC,kBAAlB,CAAP,CAA6C9E,YAA7C,CAAf","sourcesContent":["import { Box, Card, Grid, Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as action from \"actions\";\r\nimport classnames from \"classnames\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport { showInActivityListSteps } from \"js/publicFn\";\r\nimport * as util from \"js/util\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ActivityList = withStyles(({ spacing }) => {\r\n  return {\r\n    overdue: {\r\n      backgroundColor: \"red\",\r\n      color: \"white\",\r\n    },\r\n    normal: {\r\n      backgroundColor: \"#9cea40\",\r\n      color: \"white\",\r\n    },\r\n    cardStyle: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      width: \"33%\",\r\n      padding: \"20px 0\",\r\n    },\r\n    grid: {\r\n      fontSize: \"14px\",\r\n      marginLeft: 1,\r\n    },\r\n  };\r\n})(({ classes, overdueActivities, data, setOverdueActivities }) => {\r\n  const history = useHistory();\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  const useOverdueActivities = (setOverdueActivities) => {\r\n    useEffect(() => {\r\n      setOverdueActivities(overdueActivities);\r\n    }, [setOverdueActivities]);\r\n  };\r\n\r\n  useOverdueActivities(setOverdueActivities);\r\n\r\n  return (\r\n    <Box>\r\n      {data.map((activity, index) => {\r\n        return activity.total > 0 ? (\r\n          <div key={index}>\r\n            <Card\r\n              elevation={0}\r\n              onClick={() => {\r\n                history.push(`/activity/${activity.number}`);\r\n              }}\r\n              style={{ margin: \"8px 0\", borderRadius: \"0\" }}\r\n            >\r\n              <Box\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  height: 80,\r\n                }}\r\n              >\r\n                <Box\r\n                  style={{ width: \"1%\" }}\r\n                  className={classnames({\r\n                    [`${classes.overdue}`]: activity.overdue > 0,\r\n                    [`${classes.normal}`]: activity.overdue <= 0,\r\n                  })}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: `2px`,\r\n                      height: `80px`,\r\n                    }}\r\n                  ></div>\r\n                </Box>\r\n                <Grid container spacing={3} className={classes.grid}>\r\n                  <Grid item xs={5}>\r\n                    <Typography style={{ fontWeight: \"bold\" }}>\r\n                      {activity.number}\r\n                    </Typography>\r\n                    <Box>\r\n                      {activity.descriptionShort3\r\n                        ? activity.descriptionShort3 + \"-扶梯\"\r\n                        : activity.descriptionShort}\r\n                    </Box>\r\n                    <Box>\r\n                      {activity.descriptionShort14\r\n                        ? activity.descriptionShort14 + \"-电梯\"\r\n                        : \"\"}\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item style={{ textAlign: \"center\" }} xs={2}>\r\n                    <Typography color=\"secondary\">{activity.total}</Typography>\r\n                    <Box>{i18n.INSTAPP_JOBLIST_ACTIVITY_SUM}</Box>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    style={{ textAlign: \"center\", padding: \"12px 9px\" }}\r\n                    xs={2}\r\n                  >\r\n                    <Typography color=\"secondary\">\r\n                      {activity.notOverdue}\r\n                    </Typography>\r\n                    <Box>{i18n.INSTALLATION_FUTURE}</Box>\r\n                  </Grid>\r\n                  <Grid item style={{ textAlign: \"center\" }} xs={2}>\r\n                    <Typography color=\"secondary\">\r\n                      {activity.overdue}\r\n                    </Typography>\r\n                    <Box>{i18n.INSTAPP_JOBLIST_ACTIVITY_OVERDUE}</Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Card>\r\n          </div>\r\n        ) : null;\r\n      })}\r\n    </Box>\r\n  );\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  activities,\r\n  orderActivities,\r\n  timeHorizon,\r\n  auth,\r\n}) => {\r\n  const today = new Date().setHours(0, 0, 0, 0);\r\n  // const hideInProgress = auth.activityAuth.hideInProgress;\r\n  let overdueActivities = {};\r\n\r\n  const total = (activityNumber) => {\r\n    return Object.keys(orderActivities).filter((key) => {\r\n      return (\r\n        orderActivities[key].activityNumber === activityNumber &&\r\n        !orderActivities[key].confirmedDate &&\r\n        util.timeHorizonFilter(\r\n          orderActivities[key].leadingDate\r\n            ? orderActivities[key].leadingDate\r\n            : orderActivities[key].leadingEndDate,\r\n          today,\r\n          timeHorizon\r\n        )\r\n      );\r\n    }).length;\r\n  };\r\n\r\n  // const overdue = (activityNumber) => {\r\n  //   const calculateOverdue = (orderActivityNumber) => {\r\n  //     if (orderActivities[orderActivityNumber]) {\r\n  //       return (\r\n  //         new Date(orderActivities[orderActivityNumber].leadingDate).getTime() <\r\n  //           today && !orderActivities[orderActivityNumber].confirmedDate\r\n  //       );\r\n  //     } else {\r\n  //       return false;\r\n  //     }\r\n  //   };\r\n\r\n  //   const overdueList = Object.keys(orderActivities).filter((key) => {\r\n  //     let passedActivity = false;\r\n\r\n  //     if (orderActivities[key].activityNumber !== activitiesList[0].number) {\r\n  //       if (orderActivities[key].activityNumber === activityNumber) {\r\n  //         let currentActivityIndex = 0;\r\n  //         const orderNumber = orderActivities[key].orderNumber;\r\n\r\n  //         activitiesList.forEach((item, activityIndex) => {\r\n  //           if (item.number === activityNumber) {\r\n  //             currentActivityIndex = activityIndex;\r\n  //           }\r\n  //         });\r\n\r\n  //         activitiesList.forEach((item, index) => {\r\n  //           if (index < currentActivityIndex) {\r\n  //             if (calculateOverdue(orderNumber + \"-\" + item.number)) {\r\n  //               passedActivity = calculateOverdue(\r\n  //                 orderNumber + \"-\" + item.number\r\n  //               );\r\n  //             }\r\n  //           }\r\n  //         });\r\n  //       }\r\n  //     } else {\r\n  //       passedActivity = false;\r\n  //     }\r\n\r\n  //     return (\r\n  //       orderActivities[key].activityNumber === activityNumber &&\r\n  //       util.timeHorizonFilter(\r\n  //         orderActivities[key].leadingDate,\r\n  //         today,\r\n  //         timeHorizon\r\n  //       ) &&\r\n  //       calculateOverdue(key) &&\r\n  //       !passedActivity\r\n  //     );\r\n  //   });\r\n\r\n  //   if (overdueList.length > 0) {\r\n  //     overdueActivities[activityNumber] = overdueList;\r\n  //   }\r\n\r\n  //   return overdueList.length;\r\n  // };\r\n\r\n  const overdue = (activityNumber) => {\r\n    const calculateOverdue = (orderActivityNumber) => {\r\n      const orderActivity = orderActivities[orderActivityNumber];\r\n      if (orderActivity) {\r\n        if (!orderActivity.leadingDate) {\r\n          if (orderActivity.leadingStartDate && orderActivity.leadingEndDate) {\r\n            return (\r\n              new Date(orderActivity.leadingEndDate).getTime() < today &&\r\n              !orderActivity.confirmedDate\r\n            );\r\n          }\r\n        } else {\r\n          return (\r\n            new Date(orderActivity.leadingDate).getTime() < today &&\r\n            !orderActivity.confirmedDate\r\n          );\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    const overdueList = Object.keys(orderActivities).filter((key) => {\r\n      return (\r\n        orderActivities[key].activityNumber === activityNumber &&\r\n        util.timeHorizonFilter(\r\n          orderActivities[key].leadingDate\r\n            ? orderActivities[key].leadingDate\r\n            : orderActivities[key].leadingEndDate,\r\n          today,\r\n          timeHorizon\r\n        ) &&\r\n        calculateOverdue(key)\r\n      );\r\n    });\r\n\r\n    if (overdueList.length > 0) {\r\n      overdueActivities[activityNumber] = overdueList;\r\n    }\r\n\r\n    return overdueList.length;\r\n  };\r\n\r\n  // const notOverdue = (total, overdue, activityNumber) => {\r\n  //   const confirmedCount = Object.keys(orderActivities).filter((key) => {\r\n  //     return (\r\n  //       orderActivities[key].activityNumber === activityNumber &&\r\n  //       util.timeHorizonFilter(\r\n  //         orderActivities[key].leadingDate,\r\n  //         today,\r\n  //         timeHorizon\r\n  //       ) &&\r\n  //       orderActivities[key].confirmedDate\r\n  //     );\r\n  //   }).length;\r\n\r\n  //   return total - overdue - confirmedCount;\r\n  // };\r\n\r\n  var orderActivitiesList = [];\r\n  Object.keys(orderActivities).forEach((item) => {\r\n    orderActivitiesList.push(orderActivities[item]);\r\n  });\r\n\r\n  var activitiesObj = activities;\r\n  orderActivitiesList.forEach((item) => {\r\n    if (activitiesObj[item.activityNumber]) {\r\n      activitiesObj[item.activityNumber].sort = item.sort;\r\n    }\r\n  });\r\n\r\n  var activitiesList = [];\r\n  Object.keys(activitiesObj).forEach((item) => {\r\n    activitiesList.push(activitiesObj[item]);\r\n  });\r\n\r\n  let showStepNos = [];\r\n\r\n  // let rolesMapper = { sc: \"Subcon TL\", pe: \"PE\" };\r\n\r\n  // Object.keys(auth.activityAuth).forEach((name) => {\r\n  //   if (auth.roles.indexOf(rolesMapper[name.substring(0, 2)]) > -1) {\r\n  //     showStepNos = showStepNos.concat(auth.activityAuth[name]);\r\n  //   }\r\n  // });\r\n\r\n  showStepNos = showInActivityListSteps(auth.activityAuth, auth.roles[0]);\r\n\r\n  activitiesList = activitiesList\r\n    .filter((item) => {\r\n      return (\r\n        // !hideInProgress.includes(item.number) ||\r\n        showStepNos.includes(item.number)\r\n      );\r\n    })\r\n    .sort((a, b) => (a.sort ? (a.sort > b.sort ? 1 : -1) : 1));\r\n\r\n  return {\r\n    data: activitiesList.map((item) => {\r\n      return {\r\n        ...activities[item.number],\r\n        total: total(item.number),\r\n        overdue: overdue(item.number),\r\n        notOverdue: total(item.number) - overdue(item.number),\r\n        // notOverdue: notOverdue(\r\n        //   total(item.number),\r\n        //   overdue(item.number),\r\n        //   item.number\r\n        // ),\r\n      };\r\n    }),\r\n    overdueActivities: overdueActivities,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setOverdueActivities: (data) => {\r\n      dispatch(action.setOverdueActivities(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityList);\r\n"]},"metadata":{},"sourceType":"module"}
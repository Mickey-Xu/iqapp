{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\SwitchLanguage\\\\index.js\";\nimport { MenuItem, Select, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as action from \"actions\";\nimport { db } from \"js/db\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nconst SwitchLanguage = withStyles(() => {\n  return {\n    root: {\n      minWidth: \"120px\"\n    }\n  };\n})(({\n  classes,\n  setLanguage,\n  language,\n  menuItemData\n}) => {\n  return /*#__PURE__*/React.createElement(Select, {\n    className: classes.root,\n    onChange: e => setLanguage(e.target.value),\n    value: language,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, menuItemData.map((item, index) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: item.value,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, item.label));\n  }));\n});\nexport default connect(({\n  settings: {\n    language\n  }\n}) => {\n  return {\n    language\n  };\n}, dispatch => {\n  return {\n    setLanguage: languageType => {\n      db.cache.put({\n        id: \"settings\",\n        data: {\n          language: languageType\n        }\n      }).then(() => {\n        dispatch(action.setLanguage(languageType));\n      });\n    }\n  };\n})(SwitchLanguage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/SwitchLanguage/index.js"],"names":["MenuItem","Select","Typography","withStyles","action","db","React","connect","SwitchLanguage","root","minWidth","classes","setLanguage","language","menuItemData","e","target","value","map","item","index","label","settings","dispatch","languageType","cache","put","id","data","then"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAO,KAAKC,MAAZ,MAAwB,SAAxB;AACA,SAASC,EAAT,QAAmB,OAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,MAAMC,cAAc,GAAGL,UAAU,CAAC,MAAM;AACtC,SAAO;AACLM,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN;AADD,GAAP;AAKD,CANgC,CAAV,CAMpB,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,WAAX;AAAwBC,EAAAA,QAAxB;AAAkCC,EAAAA;AAAlC,CAAD,KAAsD;AACvD,sBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEH,OAAO,CAACF,IADrB;AAEE,IAAA,QAAQ,EAAGM,CAAD,IAAOH,WAAW,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAF9B;AAGE,IAAA,KAAK,EAAEJ,QAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGC,YAAY,CAACI,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,wBACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAED,IAAI,CAACF,KAAtB;AAA6B,MAAA,GAAG,EAAEG,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAgC,MAAA,KAAK,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,KADR,CADF,CADF;AAOD,GARA,CALH,CADF;AAiBD,CAxBsB,CAAvB;AA0BA,eAAed,OAAO,CACpB,CAAC;AAAEe,EAAAA,QAAQ,EAAE;AAAET,IAAAA;AAAF;AAAZ,CAAD,KAAgC;AAC9B,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CALmB,EAMnBU,QAAD,IAAc;AACZ,SAAO;AACLX,IAAAA,WAAW,EAAGY,YAAD,IAAkB;AAC7BnB,MAAAA,EAAE,CAACoB,KAAH,CACGC,GADH,CACO;AACHC,QAAAA,EAAE,EAAE,UADD;AAEHC,QAAAA,IAAI,EAAE;AAAEf,UAAAA,QAAQ,EAAEW;AAAZ;AAFH,OADP,EAKGK,IALH,CAKQ,MAAM;AACVN,QAAAA,QAAQ,CAACnB,MAAM,CAACQ,WAAP,CAAmBY,YAAnB,CAAD,CAAR;AACD,OAPH;AAQD;AAVI,GAAP;AAYD,CAnBmB,CAAP,CAoBbhB,cApBa,CAAf","sourcesContent":["import { MenuItem, Select, Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as action from \"actions\";\r\nimport { db } from \"js/db\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SwitchLanguage = withStyles(() => {\r\n  return {\r\n    root: {\r\n      minWidth: \"120px\",\r\n    },\r\n  };\r\n})(({ classes, setLanguage, language, menuItemData }) => {\r\n  return (\r\n    <Select\r\n      className={classes.root}\r\n      onChange={(e) => setLanguage(e.target.value)}\r\n      value={language}\r\n    >\r\n      {menuItemData.map((item, index) => {\r\n        return (\r\n          <MenuItem value={item.value} key={index}>\r\n            <Typography variant=\"subtitle1\" align=\"center\">\r\n              {item.label}\r\n            </Typography>\r\n          </MenuItem>\r\n        );\r\n      })}\r\n    </Select>\r\n  );\r\n});\r\n\r\nexport default connect(\r\n  ({ settings: { language } }) => {\r\n    return {\r\n      language,\r\n    };\r\n  },\r\n  (dispatch) => {\r\n    return {\r\n      setLanguage: (languageType) => {\r\n        db.cache\r\n          .put({\r\n            id: \"settings\",\r\n            data: { language: languageType },\r\n          })\r\n          .then(() => {\r\n            dispatch(action.setLanguage(languageType));\r\n          });\r\n      },\r\n    };\r\n  }\r\n)(SwitchLanguage);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TemplateForm\\\\Photo\\\\index.js\";\n// import { Box, FormLabel, makeStyles, Typography } from \"@material-ui/core\";\n// import Compressor from \"compressorjs\";\n// import { LocalizeContext } from \"i18n\";\n// import { fillTextToImg } from \"js/util\";\n// import React, { useRef, useState } from \"react\";\n// import { useParams } from 'react-router-dom';\n// const useStyles = makeStyles(({ spacing }) => ({\n//   btm: {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     margin: spacing(1, 1, 0, 1),\n//   },\n//   root: {\n//     display: \"grid\",\n//     padding: spacing(1, 0),\n//     borderBottom: \" 1px solid #e0e0e0\",\n//     backgroundColor: \"#FFF\",\n//   },\n//   lable: {\n//     margin: spacing(0, 0, 1, 0),\n//     color: \"rgba(0, 0, 0, 0.87)\",\n//   },\n//   inputFile: {\n//     width: \"0.1px\",\n//     height: \"0.1px\",\n//     opacity: 0,\n//     overflow: \"hidden\",\n//     position: \"absolute\",\n//     top: \"0\",\n//     zIndex: -1,\n//   },\n//   file: {\n//     height: \"160px\",\n//     position: \"relative\",\n//     overflow: \"hidden\",\n//     textAlign: \"center\",\n//   },\n// }));\n// export const Photo = (props) => {\n//   const i18n = React.useContext(LocalizeContext);\n//   const classes = useStyles();\n//   const [photoStyle, setPhotoStyle] = useState({\n//     width: \"auto\",\n//     height: \"100%\",\n//   });\n//   const photoEl = useRef(null);\n//   const iptRef = useRef(null);\n//   const projectData = useParams();\n//   const onPhotoChange = (e) => {\n//     const fileReader = new FileReader();\n//     const file = e.target.files[0];\n//     const isCamera = e.target.value.includes('camera');\n//     console.log(isCamera ? '用户选择了拍照' : '用户选择了本地图片');\n//     fileReader.onloadend = (e) => {\n//       const photo = e.target.result; \n//       if (projectData?.activityNo === \"7030\" && props?.identifier === \"photoJ\" && props?.identifier === \"photoP\") {\n//         fillTextToImg(photo, projectData).then((res) => {\n//           props.onChange(res);\n//         })\n//       } else {\n//         props.onChange(photo);\n//       }\n//       const i = new Image();\n//       i.onload = () => {\n//         setPhotoStyle({\n//           // width: photoEl.current.clientWidth,\n//           // height: (photoEl.current.clientWidth / i.width) * i.height,\n//           width: \"auto\",\n//           height: \"100%\",\n//         });\n//       };\n//       i.src = photo;\n//     };\n//     if (file) {\n//       new Compressor(file, {\n//         quality: 0.2,\n//         convertSize: 400000,\n//         success(result) {\n//           fileReader.readAsDataURL(result);\n//         },\n//         error(err) {\n//           console.log(err.message);\n//         },\n//       });\n//     } else {\n//       props.onChange(\"#\");\n//     }\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <Typography variant=\"subtitle2\" className={classes.lable}>\n//         {props.label}\n//       </Typography>\n//       <div>\n//         <input\n//           className={classes.inputFile}\n//           type=\"file\"\n//           accept=\"image/x-png,image/jpeg,image/gif\"\n//           id={props.id}\n//           ref={iptRef}\n//           onChange={onPhotoChange}\n//         />\n//       </div>\n//       <div>\n//         {/* <Typography variant=\"body2\">{props.description}</Typography> */}\n//         <FormLabel required={props.required}>\n//           <Typography\n//             component=\"span\"\n//             variant=\"subtitle2\"\n//             className={classes.lable}\n//           >\n//             {props.description}\n//           </Typography>\n//         </FormLabel>\n//       </div>\n//       <Box border={1} className={classes.file}>\n//         <img src={props.value} style={photoStyle} ref={photoEl} alt=\"\" />\n//       </Box>\n//       <Box className={classes.btm}>\n//         <Typography\n//           color=\"secondary\"\n//           variant=\"body2\"\n//           onClick={() => {\n//             props.onChange(\"#\");\n//             iptRef.current.value = \"\";\n//           }}\n//         >\n//           {i18n.ISNTAPP_DELETE}\n//         </Typography>\n//         <label htmlFor={props.id}>\n//           <Typography color=\"secondary\" variant=\"body2\">\n//             {i18n.ISNTAPP_IMPORT_PICTURES}\n//           </Typography>\n//         </label>\n//       </Box>\n//     </div>\n//   );\n// };\nimport React, { useRef, useState } from 'react';\nexport const Photo = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n  const [imageSrc, setImageSrc] = useState(null);\n  const fileInputRef = useRef(null);\n\n  const handleCameraSelect = event => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setImageSrc(imageUrl); // 在这里可以添加处理图像的逻辑\n\n      stopCamera();\n    }\n  };\n\n  const stopCamera = () => {\n    var _videoRef$current;\n\n    const stream = (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.srcObject;\n\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n    }\n\n    videoRef.current.srcObject = null;\n    setIsCameraActive(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    accept: \"image/*\",\n    capture: \"camera\",\n    style: {\n      display: 'none'\n    },\n    onChange: handleCameraSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => fileInputRef.current.click(),\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, \"\\u5F00\\u542F\\u76F8\\u673A\"), imageSrc && /*#__PURE__*/React.createElement(\"img\", {\n    src: imageSrc,\n    alt: \"\\u9884\\u89C8\",\n    style: {\n      maxWidth: '100%',\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }), imageSrc && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '25%',\n      left: '25%',\n      width: '50%',\n      height: '50%',\n      border: '1px dashed red',\n      pointerEvents: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  })));\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TemplateForm/Photo/index.js"],"names":["React","useRef","useState","Photo","videoRef","canvasRef","isCameraActive","setIsCameraActive","imageSrc","setImageSrc","fileInputRef","handleCameraSelect","event","file","target","files","imageUrl","URL","createObjectURL","stopCamera","stream","current","srcObject","getTracks","forEach","track","stop","textAlign","display","click","marginBottom","maxWidth","marginTop","position","top","left","width","height","border","pointerEvents"],"mappingsgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,QAAMC,QAAQ,GAAGH,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMI,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACK,cAAD,EAAiBC,iBAAjB,IAAsCL,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAMQ,YAAY,GAAGT,MAAM,CAAC,IAAD,CAA3B;;AAEA,QAAMU,kBAAkB,GAAIC,KAAD,IAAW;AACpC,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;;AACA,QAAIF,IAAJ,EAAU;AACR,YAAMG,QAAQ,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAjB;AACAJ,MAAAA,WAAW,CAACO,QAAD,CAAX,CAFQ,CAGR;;AACAG,MAAAA,UAAU;AACX;AACF,GARD;;AAUA,QAAMA,UAAU,GAAG,MAAM;AAAA;;AACvB,UAAMC,MAAM,wBAAGhB,QAAQ,CAACiB,OAAZ,sDAAG,kBAAkBC,SAAjC;;AACA,QAAIF,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACG,SAAP,GAAmBC,OAAnB,CAA2BC,KAAK,IAAIA,KAAK,CAACC,IAAN,EAApC;AACD;;AACDtB,IAAAA,QAAQ,CAACiB,OAAT,CAAiBC,SAAjB,GAA6B,IAA7B;AACAf,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAPD;;AASA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEoB,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEjB,YADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,OAAO,EAAC,QAJV;AAKE,IAAA,KAAK,EAAE;AAAEkB,MAAAA,OAAO,EAAE;AAAX,KALT;AAME,IAAA,QAAQ,EAAEjB,kBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAQ,IAAA,OAAO,EAAE,MAAMD,YAAY,CAACW,OAAb,CAAqBQ,KAArB,EAAvB;AAAqD,IAAA,KAAK,EAAE;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCATF,EAaGtB,QAAQ,iBACP;AAAK,IAAA,GAAG,EAAEA,QAAV;AAAoB,IAAA,GAAG,EAAC,cAAxB;AAA6B,IAAA,KAAK,EAAE;AAAEuB,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EAkBGxB,QAAQ,iBACP;AAAK,IAAA,KAAK,EAAE;AACVyB,MAAAA,QAAQ,EAAE,UADA;AAEVL,MAAAA,OAAO,EAAE;AAFC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,KAAK,EAAE;AACVK,MAAAA,QAAQ,EAAE,UADA;AAEVC,MAAAA,GAAG,EAAE,KAFK;AAGVC,MAAAA,IAAI,EAAE,KAHI;AAIVC,MAAAA,KAAK,EAAE,KAJG;AAKVC,MAAAA,MAAM,EAAE,KALE;AAMVC,MAAAA,MAAM,EAAE,gBANE;AAOVC,MAAAA,aAAa,EAAE;AAPL,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAnBJ,CADF;AAqCD,CA/DM","sourcesContent":["// import { Box, FormLabel, makeStyles, Typography } from \"@material-ui/core\";\r\n// import Compressor from \"compressorjs\";\r\n// import { LocalizeContext } from \"i18n\";\r\n// import { fillTextToImg } from \"js/util\";\r\n// import React, { useRef, useState } from \"react\";\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles(({ spacing }) => ({\r\n//   btm: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"space-between\",\r\n//     margin: spacing(1, 1, 0, 1),\r\n//   },\r\n//   root: {\r\n//     display: \"grid\",\r\n//     padding: spacing(1, 0),\r\n//     borderBottom: \" 1px solid #e0e0e0\",\r\n//     backgroundColor: \"#FFF\",\r\n//   },\r\n//   lable: {\r\n//     margin: spacing(0, 0, 1, 0),\r\n//     color: \"rgba(0, 0, 0, 0.87)\",\r\n//   },\r\n//   inputFile: {\r\n//     width: \"0.1px\",\r\n//     height: \"0.1px\",\r\n//     opacity: 0,\r\n//     overflow: \"hidden\",\r\n//     position: \"absolute\",\r\n//     top: \"0\",\r\n//     zIndex: -1,\r\n//   },\r\n//   file: {\r\n//     height: \"160px\",\r\n//     position: \"relative\",\r\n//     overflow: \"hidden\",\r\n//     textAlign: \"center\",\r\n//   },\r\n// }));\r\n\r\n// export const Photo = (props) => {\r\n//   const i18n = React.useContext(LocalizeContext);\r\n//   const classes = useStyles();\r\n//   const [photoStyle, setPhotoStyle] = useState({\r\n//     width: \"auto\",\r\n//     height: \"100%\",\r\n//   });\r\n//   const photoEl = useRef(null);\r\n//   const iptRef = useRef(null);\r\n//   const projectData = useParams();\r\n//   const onPhotoChange = (e) => {\r\n//     const fileReader = new FileReader();\r\n//     const file = e.target.files[0];\r\n//     const isCamera = e.target.value.includes('camera');\r\n//     console.log(isCamera ? '用户选择了拍照' : '用户选择了本地图片');\r\n\r\n//     fileReader.onloadend = (e) => {\r\n//       const photo = e.target.result; \r\n//       if (projectData?.activityNo === \"7030\" && props?.identifier === \"photoJ\" && props?.identifier === \"photoP\") {\r\n//         fillTextToImg(photo, projectData).then((res) => {\r\n//           props.onChange(res);\r\n//         })\r\n//       } else {\r\n//         props.onChange(photo);\r\n//       }\r\n\r\n//       const i = new Image();\r\n//       i.onload = () => {\r\n//         setPhotoStyle({\r\n//           // width: photoEl.current.clientWidth,\r\n//           // height: (photoEl.current.clientWidth / i.width) * i.height,\r\n//           width: \"auto\",\r\n//           height: \"100%\",\r\n//         });\r\n//       };\r\n//       i.src = photo;\r\n//     };\r\n//     if (file) {\r\n//       new Compressor(file, {\r\n//         quality: 0.2,\r\n//         convertSize: 400000,\r\n//         success(result) {\r\n//           fileReader.readAsDataURL(result);\r\n//         },\r\n//         error(err) {\r\n//           console.log(err.message);\r\n//         },\r\n//       });\r\n//     } else {\r\n//       props.onChange(\"#\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Typography variant=\"subtitle2\" className={classes.lable}>\r\n//         {props.label}\r\n//       </Typography>\r\n//       <div>\r\n//         <input\r\n//           className={classes.inputFile}\r\n//           type=\"file\"\r\n//           accept=\"image/x-png,image/jpeg,image/gif\"\r\n//           id={props.id}\r\n//           ref={iptRef}\r\n//           onChange={onPhotoChange}\r\n//         />\r\n//       </div>\r\n//       <div>\r\n//         {/* <Typography variant=\"body2\">{props.description}</Typography> */}\r\n//         <FormLabel required={props.required}>\r\n//           <Typography\r\n//             component=\"span\"\r\n//             variant=\"subtitle2\"\r\n//             className={classes.lable}\r\n//           >\r\n//             {props.description}\r\n//           </Typography>\r\n//         </FormLabel>\r\n//       </div>\r\n//       <Box border={1} className={classes.file}>\r\n//         <img src={props.value} style={photoStyle} ref={photoEl} alt=\"\" />\r\n//       </Box>\r\n//       <Box className={classes.btm}>\r\n//         <Typography\r\n//           color=\"secondary\"\r\n//           variant=\"body2\"\r\n//           onClick={() => {\r\n//             props.onChange(\"#\");\r\n//             iptRef.current.value = \"\";\r\n//           }}\r\n//         >\r\n//           {i18n.ISNTAPP_DELETE}\r\n//         </Typography>\r\n//         <label htmlFor={props.id}>\r\n//           <Typography color=\"secondary\" variant=\"body2\">\r\n//             {i18n.ISNTAPP_IMPORT_PICTURES}\r\n//           </Typography>\r\n//         </label>\r\n//       </Box>\r\n//     </div>\r\n//   );\r\n// };\r\nimport React, { useRef, useState } from 'react';\r\n\r\nexport const Photo = () => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleCameraSelect = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const imageUrl = URL.createObjectURL(file);\r\n      setImageSrc(imageUrl);\r\n      // 在这里可以添加处理图像的逻辑\r\n      stopCamera();\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    const stream = videoRef.current?.srcObject;\r\n    if (stream) {\r\n      stream.getTracks().forEach(track => track.stop());\r\n    }\r\n    videoRef.current.srcObject = null;\r\n    setIsCameraActive(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <input\r\n        ref={fileInputRef}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        capture=\"camera\"\r\n        style={{ display: 'none' }}\r\n        onChange={handleCameraSelect}\r\n      />\r\n      <button onClick={() => fileInputRef.current.click()} style={{ marginBottom: '10px' }}>\r\n        开启相机\r\n      </button>\r\n\r\n      {imageSrc && (\r\n        <img src={imageSrc} alt=\"预览\" style={{ maxWidth: '100%', marginTop: '10px' }} />\r\n      )}\r\n\r\n      {/* 定位框（可以根据需求调整位置和大小） */}\r\n      {imageSrc && (\r\n        <div style={{\r\n          position: 'relative',\r\n          display: 'inline-block',\r\n        }}>\r\n          <div style={{\r\n            position: 'absolute',\r\n            top: '25%',\r\n            left: '25%',\r\n            width: '50%',\r\n            height: '50%',\r\n            border: '1px dashed red',\r\n            pointerEvents: 'none'\r\n          }} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}
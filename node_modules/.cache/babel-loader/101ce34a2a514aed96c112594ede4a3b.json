{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\TaskGroupPage\\\\index.js\";\nimport { Box } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { AssignmentOutlined, ChevronRight } from \"@material-ui/icons\";\nimport { LocalizeContext } from \"i18n\";\nimport { getAwaitComplateAwaitCloseCount } from \"js/util\";\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nconst TaskManagermentPage = withStyles(({\n  spacing\n}) => {\n  return {\n    root: {\n      width: `calc(100% - 16px)`,\n      height: `calc(100% - 16px)`,\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin: \"8px\"\n    },\n    itemBox: {\n      width: \"100%\",\n      padding: \"4px\",\n      margin: \"4px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      borderBottom: \"1px solid darkgray\"\n    },\n    itemIcon: {\n      width: `24px`,\n      color: \"rgb(220,0,0)\",\n      paddingTop: \"4px\",\n      margin: \"0 4px\"\n    },\n    discriptionBox: {\n      width: `calc(100% - 54px)`\n    },\n    iconBox: {\n      paddingTop: \"6px\",\n      width: \"6px\",\n      color: \"rgb(220,0,0)\"\n    },\n    discription: {\n      padding: spacing(0.5, 1),\n      backgroundColor: \"red\",\n      borderRadius: \"30px\",\n      color: \"white\",\n      marginLeft: spacing(1)\n    }\n  };\n})(({\n  classes,\n  taskDataGroup\n}) => {\n  const history = useHistory();\n  const i18n = React.useContext(LocalizeContext);\n  const tasks = taskDataGroup.filter((task, index, self) => index === self.findIndex(t => t.taskType === task.taskType));\n\n  const getToken = () => {\n    const data = {\n      \"AppId\": \"SCF.IQAPP\",\n      \"UserName\": \"IQAPP\",\n      \"Password\": \"YtLPPMGa9YUkGsJZNYJA8\"\n    };\n    axios.post(\"https://ldp.sodec.cn\", data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      console.log('Response:', response.data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(PrimaryLayout, {\n    name: \"TasksGroupPage\",\n    title: i18n.INSTAPP_JOBLIST_TASKS,\n    pageLevel: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, tasks.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: classes.itemBox,\n      onClick: () => {\n        // history.push(`/taskList/${item.taskType}`);\n        getToken();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: classes.itemIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AssignmentOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      className: classes.discriptionBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, item.taskType, item.awaitStartNum + item.awaitCloseNum + item.awaitComplateNum > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.discription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, item.awaitStartNum + item.awaitCloseNum + item.awaitComplateNum)), /*#__PURE__*/React.createElement(Box, {\n      className: classes.iconBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ChevronRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    })));\n  })));\n});\nexport default connect((state, props) => {\n  let tasks = Object.keys(state === null || state === void 0 ? void 0 : state.tasks).length > 0 ? state === null || state === void 0 ? void 0 : state.tasks : [];\n  const taskList = getAwaitComplateAwaitCloseCount(tasks);\n  return {\n    taskDataGroup: taskList\n  };\n})(TaskManagermentPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/TaskGroupPage/index.js"],"names":["Box","withStyles","AssignmentOutlined","ChevronRight","LocalizeContext","getAwaitComplateAwaitCloseCount","PrimaryLayout","React","connect","useHistory","axios","TaskManagermentPage","spacing","root","width","height","display","flexDirection","margin","itemBox","padding","alignItems","borderBottom","itemIcon","color","paddingTop","discriptionBox","iconBox","discription","backgroundColor","borderRadius","marginLeft","classes","taskDataGroup","history","i18n","useContext","tasks","filter","task","index","self","findIndex","t","taskType","getToken","data","post","headers","then","response","console","log","catch","error","INSTAPP_JOBLIST_TASKS","map","item","awaitStartNum","awaitCloseNum","awaitComplateNum","state","props","Object","keys","length","taskList"],"mappings":"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","sourcesContent":["import { Box } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { AssignmentOutlined, ChevronRight } from \"@material-ui/icons\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport { getAwaitComplateAwaitCloseCount } from \"js/util\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst TaskManagermentPage = withStyles(({ spacing }) => {\r\n  return {\r\n    root: {\r\n      width: `calc(100% - 16px)`,\r\n      height: `calc(100% - 16px)`,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      margin: \"8px\",\r\n    },\r\n    itemBox: {\r\n      width: \"100%\",\r\n      padding: \"4px\",\r\n      margin: \"4px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      borderBottom: \"1px solid darkgray\",\r\n    },\r\n    itemIcon: {\r\n      width: `24px`,\r\n      color: \"rgb(220,0,0)\",\r\n      paddingTop: \"4px\",\r\n      margin: \"0 4px\",\r\n    },\r\n    discriptionBox: {\r\n      width: `calc(100% - 54px)`,\r\n    },\r\n    iconBox: {\r\n      paddingTop: \"6px\",\r\n      width: \"6px\",\r\n      color: \"rgb(220,0,0)\",\r\n    },\r\n    discription: {\r\n      padding: spacing(0.5, 1),\r\n      backgroundColor: \"red\",\r\n      borderRadius: \"30px\",\r\n      color: \"white\",\r\n      marginLeft: spacing(1),\r\n    },\r\n  };\r\n})(({ classes, taskDataGroup }) => {\r\n  const history = useHistory();\r\n  const i18n = React.useContext(LocalizeContext);\r\n  const tasks = taskDataGroup.filter((task, index, self) =>\r\n    index === self.findIndex(t => t.taskType === task.taskType)\r\n  );\r\n\r\n\r\n  const getToken= () => {\r\n        const data = {\r\n          \"AppId\": \"SCF.IQAPP\",\r\n          \"UserName\": \"IQAPP\",\r\n          \"Password\": \"YtLPPMGa9YUkGsJZNYJA8\"\r\n        }\r\n\r\n    axios.post(\"https://ldp.sodec.cn\", data, {\r\n      headers: { \"Content-Type\": \"application/json\" } \r\n    })\r\n      .then(response => {\r\n        console.log('Response:', response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n\r\n}\r\n\r\n  return (\r\n    <PrimaryLayout\r\n      name=\"TasksGroupPage\"\r\n      title={i18n.INSTAPP_JOBLIST_TASKS}\r\n      pageLevel={1}\r\n    >\r\n      <Box className={classes.root}>\r\n        {tasks.map((item,index) => {\r\n          return <Box\r\n            key={index}\r\n            className={classes.itemBox}\r\n            onClick={() => {\r\n              // history.push(`/taskList/${item.taskType}`);\r\n              getToken()\r\n            }}\r\n          >\r\n            <Box className={classes.itemIcon}>\r\n              <AssignmentOutlined />\r\n            </Box>\r\n            <Box className={classes.discriptionBox}>\r\n              {item.taskType}\r\n              {(item.awaitStartNum +item.awaitCloseNum + item.awaitComplateNum) > 0 && (\r\n                <span className={classes.discription}>{item.awaitStartNum +item.awaitCloseNum + item.awaitComplateNum}</span>\r\n              )}\r\n            </Box>\r\n            <Box className={classes.iconBox}>\r\n              <ChevronRight />\r\n            </Box>\r\n          </Box>\r\n        })}\r\n      \r\n      </Box>\r\n    </PrimaryLayout>\r\n  );\r\n});\r\nexport default connect((state, props) => {\r\n  let tasks = Object.keys(state?.tasks).length > 0 ? state?.tasks : [];\r\n  const taskList = getAwaitComplateAwaitCloseCount(tasks);\r\n  return {\r\n    taskDataGroup: taskList\r\n  };\r\n})(TaskManagermentPage);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\nimport { appendChild, appendQuestionBlock, hasChildNode, readQuestionBlock, getRequiredAttr, getChildNode } from \"./utils/xml\";\nexport default {\n  serialize(doc, findField, parentNode, field) {\n    const {\n      initialValue\n    } = field.settings;\n    const questionBlock = appendQuestionBlock(doc, findField, parentNode, \"boolean\", field);\n    questionBlock.setAttribute(\"value\", initialValue);\n    appendChild(doc, questionBlock, \"checkbox\", null, {\n      value: field.settings.value\n    });\n  },\n\n  canDeserialize(node) {\n    return node.nodeName === \"question_block\" && hasChildNode(node, \"checkbox\");\n  },\n\n  deserialize(node) {\n    let field = readQuestionBlock(node, \"yesNo\", \"boolean\"); // eslint-disable-line prefer-const\n\n    const checkboxNode = getChildNode(node, \"checkbox\");\n    field.settings.initialValue = getRequiredAttr(checkboxNode, \"value\") === \"true\";\n    return field;\n  }\n\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/YesNoIO.js"],"names":["appendChild","appendQuestionBlock","hasChildNode","readQuestionBlock","getRequiredAttr","getChildNode","serialize","doc","findField","parentNode","field","initialValue","settings","questionBlock","setAttribute","value","canDeserialize","node","nodeName","deserialize","checkboxNode"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SACEA,WADF,EAEEC,mBAFF,EAGEC,YAHF,EAIEC,iBAJF,EAKEC,eALF,EAMEC,YANF,QAOO,aAPP;AASA,eAAe;AACbC,EAAAA,SAAS,CAACC,GAAD,EAAMC,SAAN,EAAiBC,UAAjB,EAA6BC,KAA7B,EAAoC;AAC3C,UAAM;AAAEC,MAAAA;AAAF,QAAmBD,KAAK,CAACE,QAA/B;AAEA,UAAMC,aAAa,GAAGZ,mBAAmB,CACvCM,GADuC,EAEvCC,SAFuC,EAGvCC,UAHuC,EAIvC,SAJuC,EAKvCC,KALuC,CAAzC;AAOAG,IAAAA,aAAa,CAACC,YAAd,CAA2B,OAA3B,EAAoCH,YAApC;AAEAX,IAAAA,WAAW,CAACO,GAAD,EAAMM,aAAN,EAAqB,UAArB,EAAiC,IAAjC,EAAuC;AAChDE,MAAAA,KAAK,EAAEL,KAAK,CAACE,QAAN,CAAeG;AAD0B,KAAvC,CAAX;AAGD,GAhBY;;AAkBbC,EAAAA,cAAc,CAACC,IAAD,EAAO;AACnB,WAAOA,IAAI,CAACC,QAAL,KAAkB,gBAAlB,IAAsChB,YAAY,CAACe,IAAD,EAAO,UAAP,CAAzD;AACD,GApBY;;AAsBbE,EAAAA,WAAW,CAACF,IAAD,EAAO;AAChB,QAAIP,KAAK,GAAGP,iBAAiB,CAACc,IAAD,EAAO,OAAP,EAAgB,SAAhB,CAA7B,CADgB,CACyC;;AAEzD,UAAMG,YAAY,GAAGf,YAAY,CAACY,IAAD,EAAO,UAAP,CAAjC;AACAP,IAAAA,KAAK,CAACE,QAAN,CAAeD,YAAf,GACEP,eAAe,CAACgB,YAAD,EAAe,OAAf,CAAf,KAA2C,MAD7C;AAGA,WAAOV,KAAP;AACD;;AA9BY,CAAf","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport {\r\n  appendChild,\r\n  appendQuestionBlock,\r\n  hasChildNode,\r\n  readQuestionBlock,\r\n  getRequiredAttr,\r\n  getChildNode,\r\n} from \"./utils/xml\";\r\n\r\nexport default {\r\n  serialize(doc, findField, parentNode, field) {\r\n    const { initialValue } = field.settings;\r\n\r\n    const questionBlock = appendQuestionBlock(\r\n      doc,\r\n      findField,\r\n      parentNode,\r\n      \"boolean\",\r\n      field\r\n    );\r\n    questionBlock.setAttribute(\"value\", initialValue);\r\n\r\n    appendChild(doc, questionBlock, \"checkbox\", null, {\r\n      value: field.settings.value,\r\n    });\r\n  },\r\n\r\n  canDeserialize(node) {\r\n    return node.nodeName === \"question_block\" && hasChildNode(node, \"checkbox\");\r\n  },\r\n\r\n  deserialize(node) {\r\n    let field = readQuestionBlock(node, \"yesNo\", \"boolean\"); // eslint-disable-line prefer-const\r\n\r\n    const checkboxNode = getChildNode(node, \"checkbox\");\r\n    field.settings.initialValue =\r\n      getRequiredAttr(checkboxNode, \"value\") === \"true\";\r\n\r\n    return field;\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
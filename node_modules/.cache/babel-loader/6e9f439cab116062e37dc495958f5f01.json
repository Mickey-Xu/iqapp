{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\nimport assert from \"assert\";\nimport moment from \"moment\";\nexport default function getDefaultValue(type, targetField) {\n  switch (type) {\n    case \"number\":\n      return 0;\n\n    case \"string\":\n      return \"\";\n\n    case \"extBool\":\n      return \"\";\n\n    case \"bool\":\n      return false;\n\n    case \"date\":\n      return moment();\n\n    case \"optionId\":\n      const {\n        options\n      } = targetField.settings;\n      assert(options.length > 0);\n      return options[0].value;\n\n    default:\n      throw new Error(\"Unknown type: \" + type);\n  }\n}","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/utils/getDefaultValue.js"],"names":["assert","moment","getDefaultValue","type","targetField","options","settings","length","value","Error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,eAAe,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,WAA/B,EAA4C;AACzD,UAAQD,IAAR;AACE,SAAK,QAAL;AACE,aAAO,CAAP;;AACF,SAAK,QAAL;AACE,aAAO,EAAP;;AACF,SAAK,SAAL;AACE,aAAO,EAAP;;AACF,SAAK,MAAL;AACE,aAAO,KAAP;;AACF,SAAK,MAAL;AACE,aAAOF,MAAM,EAAb;;AACF,SAAK,UAAL;AACE,YAAM;AAAEI,QAAAA;AAAF,UAAcD,WAAW,CAACE,QAAhC;AACAN,MAAAA,MAAM,CAACK,OAAO,CAACE,MAAR,GAAiB,CAAlB,CAAN;AACA,aAAOF,OAAO,CAAC,CAAD,CAAP,CAAWG,KAAlB;;AACF;AACE,YAAM,IAAIC,KAAJ,CAAU,mBAAmBN,IAA7B,CAAN;AAhBJ;AAkBD","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport assert from \"assert\";\r\nimport moment from \"moment\";\r\n\r\nexport default function getDefaultValue(type, targetField) {\r\n  switch (type) {\r\n    case \"number\":\r\n      return 0;\r\n    case \"string\":\r\n      return \"\";\r\n    case \"extBool\":\r\n      return \"\";\r\n    case \"bool\":\r\n      return false;\r\n    case \"date\":\r\n      return moment();\r\n    case \"optionId\":\r\n      const { options } = targetField.settings;\r\n      assert(options.length > 0);\r\n      return options[0].value;\r\n    default:\r\n      throw new Error(\"Unknown type: \" + type);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TemplateForm\\\\Photo\\\\index.js\";\n// import { Box, FormLabel, makeStyles, Typography } from \"@material-ui/core\";\n// import Compressor from \"compressorjs\";\n// import { LocalizeContext } from \"i18n\";\n// import { fillTextToImg } from \"js/util\";\n// import React, { useRef, useState } from \"react\";\n// import { useParams } from 'react-router-dom';\n// const useStyles = makeStyles(({ spacing }) => ({\n//   btm: {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     margin: spacing(1, 1, 0, 1),\n//   },\n//   root: {\n//     display: \"grid\",\n//     padding: spacing(1, 0),\n//     borderBottom: \" 1px solid #e0e0e0\",\n//     backgroundColor: \"#FFF\",\n//   },\n//   lable: {\n//     margin: spacing(0, 0, 1, 0),\n//     color: \"rgba(0, 0, 0, 0.87)\",\n//   },\n//   inputFile: {\n//     width: \"0.1px\",\n//     height: \"0.1px\",\n//     opacity: 0,\n//     overflow: \"hidden\",\n//     position: \"absolute\",\n//     top: \"0\",\n//     zIndex: -1,\n//   },\n//   file: {\n//     height: \"160px\",\n//     position: \"relative\",\n//     overflow: \"hidden\",\n//     textAlign: \"center\",\n//   },\n// }));\n// export const Photo = (props) => {\n//   const i18n = React.useContext(LocalizeContext);\n//   const classes = useStyles();\n//   const [photoStyle, setPhotoStyle] = useState({\n//     width: \"auto\",\n//     height: \"100%\",\n//   });\n//   const photoEl = useRef(null);\n//   const iptRef = useRef(null);\n//   const projectData = useParams();\n//   const onPhotoChange = (e) => {\n//     const fileReader = new FileReader();\n//     const file = e.target.files[0];\n//     const isCamera = e.target.value.includes('camera');\n//     console.log(isCamera ? '用户选择了拍照' : '用户选择了本地图片');\n//     fileReader.onloadend = (e) => {\n//       const photo = e.target.result;\n//       fillTextToImg(photo, projectData).then((res) => {\n//         props.onChange(res);\n//        })\n//       const i = new Image();\n//       i.onload = () => {\n//         setPhotoStyle({\n//           // width: photoEl.current.clientWidth,\n//           // height: (photoEl.current.clientWidth / i.width) * i.height,\n//           width: \"auto\",\n//           height: \"100%\",\n//         });\n//       };\n//       i.src = photo;\n//     };\n//     if (file) {\n//       new Compressor(file, {\n//         quality: 0.2,\n//         convertSize: 400000,\n//         success(result) {\n//           fileReader.readAsDataURL(result);\n//         },\n//         error(err) {\n//           console.log(err.message);\n//         },\n//       });\n//     } else {\n//       props.onChange(\"#\");\n//     }\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <Typography variant=\"subtitle2\" className={classes.lable}>\n//         {props.label}\n//       </Typography>\n//       <div>\n//         <input\n//           className={classes.inputFile}\n//           type=\"file\"\n//           accept=\"image/x-png,image/jpeg,image/gif\"\n//           id={props.id}\n//           ref={iptRef}\n//           onChange={onPhotoChange}\n//         />\n//       </div>\n//       <div>\n//         {/* <Typography variant=\"body2\">{props.description}</Typography> */}\n//         <FormLabel required={props.required}>\n//           <Typography\n//             component=\"span\"\n//             variant=\"subtitle2\"\n//             className={classes.lable}\n//           >\n//             {props.description}\n//           </Typography>\n//         </FormLabel>\n//       </div>\n//       <Box border={1} className={classes.file}>\n//         <img src={props.value} style={photoStyle} ref={photoEl} alt=\"\" />\n//       </Box>\n//       <Box className={classes.btm}>\n//         <Typography\n//           color=\"secondary\"\n//           variant=\"body2\"\n//           onClick={() => {\n//             props.onChange(\"#\");\n//             iptRef.current.value = \"\";\n//           }}\n//         >\n//           {i18n.ISNTAPP_DELETE}\n//         </Typography>\n//         <label htmlFor={props.id}>\n//           <Typography color=\"secondary\" variant=\"body2\">\n//             {i18n.ISNTAPP_IMPORT_PICTURES}\n//           </Typography>\n//         </label>\n//       </Box>\n//     </div>\n//   );\n// };\nimport React, { useRef, useEffect, useState } from 'react';\nexport const Photo = () => {\n  const CameraCapture = () => {\n    const inputRef = useRef(null);\n    const [image, setImage] = useState(null);\n\n    const capture = async () => {\n      const file = inputRef.current.files[0];\n\n      if (file) {\n        const url = URL.createObjectURL(file);\n        const img = new Image();\n        img.src = url;\n\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          const context = canvas.getContext('2d');\n          canvas.width = img.width;\n          canvas.height = img.height;\n          context.drawImage(img, 0, 0);\n          const dataURL = canvas.toDataURL('image/jpeg');\n          setImage(dataURL);\n        };\n      }\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        width: '100%',\n        height: '400px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      capture: \"camera\",\n      ref: inputRef,\n      onChange: capture,\n      style: {\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        opacity: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '25%',\n        left: '25%',\n        width: '50%',\n        height: '50%',\n        border: '2px dashed red',\n        pointerEvents: 'none',\n        zIndex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }\n    }), image && /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: \"Captured\",\n      style: {\n        marginTop: '10px',\n        maxWidth: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }));\n  };\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TemplateForm/Photo/index.js"],"names":["React","useRef","useEffect","useState","Photo","CameraCapture","inputRef","image","setImage","capture","file","current","files","url","URL","createObjectURL","img","Image","src","onload","canvas","document","createElement","context","getContext","width","height","drawImage","dataURL","toDataURL","position","top","left","opacity","border","pointerEvents","zIndex","marginTop","maxWidth"],"mappingsgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAEzB,QAAMC,aAAa,GAAG,MAAM;AAC1B,UAAMC,QAAQ,GAAGL,MAAM,CAAC,IAAD,CAAvB;AACA,UAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;;AAEA,UAAMM,OAAO,GAAG,YAAY;AAC1B,YAAMC,IAAI,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,KAAjB,CAAuB,CAAvB,CAAb;;AACA,UAAIF,IAAJ,EAAU;AACR,cAAMG,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAZ;AACA,cAAMM,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,QAAAA,GAAG,CAACE,GAAJ,GAAUL,GAAV;;AACAG,QAAAA,GAAG,CAACG,MAAJ,GAAa,MAAM;AACjB,gBAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,gBAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;AACAJ,UAAAA,MAAM,CAACK,KAAP,GAAeT,GAAG,CAACS,KAAnB;AACAL,UAAAA,MAAM,CAACM,MAAP,GAAgBV,GAAG,CAACU,MAApB;AACAH,UAAAA,OAAO,CAACI,SAAR,CAAkBX,GAAlB,EAAuB,CAAvB,EAA0B,CAA1B;AACA,gBAAMY,OAAO,GAAGR,MAAM,CAACS,SAAP,CAAiB,YAAjB,CAAhB;AACArB,UAAAA,QAAQ,CAACoB,OAAD,CAAR;AACD,SARD;AASD;AACF,KAhBD;;AAkBA,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEE,QAAAA,QAAQ,EAAE,UAAZ;AAAwBL,QAAAA,KAAK,EAAE,MAA/B;AAAuCC,QAAAA,MAAM,EAAE;AAA/C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,MAAM,EAAC,SAFT;AAGE,MAAA,OAAO,EAAC,QAHV;AAIE,MAAA,GAAG,EAAEpB,QAJP;AAKE,MAAA,QAAQ,EAAEG,OALZ;AAME,MAAA,KAAK,EAAE;AAAEgB,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,MAAzB;AAAiCI,QAAAA,QAAQ,EAAE,UAA3C;AAAuDC,QAAAA,GAAG,EAAE,CAA5D;AAA+DC,QAAAA,IAAI,EAAE,CAArE;AAAwEC,QAAAA,OAAO,EAAE;AAAjF,OANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AAAK,MAAA,KAAK,EAAE;AACVH,QAAAA,QAAQ,EAAE,UADA;AAEVC,QAAAA,GAAG,EAAE,KAFK;AAGVC,QAAAA,IAAI,EAAE,KAHI;AAIVP,QAAAA,KAAK,EAAE,KAJG;AAKVC,QAAAA,MAAM,EAAE,KALE;AAMVQ,QAAAA,MAAM,EAAE,gBANE;AAOVC,QAAAA,aAAa,EAAE,MAPL;AAQVC,QAAAA,MAAM,EAAE;AARE,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAmBG7B,KAAK,iBAAI;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,GAAG,EAAC,UAArB;AAAgC,MAAA,KAAK,EAAE;AAAE8B,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBZ,CADF;AAuBD,GA7CD;AAgDD,CAlDM","sourcesContent":["// import { Box, FormLabel, makeStyles, Typography } from \"@material-ui/core\";\r\n// import Compressor from \"compressorjs\";\r\n// import { LocalizeContext } from \"i18n\";\r\n// import { fillTextToImg } from \"js/util\";\r\n// import React, { useRef, useState } from \"react\";\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles(({ spacing }) => ({\r\n//   btm: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"space-between\",\r\n//     margin: spacing(1, 1, 0, 1),\r\n//   },\r\n//   root: {\r\n//     display: \"grid\",\r\n//     padding: spacing(1, 0),\r\n//     borderBottom: \" 1px solid #e0e0e0\",\r\n//     backgroundColor: \"#FFF\",\r\n//   },\r\n//   lable: {\r\n//     margin: spacing(0, 0, 1, 0),\r\n//     color: \"rgba(0, 0, 0, 0.87)\",\r\n//   },\r\n//   inputFile: {\r\n//     width: \"0.1px\",\r\n//     height: \"0.1px\",\r\n//     opacity: 0,\r\n//     overflow: \"hidden\",\r\n//     position: \"absolute\",\r\n//     top: \"0\",\r\n//     zIndex: -1,\r\n//   },\r\n//   file: {\r\n//     height: \"160px\",\r\n//     position: \"relative\",\r\n//     overflow: \"hidden\",\r\n//     textAlign: \"center\",\r\n//   },\r\n// }));\r\n\r\n// export const Photo = (props) => {\r\n//   const i18n = React.useContext(LocalizeContext);\r\n//   const classes = useStyles();\r\n//   const [photoStyle, setPhotoStyle] = useState({\r\n//     width: \"auto\",\r\n//     height: \"100%\",\r\n//   });\r\n//   const photoEl = useRef(null);\r\n//   const iptRef = useRef(null);\r\n//   const projectData = useParams();\r\n//   const onPhotoChange = (e) => {\r\n//     const fileReader = new FileReader();\r\n//     const file = e.target.files[0];\r\n//     const isCamera = e.target.value.includes('camera');\r\n//     console.log(isCamera ? '用户选择了拍照' : '用户选择了本地图片');\r\n\r\n//     fileReader.onloadend = (e) => {\r\n//       const photo = e.target.result;\r\n//       fillTextToImg(photo, projectData).then((res) => {\r\n//         props.onChange(res);\r\n//        })\r\n//       const i = new Image();\r\n//       i.onload = () => {\r\n//         setPhotoStyle({\r\n//           // width: photoEl.current.clientWidth,\r\n//           // height: (photoEl.current.clientWidth / i.width) * i.height,\r\n//           width: \"auto\",\r\n//           height: \"100%\",\r\n//         });\r\n//       };\r\n//       i.src = photo;\r\n//     };\r\n//     if (file) {\r\n//       new Compressor(file, {\r\n//         quality: 0.2,\r\n//         convertSize: 400000,\r\n//         success(result) {\r\n//           fileReader.readAsDataURL(result);\r\n//         },\r\n//         error(err) {\r\n//           console.log(err.message);\r\n//         },\r\n//       });\r\n//     } else {\r\n//       props.onChange(\"#\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Typography variant=\"subtitle2\" className={classes.lable}>\r\n//         {props.label}\r\n//       </Typography>\r\n//       <div>\r\n//         <input\r\n//           className={classes.inputFile}\r\n//           type=\"file\"\r\n//           accept=\"image/x-png,image/jpeg,image/gif\"\r\n//           id={props.id}\r\n//           ref={iptRef}\r\n//           onChange={onPhotoChange}\r\n//         />\r\n//       </div>\r\n//       <div>\r\n//         {/* <Typography variant=\"body2\">{props.description}</Typography> */}\r\n//         <FormLabel required={props.required}>\r\n//           <Typography\r\n//             component=\"span\"\r\n//             variant=\"subtitle2\"\r\n//             className={classes.lable}\r\n//           >\r\n//             {props.description}\r\n//           </Typography>\r\n//         </FormLabel>\r\n//       </div>\r\n//       <Box border={1} className={classes.file}>\r\n//         <img src={props.value} style={photoStyle} ref={photoEl} alt=\"\" />\r\n//       </Box>\r\n//       <Box className={classes.btm}>\r\n//         <Typography\r\n//           color=\"secondary\"\r\n//           variant=\"body2\"\r\n//           onClick={() => {\r\n//             props.onChange(\"#\");\r\n//             iptRef.current.value = \"\";\r\n//           }}\r\n//         >\r\n//           {i18n.ISNTAPP_DELETE}\r\n//         </Typography>\r\n//         <label htmlFor={props.id}>\r\n//           <Typography color=\"secondary\" variant=\"body2\">\r\n//             {i18n.ISNTAPP_IMPORT_PICTURES}\r\n//           </Typography>\r\n//         </label>\r\n//       </Box>\r\n//     </div>\r\n//   );\r\n// };\r\nimport React, { useRef, useEffect, useState } from 'react';\r\n\r\nexport const Photo = () => {\r\n\r\n  const CameraCapture = () => {\r\n    const inputRef = useRef(null);\r\n    const [image, setImage] = useState(null);\r\n\r\n    const capture = async () => {\r\n      const file = inputRef.current.files[0];\r\n      if (file) {\r\n        const url = URL.createObjectURL(file);\r\n        const img = new Image();\r\n        img.src = url;\r\n        img.onload = () => {\r\n          const canvas = document.createElement('canvas');\r\n          const context = canvas.getContext('2d');\r\n          canvas.width = img.width;\r\n          canvas.height = img.height;\r\n          context.drawImage(img, 0, 0);\r\n          const dataURL = canvas.toDataURL('image/jpeg');\r\n          setImage(dataURL);\r\n        };\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ position: 'relative', width: '100%', height: '400px' }}>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          capture=\"camera\"\r\n          ref={inputRef}\r\n          onChange={capture}\r\n          style={{ width: '100%', height: '100%', position: 'absolute', top: 0, left: 0, opacity: 0 }}\r\n        />\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '25%',\r\n          left: '25%',\r\n          width: '50%',\r\n          height: '50%',\r\n          border: '2px dashed red',\r\n          pointerEvents: 'none',\r\n          zIndex: 1\r\n        }} />\r\n        {image && <img src={image} alt=\"Captured\" style={{ marginTop: '10px', maxWidth: '100%' }} />}\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}
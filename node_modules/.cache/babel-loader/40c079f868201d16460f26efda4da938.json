{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\Form\\\\Form.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { SingleLine } from \"./SingleLine\";\n\nconst Form = ({\n  data = {},\n  fields = [],\n  onChange,\n  validation\n}) => {\n  return fields.map(({\n    component: Component = SingleLine,\n    ...rest\n  }, index) => {\n    var _validation$name;\n\n    const {\n      name\n    } = rest;\n    return /*#__PURE__*/React.createElement(Component, Object.assign({\n      data: data,\n      errorMessage: data[name] !== undefined && ((_validation$name = validation[name]) === null || _validation$name === void 0 ? void 0 : _validation$name.message),\n      key: index,\n      onChange: onChange(data)\n    }, rest, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }\n    }));\n  });\n};\n\nexport default connect(({\n  formData\n}) => {\n  return {\n    data: formData\n  };\n}, (dispatch, {\n  onChange\n}) => {\n  return (// !onChange && {\n    //   onChange: (data) => (name, value) => {\n    //     dispatch(action.setFormData({ ...data, [name]: value }));\n    //   },\n    // }\n    {\n      onChange\n    }\n  );\n})(Form);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/Form/Form.jsx"],"names":["React","connect","SingleLine","Form","data","fields","onChange","validation","map","component","Component","rest","index","name","undefined","message","formData","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG,EAAT;AAAaC,EAAAA,MAAM,GAAG,EAAtB;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA;AAApC,CAAD,KAAsD;AACjE,SAAOF,MAAM,CAACG,GAAP,CAAW,CAAC;AAAEC,IAAAA,SAAS,EAAEC,SAAS,GAAGR,UAAzB;AAAqC,OAAGS;AAAxC,GAAD,EAAiDC,KAAjD,KAA2D;AAAA;;AAC3E,UAAM;AAAEC,MAAAA;AAAF,QAAWF,IAAjB;AACA,wBACE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAEP,IADR;AAEE,MAAA,YAAY,EAAEA,IAAI,CAACS,IAAD,CAAJ,KAAeC,SAAf,yBAA4BP,UAAU,CAACM,IAAD,CAAtC,qDAA4B,iBAAkBE,OAA9C,CAFhB;AAGE,MAAA,GAAG,EAAEH,KAHP;AAIE,MAAA,QAAQ,EAAEN,QAAQ,CAACF,IAAD;AAJpB,OAKMO,IALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AASD,GAXM,CAAP;AAYD,CAbD;;AAeA,eAAeV,OAAO,CACpB,CAAC;AAAEe,EAAAA;AAAF,CAAD,KAAkB;AAChB,SAAO;AACLZ,IAAAA,IAAI,EAAEY;AADD,GAAP;AAGD,CALmB,EAMpB,CAACC,QAAD,EAAW;AAAEX,EAAAA;AAAF,CAAX,KAA4B;AAC1B,SACE;AACA;AACA;AACA;AACA;AACA;AAAEA,MAAAA;AAAF;AANF;AAQD,CAfmB,CAAP,CAgBbH,IAhBa,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { SingleLine } from \"./SingleLine\";\r\n\r\nconst Form = ({ data = {}, fields = [], onChange, validation }) => {\r\n  return fields.map(({ component: Component = SingleLine, ...rest }, index) => {\r\n    const { name } = rest;\r\n    return (\r\n      <Component\r\n        data={data}\r\n        errorMessage={data[name] !== undefined && validation[name]?.message}\r\n        key={index}\r\n        onChange={onChange(data)}\r\n        {...rest}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\nexport default connect(\r\n  ({ formData }) => {\r\n    return {\r\n      data: formData,\r\n    };\r\n  },\r\n  (dispatch, { onChange }) => {\r\n    return (\r\n      // !onChange && {\r\n      //   onChange: (data) => (name, value) => {\r\n      //     dispatch(action.setFormData({ ...data, [name]: value }));\r\n      //   },\r\n      // }\r\n      { onChange }\r\n    );\r\n  }\r\n)(Form);\r\n"]},"metadata":{},"sourceType":"module"}
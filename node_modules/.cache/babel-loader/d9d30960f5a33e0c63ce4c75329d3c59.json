{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\OrderActivityList\\\\index.js\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport ConfirmModal from \"components/ConfirmModal\";\nimport { LocalizeContext } from \"i18n\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { DatePicker } from \"@material-ui/pickers\";\n\nconst OrderActivityList = ({\n  data,\n  component: Component,\n  tabType,\n  submit,\n  oneThousandPlannedDate,\n  nineThousandPlannedDate\n}) => {\n  var _confirmedDateMinAndM, _confirmedDateMinAndM2;\n\n  const [open, setOpen] = React.useState(null);\n  const [activity, setActivity] = React.useState(\"\");\n  const [currentActivity, setCurrentActivity] = React.useState(\"\");\n  const [date, setDate] = React.useState(moment(new Date()).format(\"YYYY-MM-DD\"));\n  const i18n = React.useContext(LocalizeContext);\n\n  const handleClickOpen = (name, activity, currentActivity) => {\n    setOpen(name);\n    setActivity(activity);\n    setCurrentActivity(currentActivity);\n  };\n\n  const handleClose = () => {\n    setOpen(null);\n    setDate(moment(new Date()).format(\"YYYY-MM-DD\"));\n  };\n\n  const confirmedDateMinAndMax = () => {\n    const currentData = activity ? data[Object.keys(data).filter(item => {\n      return data[item].activityNumber === activity;\n    })[0]] : data;\n\n    if (activity) {\n      if (currentData.confPreStart === \"X\") {\n        return {\n          min: 0,\n          max: moment().format(\"YYYY-MM-DD\")\n        };\n      } else {\n        if (currentData.confPast === \"0\" || currentData.confPast === null) {\n          return {\n            min: moment().add(-5, \"days\").format(\"YYYY-MM-DD\"),\n            max: moment().format(\"YYYY-MM-DD\")\n          };\n        } else {\n          return {\n            min: moment().add(-currentData.confPast, \"days\").format(\"YYYY-MM-DD\"),\n            max: moment().format(\"YYYY-MM-DD\")\n          };\n        }\n      }\n    }\n  };\n\n  const handleClick = () => {\n    let type = 0;\n\n    if (open === \"lock\" || open === \"unlock\") {\n      type = 2;\n    }\n\n    if (open === \"confirm\" || open === \"cancel\") {\n      type = 1;\n    }\n\n    if ((open === \"lock\" || open === \"confirm\") && date) {\n      submit(activity, date, type);\n      setOpen(null);\n    } else if (open === \"unlock\" || open === \"cancel\") {\n      submit(activity, \"\", type);\n      setOpen(null);\n    }\n  };\n\n  if (data) {\n    data.sort((a, b) => a.sort ? a.sort > b.sort ? 1 : -1 : 1);\n  }\n\n  return /*#__PURE__*/React.createElement(Box, {\n    style: {\n      marginBottom: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, data === null || data === void 0 ? void 0 : data.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Component, {\n      data: item,\n      handleClickOpen: (name, activity, currentActivity) => handleClickOpen(name, activity, currentActivity),\n      tabType: tabType,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(ConfirmModal, {\n    open: open === \"lock\" || open === \"unlock\" || open === \"confirm\" || open === \"cancel\",\n    date: date,\n    handleClick: handleClick,\n    onClose: handleClose,\n    title: currentActivity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 1,\n    align: \"center\",\n    mr: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: open === \"lock\" || open === \"confirm\" ? date ? \"initial\" : \"error\" : \"initial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, open === \"lock\" || open === \"confirm\" ? `*${i18n.ISNTAPP_PLEASE_SELECT}${open === \"lock\" ? i18n.ORDERDETAILS_LOCK : open === \"confirm\" ? i18n.GENERAL_CONFIRM : \"\"}${i18n.ISNTAPP_DETE}` : `${i18n.ISNTAPP_CONFIRM_TO}${open === \"unlock\" ? i18n.ORDERDETAILS_UNLOCK : open === \"cancel\" ? i18n.GENERAL_CANCEL : \"\"}${i18n.ISNTAPP_DETE}?`)), /*#__PURE__*/React.createElement(Box, {\n    mb: 1,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, open === \"lock\" && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    min: oneThousandPlannedDate,\n    max: nineThousandPlannedDate,\n    onChange: e => {\n      setDate(e.target.value);\n    },\n    value: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), open === \"confirm\" &&\n  /*#__PURE__*/\n  // <input\n  //   min={confirmedDateMinAndMax().min}\n  //   max={confirmedDateMinAndMax().max}\n  //   type=\"date\"\n  //   onChange={(e) => {\n  //     setDate(e.target.value);\n  //   }}\n  //   value={date}\n  // />\n  React.createElement(DatePicker, {\n    autoOk: true,\n    disableToolbar: true,\n    variant: \"inline\",\n    value: date ? new Date(date) : null,\n    minDate: new Date((_confirmedDateMinAndM = confirmedDateMinAndMax()) === null || _confirmedDateMinAndM === void 0 ? void 0 : _confirmedDateMinAndM.min),\n    maxDate: new Date((_confirmedDateMinAndM2 = confirmedDateMinAndMax()) === null || _confirmedDateMinAndM2 === void 0 ? void 0 : _confirmedDateMinAndM2.max),\n    format: \"YYYY/MM/DD\",\n    onChange: d => {\n      setDate(moment(d).format(\"YYYY-MM-DD\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default OrderActivityList;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/OrderActivityList/index.js"],"names":["Box","Typography","ConfirmModal","LocalizeContext","moment","React","DatePicker","OrderActivityList","data","component","Component","tabType","submit","oneThousandPlannedDate","nineThousandPlannedDate","open","setOpen","useState","activity","setActivity","currentActivity","setCurrentActivity","date","setDate","Date","format","i18n","useContext","handleClickOpen","name","handleClose","confirmedDateMinAndMax","currentData","Object","keys","filter","item","activityNumber","confPreStart","min","max","confPast","add","handleClick","type","sort","a","b","marginBottom","map","index","ISNTAPP_PLEASE_SELECT","ORDERDETAILS_LOCK","GENERAL_CONFIRM","ISNTAPP_DETE","ISNTAPP_CONFIRM_TO","ORDERDETAILS_UNLOCK","GENERAL_CANCEL","e","target","value","d"],"mappings":"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","sourcesContent":["import { Box, Typography } from \"@material-ui/core\";\r\nimport ConfirmModal from \"components/ConfirmModal\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\n\r\nconst OrderActivityList = ({\r\n  data,\r\n  component: Component,\r\n  tabType,\r\n  submit,\r\n  oneThousandPlannedDate,\r\n  nineThousandPlannedDate,\r\n}) => {\r\n  const [open, setOpen] = React.useState(null);\r\n  const [activity, setActivity] = React.useState(\"\");\r\n  const [currentActivity, setCurrentActivity] = React.useState(\"\");\r\n  const [date, setDate] = React.useState(\r\n    moment(new Date()).format(\"YYYY-MM-DD\")\r\n  );\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  const handleClickOpen = (name, activity, currentActivity) => {\r\n    setOpen(name);\r\n    setActivity(activity);\r\n    setCurrentActivity(currentActivity);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n    setDate(moment(new Date()).format(\"YYYY-MM-DD\"));\r\n  };\r\n\r\n  const confirmedDateMinAndMax = () => {\r\n    const currentData = activity\r\n      ? data[\r\n          Object.keys(data).filter((item) => {\r\n            return data[item].activityNumber === activity;\r\n          })[0]\r\n        ]\r\n      : data;\r\n    if (activity) {\r\n      if (currentData.confPreStart === \"X\") {\r\n        return { min: 0, max: moment().format(\"YYYY-MM-DD\") };\r\n      } else {\r\n        if (currentData.confPast === \"0\" || currentData.confPast === null) {\r\n          return {\r\n            min: moment().add(-5, \"days\").format(\"YYYY-MM-DD\"),\r\n            max: moment().format(\"YYYY-MM-DD\"),\r\n          };\r\n        } else {\r\n          return {\r\n            min: moment()\r\n              .add(-currentData.confPast, \"days\")\r\n              .format(\"YYYY-MM-DD\"),\r\n            max: moment().format(\"YYYY-MM-DD\"),\r\n          };\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    let type = 0;\r\n\r\n    if (open === \"lock\" || open === \"unlock\") {\r\n      type = 2;\r\n    }\r\n\r\n    if (open === \"confirm\" || open === \"cancel\") {\r\n      type = 1;\r\n    }\r\n\r\n    if ((open === \"lock\" || open === \"confirm\") && date) {\r\n      submit(activity, date, type);\r\n      setOpen(null);\r\n    } else if (open === \"unlock\" || open === \"cancel\") {\r\n      submit(activity, \"\", type);\r\n      setOpen(null);\r\n    }\r\n  };\r\n\r\n  if (data) {\r\n    data.sort((a, b) => (a.sort ? (a.sort > b.sort ? 1 : -1) : 1));\r\n  }\r\n\r\n  return (\r\n    <Box style={{ marginBottom: \"16px\" }}>\r\n      {data?.map((item, index) => {\r\n        return (\r\n          <Component\r\n            data={item}\r\n            handleClickOpen={(name, activity, currentActivity) =>\r\n              handleClickOpen(name, activity, currentActivity)\r\n            }\r\n            tabType={tabType}\r\n            key={index}\r\n          />\r\n        );\r\n      })}\r\n      <ConfirmModal\r\n        open={\r\n          open === \"lock\" ||\r\n          open === \"unlock\" ||\r\n          open === \"confirm\" ||\r\n          open === \"cancel\"\r\n        }\r\n        date={date}\r\n        handleClick={handleClick}\r\n        onClose={handleClose}\r\n        title={currentActivity}\r\n      >\r\n        <Box mb={1} align=\"center\" mr={5}>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={\r\n              open === \"lock\" || open === \"confirm\"\r\n                ? date\r\n                  ? \"initial\"\r\n                  : \"error\"\r\n                : \"initial\"\r\n            }\r\n          >\r\n            {open === \"lock\" || open === \"confirm\"\r\n              ? `*${i18n.ISNTAPP_PLEASE_SELECT}${\r\n                  open === \"lock\"\r\n                    ? i18n.ORDERDETAILS_LOCK\r\n                    : open === \"confirm\"\r\n                    ? i18n.GENERAL_CONFIRM\r\n                    : \"\"\r\n                }${i18n.ISNTAPP_DETE}`\r\n              : `${i18n.ISNTAPP_CONFIRM_TO}${\r\n                  open === \"unlock\"\r\n                    ? i18n.ORDERDETAILS_UNLOCK\r\n                    : open === \"cancel\"\r\n                    ? i18n.GENERAL_CANCEL\r\n                    : \"\"\r\n                }${i18n.ISNTAPP_DETE}?`}\r\n          </Typography>\r\n        </Box>\r\n        <Box mb={1} align=\"center\">\r\n          {open === \"lock\" && (\r\n            <input\r\n              type=\"date\"\r\n              min={oneThousandPlannedDate}\r\n              max={nineThousandPlannedDate}\r\n              onChange={(e) => {\r\n                setDate(e.target.value);\r\n              }}\r\n              value={date}\r\n            />\r\n          )}\r\n          {open === \"confirm\" && (\r\n            // <input\r\n            //   min={confirmedDateMinAndMax().min}\r\n            //   max={confirmedDateMinAndMax().max}\r\n            //   type=\"date\"\r\n            //   onChange={(e) => {\r\n            //     setDate(e.target.value);\r\n            //   }}\r\n            //   value={date}\r\n            // />\r\n\r\n            <DatePicker\r\n              autoOk\r\n              disableToolbar={true}\r\n              variant=\"inline\"\r\n              value={date ? new Date(date) : null}\r\n              minDate={new Date(confirmedDateMinAndMax()?.min)}\r\n              maxDate={new Date(confirmedDateMinAndMax()?.max)}\r\n              format=\"YYYY/MM/DD\"\r\n              onChange={(d) => {\r\n                setDate(moment(d).format(\"YYYY-MM-DD\"));\r\n              }}\r\n            />\r\n          )}\r\n        </Box>\r\n      </ConfirmModal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default OrderActivityList;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TaskListItem\\\\index.js\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport ConfirmModal from \"components/ConfirmModal\";\nimport TaskItemCard from \"components/TaskItemCard\";\nimport { LocalizeContext } from \"i18n\";\nimport moment from \"moment\";\nimport React from \"react\";\n\nconst TaskList = ({\n  data,\n  status,\n  type,\n  submit\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  const [open, setOpen] = React.useState(null);\n  const [currentTask, setCurrentTask] = React.useState(\"\");\n  const [cplDate, setCplDate] = React.useState(moment(new Date()).format(\"YYYY-MM-DD\"));\n  const [description, setDescription] = React.useState(\"\");\n  const [submitData, setSubmitData] = React.useState(null);\n\n  const handleClickOpen = (action, taskName, currentTaskData) => {\n    setOpen(action);\n    setCurrentTask(taskName);\n    setSubmitData(currentTaskData);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setCplDate(moment(new Date()).format(\"YYYY-MM-DD\"));\n    setDescription(\"\");\n  };\n\n  const handleClick = () => {\n    const submitDatas = submitData;\n\n    if (open === \"done\" && cplDate && description) {\n      submitDatas.CPLDate = cplDate;\n      submitDatas.AssigneeCMNT = description;\n      submitDatas.Status = \"D\";\n      submit(submitDatas);\n      setOpen(false);\n      setCplDate(\"\");\n      setDescription(\"\");\n    }\n\n    if (open === \"delete\") {\n      submitDatas.Status = \"DL\";\n      submit(submitDatas);\n      setOpen(false);\n    }\n\n    if (open === \"close\") {\n      submitDatas.Status = \"CL\";\n      submit(submitDatas);\n      setOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, data.map((item, index) => {\n    return /*#__PURE__*/React.createElement(TaskItemCard, {\n      data: item,\n      type: type,\n      status: status,\n      handleClickOpen: (action, taskName, currentTaskData) => handleClickOpen(action, taskName, currentTaskData),\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(ConfirmModal, {\n    open: open === \"done\" || open === \"delete\" || open === \"close\",\n    handleClick: handleClick,\n    onClose: handleClose,\n    title: currentTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: open === \"done\" ? cplDate ? \"initial\" : \"error\" : \"initial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, i18n.ISNTAPP_PLEASE_SELECT_COnFIRM_DATE, i18n.ISNTAPP_CONFIRM_TO_DELETE_THIS_TASK, i18n.ISNTAPP_CONFIRM_TO_CLOSE_THIS_TASK)), open === \"done\" && /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    style: {\n      width: \"100%\"\n    },\n    onChange: e => {\n      setCplDate(e.target.value);\n    },\n    value: cplDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(DatePicker, {\n    autoOk: true,\n    fullWidth: true,\n    required: true,\n    disableToolbar: true,\n    variant: \"inline\",\n    value: cplDate ? new Date(cplDate) : null,\n    format: \"YYYY/MM/DD\",\n    maxDate: new Date(),\n    onChange: d => {\n      setCplDate(moment(d).format(\"YYYY-MM-DD\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    mb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: open === \"done\" ? description ? \"initial\" : \"error\" : \"initial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"*\", i18n.ISNTAPP_COMPLETE_COMMENT)), /*#__PURE__*/React.createElement(Box, {\n    mb: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    rows: \"6\",\n    placeholder: i18n.ISNTAPP_COMPLETE_COMMENT,\n    style: {\n      width: \"100%\",\n      resize: \"none\"\n    },\n    onChange: e => {\n      setDescription(e.target.value);\n    },\n    value: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default TaskList;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TaskListItem/index.js"],"names":["Box","Typography","DatePicker","ConfirmModal","TaskItemCard","LocalizeContext","moment","React","TaskList","data","status","type","submit","i18n","useContext","open","setOpen","useState","currentTask","setCurrentTask","cplDate","setCplDate","Date","format","description","setDescription","submitData","setSubmitData","handleClickOpen","action","taskName","currentTaskData","handleClose","handleClick","submitDatas","CPLDate","AssigneeCMNT","Status","map","item","index","ISNTAPP_PLEASE_SELECT_COnFIRM_DATE","ISNTAPP_CONFIRM_TO_DELETE_THIS_TASK","ISNTAPP_CONFIRM_TO_CLOSE_THIS_TASK","width","e","target","value","d","ISNTAPP_COMPLETE_COMMENT","resize"],"mappings":"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","sourcesContent":["import { Box, Typography } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport ConfirmModal from \"components/ConfirmModal\";\r\nimport TaskItemCard from \"components/TaskItemCard\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nconst TaskList = ({ data, status, type, submit }) => {\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  const [open, setOpen] = React.useState(null);\r\n\r\n  const [currentTask, setCurrentTask] = React.useState(\"\");\r\n  const [cplDate, setCplDate] = React.useState(\r\n    moment(new Date()).format(\"YYYY-MM-DD\")\r\n  );\r\n  const [description, setDescription] = React.useState(\"\");\r\n  const [submitData, setSubmitData] = React.useState(null);\r\n\r\n  const handleClickOpen = (action, taskName, currentTaskData) => {\r\n    setOpen(action);\r\n    setCurrentTask(taskName);\r\n    setSubmitData(currentTaskData);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setCplDate(moment(new Date()).format(\"YYYY-MM-DD\"));\r\n    setDescription(\"\");\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const submitDatas = submitData;\r\n\r\n    if (open === \"done\" && cplDate && description) {\r\n      submitDatas.CPLDate = cplDate;\r\n      submitDatas.AssigneeCMNT = description;\r\n      submitDatas.Status = \"D\";\r\n      submit(submitDatas);\r\n      setOpen(false);\r\n      setCplDate(\"\");\r\n      setDescription(\"\");\r\n    }\r\n    if (open === \"delete\") {\r\n      submitDatas.Status = \"DL\";\r\n      submit(submitDatas);\r\n      setOpen(false);\r\n    }\r\n    if (open === \"close\") {\r\n      submitDatas.Status = \"CL\";\r\n      submit(submitDatas);\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {data.map((item, index) => {\r\n        return (\r\n          <TaskItemCard\r\n            data={item}\r\n            type={type}\r\n            status={status}\r\n            handleClickOpen={(action, taskName, currentTaskData) =>\r\n              handleClickOpen(action, taskName, currentTaskData)\r\n            }\r\n            key={index}\r\n          />\r\n        );\r\n      })}\r\n      <ConfirmModal\r\n        open={open === \"done\" || open === \"delete\" || open === \"close\"}\r\n        handleClick={handleClick}\r\n        onClose={handleClose}\r\n        title={currentTask}\r\n      >\r\n        <Box mb={1}>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={\r\n              open === \"done\" ? (cplDate ? \"initial\" : \"error\") : \"initial\"\r\n            }\r\n          >\r\n            { i18n.ISNTAPP_PLEASE_SELECT_COnFIRM_DATE}\r\n            { i18n.ISNTAPP_CONFIRM_TO_DELETE_THIS_TASK}\r\n            { i18n.ISNTAPP_CONFIRM_TO_CLOSE_THIS_TASK}\r\n          </Typography>\r\n        </Box>\r\n        {open === \"done\" && (\r\n          <Box>\r\n            <Box mb={1}>\r\n              <input\r\n                type=\"date\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={(e) => {\r\n                  setCplDate(e.target.value);\r\n                }}\r\n                value={cplDate}\r\n              />\r\n              <DatePicker\r\n                autoOk\r\n                fullWidth\r\n                required\r\n                disableToolbar={true}\r\n                variant=\"inline\"\r\n                value={cplDate ? new Date(cplDate) : null}\r\n                format=\"YYYY/MM/DD\"\r\n                maxDate={new Date()}\r\n                onChange={(d) => {\r\n                  setCplDate(moment(d).format(\"YYYY-MM-DD\"));\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box mb={1}>\r\n              {(\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color={\r\n                    open === \"done\"\r\n                      ? description\r\n                        ? \"initial\"\r\n                        : \"error\"\r\n                      : \"initial\"\r\n                  }\r\n                >\r\n                  *{i18n.ISNTAPP_COMPLETE_COMMENT}\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n            <Box mb={1}>\r\n              <textarea\r\n                rows=\"6\"\r\n                placeholder={i18n.ISNTAPP_COMPLETE_COMMENT}\r\n                style={{ width: \"100%\", resize: \"none\" }}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n                value={description}\r\n              ></textarea>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </ConfirmModal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}
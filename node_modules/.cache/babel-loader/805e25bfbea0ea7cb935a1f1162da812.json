{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\LoginPage\\\\index.js\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as action from \"actions\";\nimport schindler from \"assets/img/logo.png\";\nimport Alert from \"components/Alert\";\nimport Form, { Checkbox, hasError, Password, PhoneNumber, validate } from \"components/Form\";\nimport Loading from \"components/Loading\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport store from \"js/store\";\nimport Camera from \"components/Camera\";\nconst LoginPage = withStyles(() => {\n  return {\n    root: {\n      position: \"absolute\",\n      height: \"100%\",\n      width: \"100%\",\n      backgroundColor: \"white\",\n      padding: \"16vh 16px\"\n    },\n    logo: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    title: {\n      textAlign: \"center\",\n      color: \"rgb(220,2,2)\"\n    },\n    submit: {\n      textTransform: \"none\",\n      color: \"white\",\n      backgroundColor: \"rgb(220,2,2)\"\n    }\n  };\n})(({\n  classes,\n  data,\n  loading,\n  location,\n  onChange,\n  submit,\n  setAuth\n}) => {\n  const history = useHistory();\n  const fields = [{\n    name: \"userNameOrEmailAddress\",\n    component: PhoneNumber,\n    label: \" 工号/手机号\",\n    required: true\n  }, {\n    name: \"password\",\n    component: Password,\n    label: \"密码\",\n    required: true\n  }, {\n    name: \"rememberMe\",\n    component: Checkbox,\n    label: \"记住密码\"\n  }];\n  const validation = validate(fields, data);\n\n  const onSubmit = () => {\n    if (data[\"userNameOrEmailAddress\"] === undefined || data[\"userNameOrEmailAddress\"] === \"\") {\n      alert(\" 工号/手机号\");\n    } else if (data[\"password\"] === undefined || data[\"password\"] === \"\") {\n      alert(\"请输入密码\");\n    }\n\n    if (!hasError(validation)) {\n      submit(data).then(res => {\n        if (res === null || res === void 0 ? void 0 : res.isPwdInit) {\n          const firstLogin = true;\n          setAuth(data);\n          window.localStorage.setItem(\"auth\", JSON.stringify(data));\n          history.push({\n            pathname: `/newUserResetPassword/${firstLogin}/${data.password}`\n          });\n        } else {\n          var _store$getState, _store$getState$auth, _store$getState$auth$;\n\n          console.log();\n\n          if (((_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : (_store$getState$auth = _store$getState.auth) === null || _store$getState$auth === void 0 ? void 0 : (_store$getState$auth$ = _store$getState$auth[\"roles\"]) === null || _store$getState$auth$ === void 0 ? void 0 : _store$getState$auth$[0]) === \"SL\") {\n            history.push({\n              pathname: \"/synchronize\"\n            });\n          } else {\n            history.push({\n              pathname: \"/activities\"\n            });\n          }\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: schindler,\n    alt: \"Schindler Logo\",\n    style: {\n      height: \"16vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    mb: 2,\n    className: classes.title,\n    fontSize: \"h6.fontSize\",\n    fontWeight: \"fontWeightBold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"SCF NI INSTALLATION QUALITY\"), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    fields: fields,\n    onChange: onChange,\n    validation: validation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Camera, {\n    onChange: value => console.log(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: loading,\n    style: {\n      backgroundColor: \"rgb(220,2,2)\",\n      color: \"white\"\n    },\n    fullWidth: true,\n    onClick: onSubmit,\n    size: \"large\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"\\u767B\\u5F55\"))), /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }));\n});\nexport default connect(({\n  formData,\n  loading\n}) => {\n  return {\n    data: formData,\n    loading\n  };\n}, dispatch => {\n  return {\n    onChange: data => (name, value) => {\n      if (name === \"username\" && !value) {\n        dispatch(action.setFormData({ ...data,\n          [name]: value,\n          rememberMe: false\n        }));\n      } else {\n        dispatch(action.setFormData({ ...data,\n          [name]: value\n        }));\n      }\n    },\n    submit: data => {\n      return dispatch(action.login(data));\n    },\n    setAuth: data => {\n      dispatch(action.setAuth(data));\n    }\n  };\n})(LoginPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/LoginPage/index.js"],"names":["Box","Button","withStyles","action","schindler","Alert","Form","Checkbox","hasError","Password","PhoneNumber","validate","Loading","React","connect","useHistory","store","Camera","LoginPage","root","position","height","width","backgroundColor","padding","logo","display","justifyContent","title","textAlign","color","submit","textTransform","classes","data","loading","location","onChange","setAuth","history","fields","name","component","label","required","validation","onSubmit","undefined","alert","then","res","isPwdInit","firstLogin","window","localStorage","setItem","JSON","stringify","push","pathname","password","console","log","getState","auth","value","formData","dispatch","setFormData","rememberMe","login"],"mappings":"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","sourcesContent":["import { Box, Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as action from \"actions\";\r\nimport schindler from \"assets/img/logo.png\";\r\nimport Alert from \"components/Alert\";\r\nimport Form, {\r\n  Checkbox,\r\n  hasError,\r\n  Password,\r\n  PhoneNumber,\r\n  validate,\r\n} from \"components/Form\";\r\nimport Loading from \"components/Loading\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport store from \"js/store\";\r\nimport Camera from \"components/Camera\"\r\n\r\nconst LoginPage = withStyles(() => {\r\n  return {\r\n    root: {\r\n      position: \"absolute\",\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n      backgroundColor: \"white\",\r\n      padding: \"16vh 16px\",\r\n    },\r\n    logo: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n    },\r\n    title: {\r\n      textAlign: \"center\",\r\n      color: \"rgb(220,2,2)\",\r\n    },\r\n    submit: {\r\n      textTransform: \"none\",\r\n      color: \"white\",\r\n      backgroundColor: \"rgb(220,2,2)\",\r\n    },\r\n  };\r\n})(({ classes, data, loading, location, onChange, submit, setAuth }) => {\r\n  const history = useHistory();\r\n\r\n  const fields = [\r\n    {\r\n      name: \"userNameOrEmailAddress\",\r\n      component: PhoneNumber,\r\n      label: \" 工号/手机号\",\r\n      required: true,\r\n    },\r\n    {\r\n      name: \"password\",\r\n      component: Password,\r\n      label: \"密码\",\r\n      required: true,\r\n    },\r\n    {\r\n      name: \"rememberMe\",\r\n      component: Checkbox,\r\n      label: \"记住密码\",\r\n    },\r\n  ];\r\n\r\n  const validation = validate(fields, data);\r\n\r\n  const onSubmit = () => {\r\n    if (\r\n      data[\"userNameOrEmailAddress\"] === undefined ||\r\n      data[\"userNameOrEmailAddress\"] === \"\"\r\n    ) {\r\n      alert(\" 工号/手机号\");\r\n    } else if (data[\"password\"] === undefined || data[\"password\"] === \"\") {\r\n      alert(\"请输入密码\");\r\n    }\r\n    if (!hasError(validation)) {\r\n      submit(data).then((res) => {\r\n        if (res?.isPwdInit) {\r\n          const firstLogin = true;\r\n          setAuth(data);\r\n          window.localStorage.setItem(\"auth\", JSON.stringify(data));\r\n          history.push({\r\n            pathname: `/newUserResetPassword/${firstLogin}/${data.password}`,\r\n          });\r\n        } else {\r\n          console.log()\r\n          if (store.getState()?.auth?.[\"roles\"]?.[0] === \"SL\") {\r\n            history.push({ pathname: \"/synchronize\" });\r\n          } else {\r\n            history.push({ pathname: \"/activities\" });\r\n          }\r\n       \r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.root}>\r\n        <Box className={classes.logo}>\r\n          <img\r\n            src={schindler}\r\n            alt=\"Schindler Logo\"\r\n            style={{ height: \"16vh\" }}\r\n          />\r\n        </Box>\r\n        <Box\r\n          mt={3}\r\n          mb={2}\r\n          className={classes.title}\r\n          fontSize=\"h6.fontSize\"\r\n          fontWeight=\"fontWeightBold\"\r\n        >\r\n          SCF NI INSTALLATION QUALITY\r\n        </Box>\r\n        <Box my={2}>\r\n          <Form fields={fields} onChange={onChange} validation={validation} />\r\n        </Box>\r\n        <Box my={2}>\r\n          <Camera onChange={(value)=>console.log(value)} />\r\n\r\n\r\n          <Button\r\n            disabled={loading}\r\n            style={{ backgroundColor: \"rgb(220,2,2)\", color: \"white\" }}\r\n            fullWidth\r\n            onClick={onSubmit}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n          >\r\n            登录\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      <Loading />\r\n      <Alert />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default connect(\r\n  ({ formData, loading }) => {\r\n    return { data: formData, loading };\r\n  },\r\n  (dispatch) => {\r\n    return {\r\n      onChange: (data) => (name, value) => {\r\n        if (name === \"username\" && !value) {\r\n          dispatch(\r\n            action.setFormData({ ...data, [name]: value, rememberMe: false })\r\n          );\r\n        } else {\r\n          dispatch(action.setFormData({ ...data, [name]: value }));\r\n        }\r\n      },\r\n      submit: (data) => {\r\n        return dispatch(action.login(data));\r\n      },\r\n      setAuth: (data) => {\r\n        dispatch(action.setAuth(data));\r\n      },\r\n    };\r\n  }\r\n)(LoginPage);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import assert from \"assert\";\nimport { SFDL_VERSION, XSD_VERSION, RETURN_TO_APP_URLS, DEFAULT_LANG } from \"./constants/global\";\nimport FieldTypes from \"./constants/FieldTypes\";\nimport { appendChild, appendVisRules, appendImages, appendTagRules, appendPrintTagRules //   appendAuthorizationRules,\n, appendExtVisRules } from \"./utils/xml\";\nimport isValidIdentifier, { removeXMLInvalidChars } from \"./expr/isValidIdentifier\";\nimport { encrypt } from \"./utils/crypto\";\nimport _ from \"lodash\";\nimport uuid from \"node-uuid\";\nimport setupIO from \"./setup\";\n\nfunction buildSfdl(doc, formMetaData, fields) {\n  if (!formMetaData.settings.status) {\n    formMetaData.settings.status = \"unknown\";\n  }\n\n  const form = doc.createElement(\"form\");\n  doc.appendChild(form);\n  form.setAttribute(\"version\", SFDL_VERSION);\n  form.setAttribute(\"identifier\", formMetaData.settings.identifier);\n  form.setAttribute(\"status\", formMetaData.settings.status);\n  form.setAttribute(\"global-template\", formMetaData.settings.globalTemplate !== undefined ? formMetaData.settings.globalTemplate : \"0\");\n  form.setAttribute(\"include-geo-location\", formMetaData.settings.includeGeoLocation);\n  form.setAttribute(\"send-once\", formMetaData.settings.sendOnce);\n  form.setAttribute(\"force-save-multi-language\", formMetaData.settings.forceSaveMultiLanguage);\n  form.setAttribute(\"template-version\", formMetaData.settings.globalTemplate === \"1\" ? formMetaData.templateVersion : \"\");\n  form.setAttribute(\"instance-id\", \"\");\n  form.setAttribute(\"geo-location\", \"\");\n  form.setAttribute(\"template-guid\", formMetaData.id);\n  form.setAttribute(\"xsd-version\", XSD_VERSION);\n  form.setAttribute(\"kg-code\", formMetaData.settings.kgCode);\n  form.setAttribute(\"max-number-of-pictures\", formMetaData.settings.maxNumberOfPictures);\n  buildTitleAndDescription(doc, form, formMetaData);\n  buildLogo(doc, form, formMetaData);\n  buildLanguages(doc, form, formMetaData);\n  buildAuthorizationUniveerse(doc, form, formMetaData);\n  buildTagUniverse(doc, form, formMetaData);\n  buildPrintTagUniverse(doc, form, formMetaData);\n  buildTagRulesInFilter(doc, form, formMetaData);\n  buildPrintSettings(doc, form, formMetaData);\n  buildFormActions(doc, form, formMetaData);\n  buildFormMetadata(doc, form, formMetaData);\n  buildBuildingBlocks(doc, form, formMetaData);\n\n  const findField = id => fields.find(f => f.id === id);\n\n  const authorizationUniverse = formMetaData.settings.authorizationUniverse;\n  const tagUniverse = formMetaData.settings.tagUniverse;\n  const printTagUniverse = formMetaData.settings.printTagUniverse;\n  extractPages(fields).forEach(pageData => {\n    const {\n      id,\n      identifier,\n      labelI18n,\n      visRules,\n      fields: pageFields,\n      isTitlePageEnd,\n      tagRules,\n      printTagRules,\n      externalVisRules\n    } = pageData;\n    const page = appendChild(doc, form, \"page\", null, {\n      guid: id,\n      identifier: identifier,\n      \"title-page-end\": isTitlePageEnd\n    });\n\n    if (labelI18n) {\n      Object.keys(labelI18n).forEach(lang => {\n        if (typeof labelI18n[lang] !== \"undefined\") {\n          appendChild(doc, page, \"title\", labelI18n[lang], {\n            lang\n          });\n        }\n      });\n    }\n\n    if (visRules) {\n      appendVisRules(doc, findField, page, visRules);\n    }\n\n    if (externalVisRules) {\n      appendExtVisRules(doc, findField, page, externalVisRules);\n    }\n\n    if (tagRules) {\n      appendTagRules(doc, page, null, tagRules);\n    }\n\n    if (printTagRules) {\n      //updatePrintTagValue\n      let printTagRulesWithLatestName = printTagRules.map(rule => {\n        const tag = printTagUniverse.find(t => t.id === rule.tagId);\n        return Object.assign({}, rule, {\n          tagName: tag.name\n        });\n      });\n      appendPrintTagRules(doc, page, null, printTagRulesWithLatestName);\n    }\n\n    extractSections(pageFields).forEach(sectionData => {\n      const {\n        id,\n        identifier,\n        labelI18n,\n        important,\n        descriptionI18n,\n        visRules,\n        fields: sectionFields,\n        // authorizationRules,\n        tagRules,\n        printTagRules,\n        qrCodeReader\n      } = sectionData;\n      const section = appendChild(doc, page, \"section\", null, {\n        guid: id,\n        identifier: identifier,\n        important: important,\n        \"qr-code-reader\": qrCodeReader\n      });\n\n      if (labelI18n) {\n        Object.keys(labelI18n).forEach(lang => {\n          if (typeof labelI18n[lang] !== \"undefined\") {\n            appendChild(doc, section, \"title\", labelI18n[lang], {\n              lang\n            });\n          }\n        });\n      }\n\n      if (descriptionI18n) {\n        Object.keys(descriptionI18n).forEach(lang => {\n          if (typeof descriptionI18n[lang] !== \"undefined\") {\n            appendChild(doc, section, \"description\", descriptionI18n[lang], {\n              lang\n            });\n          }\n        });\n      }\n\n      if (visRules) {\n        appendVisRules(doc, findField, section, visRules);\n      }\n\n      if (tagRules) {\n        appendTagRules(doc, section, null, tagRules);\n      }\n\n      if (printTagRules) {\n        //updatePrintTagValue\n        let printTagRulesWithLatestName = printTagRules.map(rule => {\n          const tag = printTagUniverse.find(t => t.id === rule.tagId);\n          return Object.assign({}, rule, {\n            tagName: tag.name\n          });\n        });\n        appendPrintTagRules(doc, section, null, printTagRulesWithLatestName);\n      }\n\n      sectionFields.forEach(buildFormField.bind(null, doc, findField, authorizationUniverse, tagUniverse, printTagUniverse, section));\n    });\n  });\n}\n\nfunction buildTitleAndDescription(doc, form, formMetaData) {\n  const {\n    titleI18n,\n    descriptionI18n\n  } = formMetaData.settings;\n  Object.keys(titleI18n).forEach(lang => {\n    if (typeof titleI18n[lang] !== \"undefined\") {\n      appendChild(doc, form, \"title\", titleI18n[lang], {\n        lang\n      });\n    }\n  });\n  Object.keys(descriptionI18n).forEach(lang => {\n    if (typeof descriptionI18n[lang] !== \"undefined\") {\n      appendChild(doc, form, \"description\", descriptionI18n[lang], {\n        lang\n      });\n    }\n  });\n}\n\nfunction buildLogo(doc, form, formMetaData) {\n  const {\n    logos\n  } = formMetaData.settings;\n  const logosNode = appendChild(doc, form, \"logos\");\n  appendImages(doc, logosNode, logos);\n}\n\nfunction buildLanguages(doc, form, formMetaData) {\n  const languages = appendChild(doc, form, \"languages\");\n  formMetaData.languages.forEach(lang => {\n    appendChild(doc, languages, \"language\", lang, {\n      fallback: lang === formMetaData.fallbackLang\n    });\n  });\n}\n\nfunction buildAuthorizationUniveerse(doc, form, formMetaData) {\n  const authorizationUniverse = appendChild(doc, form, \"authorizations\");\n  formMetaData.settings.authorizationUniverse.map(authorization => authorization.name).filter(authorization => isValidIdentifier(authorization)).forEach(authorization => appendChild(doc, authorizationUniverse, \"authorization\", \"\", {\n    name: authorization\n  }));\n}\n\nfunction buildTagUniverse(doc, form, formMetaData) {\n  const tagUniverse = appendChild(doc, form, \"tags\");\n  formMetaData.settings.tagUniverse.map(tag => tag.name).filter(tag => isValidIdentifier(tag)).forEach(tag => appendChild(doc, tagUniverse, \"tag\", \"\", {\n    name: tag\n  }));\n}\n\nfunction buildPrintTagUniverse(doc, form, formMetaData) {\n  const tagUniverse = appendChild(doc, form, \"print_tags\");\n  formMetaData.settings.printTagUniverse.filter(tag => isValidIdentifier(tag.name)).forEach(tag => appendChild(doc, tagUniverse, \"tag\", \"\", {\n    name: tag.name,\n    \"exclude-from-output\": tag.excludeFromOutput\n  }));\n}\n\nfunction buildTagRulesInFilter(doc, form, formMetaData) {\n  const {\n    tagRulesInFilter\n  } = formMetaData.settings;\n  appendChild(doc, form, \"tag_rules_in_filter\", tagRulesInFilter);\n}\n\nfunction buildPrintSettings(doc, form, formMetaData) {\n  const {\n    printHeader,\n    headerText,\n    printFooter,\n    footerText\n  } = formMetaData.settings.printSettings;\n  const settings = appendChild(doc, form, \"print_settings\", \"\", {\n    \"header-required\": printHeader,\n    \"footer-required\": printFooter\n  });\n  appendChild(doc, settings, \"header\", headerText);\n  appendChild(doc, settings, \"footer\", footerText);\n}\n\nfunction buildFormActions(doc, form, formMetaData) {\n  if (formMetaData.settings.emailAction.selected) {\n    const emailAction = appendChild(doc, form, \"email_action\");\n    var {\n      attachmentType\n    } = formMetaData.settings.emailAction;\n\n    if (!attachmentType || attachmentType.length === 0) {\n      attachmentType = \"all\";\n    }\n\n    emailAction.setAttribute(\"attachment-type\", attachmentType);\n    formMetaData.settings.emailAction.receivers.map(email => email.trim()).filter(email => email !== \"\").forEach(appendChild.bind(null, doc, emailAction, \"receiver\"));\n  }\n\n  if (formMetaData.settings.returnToApp.selected) {\n    const appId = formMetaData.settings.returnToApp.appId.trim();\n\n    if (appId !== \"\") {\n      const returnAppAction = appendChild(doc, form, \"return_to_app_action\");\n      appendChild(doc, returnAppAction, \"app_url\", formMetaData.settings.returnToApp.appId);\n    }\n  }\n\n  if (formMetaData.settings.webDavAction.selected) {\n    const webDavAction = appendChild(doc, form, \"webdav_action\");\n    [\"server\", \"path\", \"username\", \"password\"].forEach(key => {\n      appendChild(doc, webDavAction, key, encrypt(formMetaData.settings.webDavAction[key]));\n    });\n    var {\n      fileType\n    } = formMetaData.settings.webDavAction;\n\n    if (!fileType || fileType.length === 0) {\n      fileType = \"xml\";\n    }\n\n    appendChild(doc, webDavAction, \"file-type\", fileType);\n  }\n}\n\nfunction buildFormMetadata(doc, form, formMetaData) {\n  const metadataNode = appendChild(doc, form, \"meta_datas\");\n  formMetaData.settings.metadata.map(item => {\n    return {\n      key: item.key.trim(),\n      value: item.value.trim()\n    };\n  }).filter(item => item.key !== \"\" && item.value !== \"\").forEach(item => {\n    appendChild(doc, metadataNode, \"meta_data\", null, {\n      key: item.key,\n      value: item.value\n    });\n  });\n}\n\nfunction buildBuildingBlocks(doc, form, formMetaData) {\n  if (formMetaData.settings.blocks !== undefined) {\n    const blocksArraryNode = appendChild(doc, form, \"blocks\");\n    formMetaData.settings.blocks.forEach(item => {\n      const blockNode = appendChild(doc, blocksArraryNode, \"block\", null, {\n        guid: item.guid,\n        identifier: item.identifier,\n        title: item.title,\n        src: item.src\n      });\n      item.fields.forEach(fieldGuid => {\n        appendChild(doc, blockNode, \"field\", null, {\n          guid: fieldGuid\n        });\n      });\n    });\n  }\n}\n\nfunction extractPages(fields) {\n  // returns array of array of {label, visRules, fields}\n  const result = fields.reduce((acc, field) => {\n    if (field.type === \"pageBreak\") {\n      const {\n        id\n      } = field;\n      const {\n        identifier,\n        labelI18n,\n        visRules,\n        isTitlePageEnd,\n        tagRules,\n        printTagRules,\n        externalVisRules\n      } = field.settings;\n      acc.push({\n        id,\n        identifier,\n        labelI18n,\n        visRules,\n        fields: [],\n        isTitlePageEnd,\n        tagRules,\n        printTagRules,\n        externalVisRules\n      });\n      return acc;\n    } else {\n      const currentPage = acc[acc.length - 1];\n      currentPage.fields.push(field);\n      return acc;\n    }\n  }, [{\n    identifier: \"pagebreak-no-content\",\n    labelI18n: null,\n    visRules: [],\n    fields: [],\n    tagRules: [],\n    printTagRules: [],\n    externalVisRules: []\n  }]); // When fields starts with a pageBreak then our initial value for the accumulator above\n  // can be removed:\n\n  const firstPage = result[0];\n\n  if (firstPage.labelI18n === null && firstPage.descriptionI18n === null && firstPage.fields.length === 0) {\n    result.splice(0, 1);\n  }\n\n  return result;\n}\n\nfunction extractSections(fields) {\n  // returns array of {label, description, fields}\n  const result = fields.reduce((acc, field) => {\n    if (field.type === \"sectionBreak\") {\n      const {\n        id\n      } = field;\n      const {\n        identifier,\n        labelI18n,\n        important,\n        descriptionI18n,\n        visRules,\n        tagRules,\n        printTagRules,\n        qrCodeReader,\n        externalVisRules\n      } = field.settings;\n      acc.push({\n        id,\n        identifier,\n        labelI18n,\n        important,\n        descriptionI18n,\n        visRules,\n        fields: [],\n        tagRules,\n        printTagRules,\n        qrCodeReader,\n        externalVisRules\n      });\n      return acc;\n    } else {\n      const currentSection = acc[acc.length - 1];\n      currentSection.fields.push(field);\n      return acc;\n    }\n  }, [{\n    identifier: \"sectionbreak-no-content\",\n    labelI18n: null,\n    important: false,\n    descriptionI18n: null,\n    visRules: [],\n    fields: [],\n    tagRules: [],\n    printTagRules: [],\n    qrCodeReader: false,\n    externalVisRules: []\n  }]); // When fields starts with a sectionBreak then our initial value for the accumulator above\n  // can be removed:\n\n  const firstSection = result[0];\n\n  if (firstSection.labelI18n === null && firstSection.descriptionI18n === null && firstSection.fields.length === 0) {\n    result.splice(0, 1);\n  }\n\n  return result;\n}\n\nfunction buildFormField(doc, findField, authorizationUniverse, tagUniverse, printTagUniverse, section, field) {\n  const serializer = _.get(FieldTypes, `${field.type}.io.serialize`);\n\n  if (serializer) {\n    if (field.settings.authorizationRules) {\n      field.settings.authorizationRules = field.settings.authorizationRules.map(rule => {\n        const authorization = authorizationUniverse.find(t => t.id === rule.authorizationId);\n        assert(authorization);\n        return Object.assign({}, rule, {\n          authorizationName: authorization.name\n        });\n      });\n    }\n\n    if (field.settings.tagRules) {\n      field.settings.tagRules = field.settings.tagRules.map(rule => {\n        const tag = tagUniverse.find(t => t.id === rule.tagId);\n        assert(tag);\n        return Object.assign({}, rule, {\n          tagName: tag.name\n        });\n      });\n    }\n\n    if (field.settings.printTagRules) {\n      field.settings.printTagRules = field.settings.printTagRules.map(rule => {\n        const tag = printTagUniverse.find(t => t.id === rule.tagId);\n        assert(tag);\n        return Object.assign({}, rule, {\n          tagName: tag.name\n        });\n      });\n    }\n\n    serializer(doc, findField, section, field);\n  } else {\n    throw new Error(\"No SFDL serializer found for field-type=\" + field.type);\n  }\n}\n\nlet defaultForm = {\n  id: uuid.v4(),\n  languages: [DEFAULT_LANG],\n  fallbackLang: DEFAULT_LANG,\n  settings: {\n    identifier: \"\",\n    titleI18n: {\n      English: \"Untitled Form\"\n    },\n    globalTemplate: \"0\",\n    descriptionI18n: {\n      English: \"This is a new form. Please add some fields and make it awesome!\"\n    },\n    includeGeoLocation: false,\n    sendOnce: false,\n    forceSaveMultiLanguage: false,\n    authorizationUniverse: [],\n    tagUniverse: [],\n    // important: this might contain illegal/blank tags -> ignore them!\n    printTagUniverse: [],\n    tagRulesInFilter: \"0\",\n    emailAction: {\n      selected: false,\n      receivers: []\n    },\n    returnToApp: {\n      selected: false,\n      appId: RETURN_TO_APP_URLS[0]\n    },\n    webDavAction: {\n      selected: false,\n      server: \"\",\n      path: \"\",\n      username: \"\",\n      password: \"\"\n    },\n    metadata: [],\n    blocks: [],\n    // hold the building block references\n    logos: [],\n    kgCode: \"\",\n    maxNumberOfPictures: \"10\",\n    printSettings: {\n      printHeader: false,\n      headerText: \"\",\n      printFooter: false,\n      footerText: \"\"\n    }\n  }\n};\n\nfunction removeLanguages(fieldToMap) {\n  //remove I18n texts from fields and form settings\n  removeLanguageSettings(defaultForm.settings, defaultForm.languages);\n  fieldToMap.forEach(function (field) {\n    removeLanguageSettings(field.settings, defaultForm.languages);\n\n    if (typeof field.settings.options !== \"undefined\") {\n      field.settings.options.forEach(option => {\n        removeLanguageSettings(option, defaultForm.languages);\n      });\n    }\n  });\n}\n\nfunction removeLanguageSettings(languageSettings, languages) {\n  Object.keys(languageSettings).forEach(function (key) {\n    if (key.endsWith(\"I18n\") && typeof languageSettings[key] === \"object\") {\n      Object.keys(languageSettings[key]).forEach(function (langKey) {\n        if (languages.indexOf(langKey) < 0) {\n          delete languageSettings[key][langKey];\n        }\n      });\n    }\n  });\n}\n\nexport default function serialize(data) {\n  setupIO();\n  const formMetaData = data.form;\n  const fields = data.fields;\n  const needRemoveLanguages = !!data.needRemoveLanguages; // if (formMetaData.instanceId) {\n  //   throw new Error(\"Cannot serialize a form that already has an instance ID!\");\n  // }\n\n  if (needRemoveLanguages) {\n    removeLanguages(fields);\n  }\n\n  const doc = document.implementation.createDocument(\"\", \"\", null);\n  buildSfdl(doc, formMetaData, fields);\n  const serializer = new XMLSerializer();\n  return removeXMLInvalidChars('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' + serializer.serializeToString(doc));\n}","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/serialize.js"],"names":["assert","SFDL_VERSION","XSD_VERSION","RETURN_TO_APP_URLS","DEFAULT_LANG","FieldTypes","appendChild","appendVisRules","appendImages","appendTagRules","appendPrintTagRules","appendExtVisRules","isValidIdentifier","removeXMLInvalidChars","encrypt","_","uuid","setupIO","buildSfdl","doc","formMetaData","fields","settings","status","form","createElement","setAttribute","identifier","globalTemplate","undefined","includeGeoLocation","sendOnce","forceSaveMultiLanguage","templateVersion","id","kgCode","maxNumberOfPictures","buildTitleAndDescription","buildLogo","buildLanguages","buildAuthorizationUniveerse","buildTagUniverse","buildPrintTagUniverse","buildTagRulesInFilter","buildPrintSettings","buildFormActions","buildFormMetadata","buildBuildingBlocks","findField","find","f","authorizationUniverse","tagUniverse","printTagUniverse","extractPages","forEach","pageData","labelI18n","visRules","pageFields","isTitlePageEnd","tagRules","printTagRules","externalVisRules","page","guid","Object","keys","lang","printTagRulesWithLatestName","map","rule","tag","t","tagId","assign","tagName","name","extractSections","sectionData","important","descriptionI18n","sectionFields","qrCodeReader","section","buildFormField","bind","titleI18n","logos","logosNode","languages","fallback","fallbackLang","authorization","filter","excludeFromOutput","tagRulesInFilter","printHeader","headerText","printFooter","footerText","printSettings","emailAction","selected","attachmentType","length","receivers","email","trim","returnToApp","appId","returnAppAction","webDavAction","key","fileType","metadataNode","metadata","item","value","blocks","blocksArraryNode","blockNode","title","src","fieldGuid","result","reduce","acc","field","type","push","currentPage","firstPage","splice","currentSection","firstSection","serializer","get","authorizationRules","authorizationId","authorizationName","Error","defaultForm","v4","English","server","path","username","password","removeLanguages","fieldToMap","removeLanguageSettings","options","option","languageSettings","endsWith","langKey","indexOf","serialize","data","needRemoveLanguages","document","implementation","createDocument","XMLSerializer","serializeToString"],"mappings":"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","sourcesContent":["import assert from \"assert\";\r\nimport {\r\n  SFDL_VERSION,\r\n  XSD_VERSION,\r\n  RETURN_TO_APP_URLS,\r\n  DEFAULT_LANG,\r\n} from \"./constants/global\";\r\nimport FieldTypes from \"./constants/FieldTypes\";\r\nimport {\r\n  appendChild,\r\n  appendVisRules,\r\n  appendImages,\r\n  appendTagRules,\r\n  appendPrintTagRules,\r\n  //   appendAuthorizationRules,\r\n  appendExtVisRules,\r\n} from \"./utils/xml\";\r\nimport isValidIdentifier, {\r\n  removeXMLInvalidChars,\r\n} from \"./expr/isValidIdentifier\";\r\nimport { encrypt } from \"./utils/crypto\";\r\nimport _ from \"lodash\";\r\nimport uuid from \"node-uuid\";\r\nimport setupIO from \"./setup\";\r\n\r\nfunction buildSfdl(doc, formMetaData, fields) {\r\n  if (!formMetaData.settings.status) {\r\n    formMetaData.settings.status = \"unknown\";\r\n  }\r\n\r\n  const form = doc.createElement(\"form\");\r\n  doc.appendChild(form);\r\n  form.setAttribute(\"version\", SFDL_VERSION);\r\n  form.setAttribute(\"identifier\", formMetaData.settings.identifier);\r\n  form.setAttribute(\"status\", formMetaData.settings.status);\r\n  form.setAttribute(\r\n    \"global-template\",\r\n    formMetaData.settings.globalTemplate !== undefined\r\n      ? formMetaData.settings.globalTemplate\r\n      : \"0\"\r\n  );\r\n  form.setAttribute(\r\n    \"include-geo-location\",\r\n    formMetaData.settings.includeGeoLocation\r\n  );\r\n  form.setAttribute(\"send-once\", formMetaData.settings.sendOnce);\r\n  form.setAttribute(\r\n    \"force-save-multi-language\",\r\n    formMetaData.settings.forceSaveMultiLanguage\r\n  );\r\n  form.setAttribute(\r\n    \"template-version\",\r\n    formMetaData.settings.globalTemplate === \"1\"\r\n      ? formMetaData.templateVersion\r\n      : \"\"\r\n  );\r\n  form.setAttribute(\"instance-id\", \"\");\r\n  form.setAttribute(\"geo-location\", \"\");\r\n  form.setAttribute(\"template-guid\", formMetaData.id);\r\n  form.setAttribute(\"xsd-version\", XSD_VERSION);\r\n  form.setAttribute(\"kg-code\", formMetaData.settings.kgCode);\r\n  form.setAttribute(\r\n    \"max-number-of-pictures\",\r\n    formMetaData.settings.maxNumberOfPictures\r\n  );\r\n\r\n  buildTitleAndDescription(doc, form, formMetaData);\r\n  buildLogo(doc, form, formMetaData);\r\n  buildLanguages(doc, form, formMetaData);\r\n  buildAuthorizationUniveerse(doc, form, formMetaData);\r\n  buildTagUniverse(doc, form, formMetaData);\r\n  buildPrintTagUniverse(doc, form, formMetaData);\r\n  buildTagRulesInFilter(doc, form, formMetaData);\r\n  buildPrintSettings(doc, form, formMetaData);\r\n  buildFormActions(doc, form, formMetaData);\r\n  buildFormMetadata(doc, form, formMetaData);\r\n  buildBuildingBlocks(doc, form, formMetaData);\r\n\r\n  const findField = (id) => fields.find((f) => f.id === id);\r\n  const authorizationUniverse = formMetaData.settings.authorizationUniverse;\r\n  const tagUniverse = formMetaData.settings.tagUniverse;\r\n  const printTagUniverse = formMetaData.settings.printTagUniverse;\r\n\r\n  extractPages(fields).forEach((pageData) => {\r\n    const {\r\n      id,\r\n      identifier,\r\n      labelI18n,\r\n      visRules,\r\n      fields: pageFields,\r\n      isTitlePageEnd,\r\n      tagRules,\r\n      printTagRules,\r\n      externalVisRules,\r\n    } = pageData;\r\n    const page = appendChild(doc, form, \"page\", null, {\r\n      guid: id,\r\n      identifier: identifier,\r\n      \"title-page-end\": isTitlePageEnd,\r\n    });\r\n\r\n    if (labelI18n) {\r\n      Object.keys(labelI18n).forEach((lang) => {\r\n        if (typeof labelI18n[lang] !== \"undefined\") {\r\n          appendChild(doc, page, \"title\", labelI18n[lang], { lang });\r\n        }\r\n      });\r\n    }\r\n\r\n    if (visRules) {\r\n      appendVisRules(doc, findField, page, visRules);\r\n    }\r\n\r\n    if (externalVisRules) {\r\n      appendExtVisRules(doc, findField, page, externalVisRules);\r\n    }\r\n\r\n    if (tagRules) {\r\n      appendTagRules(doc, page, null, tagRules);\r\n    }\r\n\r\n    if (printTagRules) {\r\n      //updatePrintTagValue\r\n      let printTagRulesWithLatestName = printTagRules.map((rule) => {\r\n        const tag = printTagUniverse.find((t) => t.id === rule.tagId);\r\n        return Object.assign({}, rule, { tagName: tag.name });\r\n      });\r\n      appendPrintTagRules(doc, page, null, printTagRulesWithLatestName);\r\n    }\r\n\r\n    extractSections(pageFields).forEach((sectionData) => {\r\n      const {\r\n        id,\r\n        identifier,\r\n        labelI18n,\r\n        important,\r\n        descriptionI18n,\r\n        visRules,\r\n        fields: sectionFields,\r\n        // authorizationRules,\r\n        tagRules,\r\n        printTagRules,\r\n        qrCodeReader,\r\n      } = sectionData;\r\n      const section = appendChild(doc, page, \"section\", null, {\r\n        guid: id,\r\n        identifier: identifier,\r\n        important: important,\r\n        \"qr-code-reader\": qrCodeReader,\r\n      });\r\n\r\n      if (labelI18n) {\r\n        Object.keys(labelI18n).forEach((lang) => {\r\n          if (typeof labelI18n[lang] !== \"undefined\") {\r\n            appendChild(doc, section, \"title\", labelI18n[lang], { lang });\r\n          }\r\n        });\r\n      }\r\n\r\n      if (descriptionI18n) {\r\n        Object.keys(descriptionI18n).forEach((lang) => {\r\n          if (typeof descriptionI18n[lang] !== \"undefined\") {\r\n            appendChild(doc, section, \"description\", descriptionI18n[lang], {\r\n              lang,\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      if (visRules) {\r\n        appendVisRules(doc, findField, section, visRules);\r\n      }\r\n\r\n      if (tagRules) {\r\n        appendTagRules(doc, section, null, tagRules);\r\n      }\r\n\r\n      if (printTagRules) {\r\n        //updatePrintTagValue\r\n        let printTagRulesWithLatestName = printTagRules.map((rule) => {\r\n          const tag = printTagUniverse.find((t) => t.id === rule.tagId);\r\n          return Object.assign({}, rule, { tagName: tag.name });\r\n        });\r\n        appendPrintTagRules(doc, section, null, printTagRulesWithLatestName);\r\n      }\r\n\r\n      sectionFields.forEach(\r\n        buildFormField.bind(\r\n          null,\r\n          doc,\r\n          findField,\r\n          authorizationUniverse,\r\n          tagUniverse,\r\n          printTagUniverse,\r\n          section\r\n        )\r\n      );\r\n    });\r\n  });\r\n}\r\n\r\nfunction buildTitleAndDescription(doc, form, formMetaData) {\r\n  const { titleI18n, descriptionI18n } = formMetaData.settings;\r\n\r\n  Object.keys(titleI18n).forEach((lang) => {\r\n    if (typeof titleI18n[lang] !== \"undefined\") {\r\n      appendChild(doc, form, \"title\", titleI18n[lang], { lang });\r\n    }\r\n  });\r\n\r\n  Object.keys(descriptionI18n).forEach((lang) => {\r\n    if (typeof descriptionI18n[lang] !== \"undefined\") {\r\n      appendChild(doc, form, \"description\", descriptionI18n[lang], { lang });\r\n    }\r\n  });\r\n}\r\n\r\nfunction buildLogo(doc, form, formMetaData) {\r\n  const { logos } = formMetaData.settings;\r\n\r\n  const logosNode = appendChild(doc, form, \"logos\");\r\n  appendImages(doc, logosNode, logos);\r\n}\r\n\r\nfunction buildLanguages(doc, form, formMetaData) {\r\n  const languages = appendChild(doc, form, \"languages\");\r\n\r\n  formMetaData.languages.forEach((lang) => {\r\n    appendChild(doc, languages, \"language\", lang, {\r\n      fallback: lang === formMetaData.fallbackLang,\r\n    });\r\n  });\r\n}\r\n\r\nfunction buildAuthorizationUniveerse(doc, form, formMetaData) {\r\n  const authorizationUniverse = appendChild(doc, form, \"authorizations\");\r\n\r\n  formMetaData.settings.authorizationUniverse\r\n    .map((authorization) => authorization.name)\r\n    .filter((authorization) => isValidIdentifier(authorization))\r\n    .forEach((authorization) =>\r\n      appendChild(doc, authorizationUniverse, \"authorization\", \"\", {\r\n        name: authorization,\r\n      })\r\n    );\r\n}\r\n\r\nfunction buildTagUniverse(doc, form, formMetaData) {\r\n  const tagUniverse = appendChild(doc, form, \"tags\");\r\n\r\n  formMetaData.settings.tagUniverse\r\n    .map((tag) => tag.name)\r\n    .filter((tag) => isValidIdentifier(tag))\r\n    .forEach((tag) => appendChild(doc, tagUniverse, \"tag\", \"\", { name: tag }));\r\n}\r\n\r\nfunction buildPrintTagUniverse(doc, form, formMetaData) {\r\n  const tagUniverse = appendChild(doc, form, \"print_tags\");\r\n\r\n  formMetaData.settings.printTagUniverse\r\n    .filter((tag) => isValidIdentifier(tag.name))\r\n    .forEach((tag) =>\r\n      appendChild(doc, tagUniverse, \"tag\", \"\", {\r\n        name: tag.name,\r\n        \"exclude-from-output\": tag.excludeFromOutput,\r\n      })\r\n    );\r\n}\r\n\r\nfunction buildTagRulesInFilter(doc, form, formMetaData) {\r\n  const { tagRulesInFilter } = formMetaData.settings;\r\n  appendChild(doc, form, \"tag_rules_in_filter\", tagRulesInFilter);\r\n}\r\n\r\nfunction buildPrintSettings(doc, form, formMetaData) {\r\n  const {\r\n    printHeader,\r\n    headerText,\r\n    printFooter,\r\n    footerText,\r\n  } = formMetaData.settings.printSettings;\r\n\r\n  const settings = appendChild(doc, form, \"print_settings\", \"\", {\r\n    \"header-required\": printHeader,\r\n    \"footer-required\": printFooter,\r\n  });\r\n\r\n  appendChild(doc, settings, \"header\", headerText);\r\n  appendChild(doc, settings, \"footer\", footerText);\r\n}\r\n\r\nfunction buildFormActions(doc, form, formMetaData) {\r\n  if (formMetaData.settings.emailAction.selected) {\r\n    const emailAction = appendChild(doc, form, \"email_action\");\r\n\r\n    var { attachmentType } = formMetaData.settings.emailAction;\r\n    if (!attachmentType || attachmentType.length === 0) {\r\n      attachmentType = \"all\";\r\n    }\r\n\r\n    emailAction.setAttribute(\"attachment-type\", attachmentType);\r\n\r\n    formMetaData.settings.emailAction.receivers\r\n      .map((email) => email.trim())\r\n      .filter((email) => email !== \"\")\r\n      .forEach(appendChild.bind(null, doc, emailAction, \"receiver\"));\r\n  }\r\n\r\n  if (formMetaData.settings.returnToApp.selected) {\r\n    const appId = formMetaData.settings.returnToApp.appId.trim();\r\n    if (appId !== \"\") {\r\n      const returnAppAction = appendChild(doc, form, \"return_to_app_action\");\r\n      appendChild(\r\n        doc,\r\n        returnAppAction,\r\n        \"app_url\",\r\n        formMetaData.settings.returnToApp.appId\r\n      );\r\n    }\r\n  }\r\n\r\n  if (formMetaData.settings.webDavAction.selected) {\r\n    const webDavAction = appendChild(doc, form, \"webdav_action\");\r\n\r\n    [\"server\", \"path\", \"username\", \"password\"].forEach((key) => {\r\n      appendChild(\r\n        doc,\r\n        webDavAction,\r\n        key,\r\n        encrypt(formMetaData.settings.webDavAction[key])\r\n      );\r\n    });\r\n\r\n    var { fileType } = formMetaData.settings.webDavAction;\r\n    if (!fileType || fileType.length === 0) {\r\n      fileType = \"xml\";\r\n    }\r\n\r\n    appendChild(doc, webDavAction, \"file-type\", fileType);\r\n  }\r\n}\r\n\r\nfunction buildFormMetadata(doc, form, formMetaData) {\r\n  const metadataNode = appendChild(doc, form, \"meta_datas\");\r\n\r\n  formMetaData.settings.metadata\r\n    .map((item) => {\r\n      return { key: item.key.trim(), value: item.value.trim() };\r\n    })\r\n    .filter((item) => item.key !== \"\" && item.value !== \"\")\r\n    .forEach((item) => {\r\n      appendChild(doc, metadataNode, \"meta_data\", null, {\r\n        key: item.key,\r\n        value: item.value,\r\n      });\r\n    });\r\n}\r\n\r\nfunction buildBuildingBlocks(doc, form, formMetaData) {\r\n  if (formMetaData.settings.blocks !== undefined) {\r\n    const blocksArraryNode = appendChild(doc, form, \"blocks\");\r\n\r\n    formMetaData.settings.blocks.forEach((item) => {\r\n      const blockNode = appendChild(doc, blocksArraryNode, \"block\", null, {\r\n        guid: item.guid,\r\n        identifier: item.identifier,\r\n        title: item.title,\r\n        src: item.src,\r\n      });\r\n\r\n      item.fields.forEach((fieldGuid) => {\r\n        appendChild(doc, blockNode, \"field\", null, { guid: fieldGuid });\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nfunction extractPages(fields) {\r\n  // returns array of array of {label, visRules, fields}\r\n  const result = fields.reduce(\r\n    (acc, field) => {\r\n      if (field.type === \"pageBreak\") {\r\n        const { id } = field;\r\n        const {\r\n          identifier,\r\n          labelI18n,\r\n          visRules,\r\n          isTitlePageEnd,\r\n          tagRules,\r\n          printTagRules,\r\n          externalVisRules,\r\n        } = field.settings;\r\n        acc.push({\r\n          id,\r\n          identifier,\r\n          labelI18n,\r\n          visRules,\r\n          fields: [],\r\n          isTitlePageEnd,\r\n          tagRules,\r\n          printTagRules,\r\n          externalVisRules,\r\n        });\r\n        return acc;\r\n      } else {\r\n        const currentPage = acc[acc.length - 1];\r\n        currentPage.fields.push(field);\r\n        return acc;\r\n      }\r\n    },\r\n    [\r\n      {\r\n        identifier: \"pagebreak-no-content\",\r\n        labelI18n: null,\r\n        visRules: [],\r\n        fields: [],\r\n        tagRules: [],\r\n        printTagRules: [],\r\n        externalVisRules: [],\r\n      },\r\n    ]\r\n  );\r\n\r\n  // When fields starts with a pageBreak then our initial value for the accumulator above\r\n  // can be removed:\r\n  const firstPage = result[0];\r\n  if (\r\n    firstPage.labelI18n === null &&\r\n    firstPage.descriptionI18n === null &&\r\n    firstPage.fields.length === 0\r\n  ) {\r\n    result.splice(0, 1);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction extractSections(fields) {\r\n  // returns array of {label, description, fields}\r\n  const result = fields.reduce(\r\n    (acc, field) => {\r\n      if (field.type === \"sectionBreak\") {\r\n        const { id } = field;\r\n        const {\r\n          identifier,\r\n          labelI18n,\r\n          important,\r\n          descriptionI18n,\r\n          visRules,\r\n          tagRules,\r\n          printTagRules,\r\n          qrCodeReader,\r\n          externalVisRules,\r\n        } = field.settings;\r\n        acc.push({\r\n          id,\r\n          identifier,\r\n          labelI18n,\r\n          important,\r\n          descriptionI18n,\r\n          visRules,\r\n          fields: [],\r\n          tagRules,\r\n          printTagRules,\r\n          qrCodeReader,\r\n          externalVisRules,\r\n        });\r\n        return acc;\r\n      } else {\r\n        const currentSection = acc[acc.length - 1];\r\n        currentSection.fields.push(field);\r\n        return acc;\r\n      }\r\n    },\r\n    [\r\n      {\r\n        identifier: \"sectionbreak-no-content\",\r\n        labelI18n: null,\r\n        important: false,\r\n        descriptionI18n: null,\r\n        visRules: [],\r\n        fields: [],\r\n        tagRules: [],\r\n        printTagRules: [],\r\n        qrCodeReader: false,\r\n        externalVisRules: [],\r\n      },\r\n    ]\r\n  );\r\n\r\n  // When fields starts with a sectionBreak then our initial value for the accumulator above\r\n  // can be removed:\r\n  const firstSection = result[0];\r\n  if (\r\n    firstSection.labelI18n === null &&\r\n    firstSection.descriptionI18n === null &&\r\n    firstSection.fields.length === 0\r\n  ) {\r\n    result.splice(0, 1);\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction buildFormField(\r\n  doc,\r\n  findField,\r\n  authorizationUniverse,\r\n  tagUniverse,\r\n  printTagUniverse,\r\n  section,\r\n  field\r\n) {\r\n  const serializer = _.get(FieldTypes, `${field.type}.io.serialize`);\r\n  if (serializer) {\r\n    if (field.settings.authorizationRules) {\r\n      field.settings.authorizationRules = field.settings.authorizationRules.map(\r\n        (rule) => {\r\n          const authorization = authorizationUniverse.find(\r\n            (t) => t.id === rule.authorizationId\r\n          );\r\n          assert(authorization);\r\n          return Object.assign({}, rule, {\r\n            authorizationName: authorization.name,\r\n          });\r\n        }\r\n      );\r\n    }\r\n\r\n    if (field.settings.tagRules) {\r\n      field.settings.tagRules = field.settings.tagRules.map((rule) => {\r\n        const tag = tagUniverse.find((t) => t.id === rule.tagId);\r\n        assert(tag);\r\n        return Object.assign({}, rule, { tagName: tag.name });\r\n      });\r\n    }\r\n\r\n    if (field.settings.printTagRules) {\r\n      field.settings.printTagRules = field.settings.printTagRules.map(\r\n        (rule) => {\r\n          const tag = printTagUniverse.find((t) => t.id === rule.tagId);\r\n          assert(tag);\r\n          return Object.assign({}, rule, { tagName: tag.name });\r\n        }\r\n      );\r\n    }\r\n\r\n    serializer(doc, findField, section, field);\r\n  } else {\r\n    throw new Error(\"No SFDL serializer found for field-type=\" + field.type);\r\n  }\r\n}\r\n\r\nlet defaultForm = {\r\n  id: uuid.v4(),\r\n  languages: [DEFAULT_LANG],\r\n  fallbackLang: DEFAULT_LANG,\r\n  settings: {\r\n    identifier: \"\",\r\n    titleI18n: { English: \"Untitled Form\" },\r\n    globalTemplate: \"0\",\r\n    descriptionI18n: {\r\n      English:\r\n        \"This is a new form. Please add some fields and make it awesome!\",\r\n    },\r\n    includeGeoLocation: false,\r\n    sendOnce: false,\r\n    forceSaveMultiLanguage: false,\r\n    authorizationUniverse: [],\r\n    tagUniverse: [], // important: this might contain illegal/blank tags -> ignore them!\r\n    printTagUniverse: [],\r\n    tagRulesInFilter: \"0\",\r\n    emailAction: {\r\n      selected: false,\r\n      receivers: [],\r\n    },\r\n    returnToApp: {\r\n      selected: false,\r\n      appId: RETURN_TO_APP_URLS[0],\r\n    },\r\n    webDavAction: {\r\n      selected: false,\r\n      server: \"\",\r\n      path: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n    },\r\n    metadata: [],\r\n    blocks: [], // hold the building block references\r\n    logos: [],\r\n    kgCode: \"\",\r\n    maxNumberOfPictures: \"10\",\r\n    printSettings: {\r\n      printHeader: false,\r\n      headerText: \"\",\r\n      printFooter: false,\r\n      footerText: \"\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction removeLanguages(fieldToMap) {\r\n  //remove I18n texts from fields and form settings\r\n  removeLanguageSettings(defaultForm.settings, defaultForm.languages);\r\n  fieldToMap.forEach(function (field) {\r\n    removeLanguageSettings(field.settings, defaultForm.languages);\r\n    if (typeof field.settings.options !== \"undefined\") {\r\n      field.settings.options.forEach((option) => {\r\n        removeLanguageSettings(option, defaultForm.languages);\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nfunction removeLanguageSettings(languageSettings, languages) {\r\n  Object.keys(languageSettings).forEach(function (key) {\r\n    if (key.endsWith(\"I18n\") && typeof languageSettings[key] === \"object\") {\r\n      Object.keys(languageSettings[key]).forEach(function (langKey) {\r\n        if (languages.indexOf(langKey) < 0) {\r\n          delete languageSettings[key][langKey];\r\n        }\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\nexport default function serialize(data) {\r\n  setupIO();\r\n\r\n  const formMetaData = data.form;\r\n  const fields = data.fields;\r\n  const needRemoveLanguages = !!data.needRemoveLanguages;\r\n\r\n  // if (formMetaData.instanceId) {\r\n  //   throw new Error(\"Cannot serialize a form that already has an instance ID!\");\r\n  // }\r\n\r\n  if (needRemoveLanguages) {\r\n    removeLanguages(fields);\r\n  }\r\n\r\n  const doc = document.implementation.createDocument(\"\", \"\", null);\r\n  buildSfdl(doc, formMetaData, fields);\r\n\r\n  const serializer = new XMLSerializer();\r\n  return removeXMLInvalidChars(\r\n    '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' +\r\n      serializer.serializeToString(doc)\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import{get,post}from\"./base\";export var fetchTasks=function fetchTasks(data){return get(\"/app/persTaskGet\",data);};export var fetchIDPTTasks=function fetchIDPTTasks(userId){var id=userId.length===6?'00'+userId:userId;return get(\"/app/LDPTDb/GetTasks?Executor=\".concat(id));};export var fetchEISVOrdersData=function fetchEISVOrdersData(){var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var url=\"app/ordersGet/ByOrders\";data.forEach(function(item,index){// eslint-disable-next-line\nurl+=(index===0?'?':'')+'orders='+\"\".concat(item).concat(data.length-1!==index?'&':'');});return get(url);};export var createTask=function createTask(data){return post(\"/app/persTaskSet\",data);};export var processingTasks=function processingTasks(action,id,data){return post(\"/app/LDPTDb/\".concat(id,\"/\").concat(action,\"?body=\").concat(JSON.stringify(data)));};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/api/task.js"],"names":["get","post","fetchTasks","data","fetchIDPTTasks","userId","id","length","fetchEISVOrdersData","url","forEach","item","index","createTask","processingTasks","action","JSON","stringify"],"mappings":"AAAA,OAASA,GAAT,CAAcC,IAAd,KAA0B,QAA1B,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CAClC,MAAOH,CAAAA,GAAG,CAAC,kBAAD,CAAqBG,IAArB,CAAV,CACD,CAFM,CAIP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,MAAD,CAAY,CACxC,GAAIC,CAAAA,EAAE,CAAGD,MAAM,CAACE,MAAP,GAAkB,CAAlB,CAAsB,KAAOF,MAA7B,CAAsCA,MAA/C,CACA,MAAOL,CAAAA,GAAG,yCAAkCM,EAAlC,EAAV,CACD,CAHM,CAKP,MAAO,IAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAa,IAAZL,CAAAA,IAAY,2DAAP,EAAO,CAC9C,GAAIM,CAAAA,GAAG,CAAG,wBAAV,CACAN,IAAI,CAACO,OAAL,CAAa,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAC5B;AACAH,GAAG,EAAI,CAACG,KAAK,GAAG,CAAR,CAAU,GAAV,CAAc,EAAf,EAAmB,SAAnB,WAAkCD,IAAlC,SAAyCR,IAAI,CAACI,MAAL,CAAY,CAAZ,GAAgBK,KAAhB,CAAsB,GAAtB,CAA0B,EAAnE,CAAP,CACD,CAHD,EAIA,MAAOZ,CAAAA,GAAG,CAACS,GAAD,CAAV,CACD,CAPM,CASP,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACV,IAAD,CAAU,CAClC,MAAOF,CAAAA,IAAI,CAAC,kBAAD,CAAqBE,IAArB,CAAX,CACD,CAFM,CAIP,MAAO,IAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,MAAD,CAAQT,EAAR,CAAWH,IAAX,CAAoB,CACjD,MAAOF,CAAAA,IAAI,uBAAgBK,EAAhB,aAAsBS,MAAtB,kBAAqCC,IAAI,CAACC,SAAL,CAAed,IAAf,CAArC,EAAX,CACD,CAFM","sourcesContent":["import { get, post } from \"./base\";\r\n\r\nexport const fetchTasks = (data) => {\r\n  return get(\"/app/persTaskGet\", data);\r\n};\r\n\r\nexport const fetchIDPTTasks = (userId) => {\r\n  let id = userId.length === 6 ? '00' + userId : userId;\r\n  return get(`/app/LDPTDb/GetTasks?Executor=${id}`);\r\n};\r\n\r\nexport const fetchEISVOrdersData = (data=[]) => {\r\n  let url = \"app/ordersGet/ByOrders\"\r\n  data.forEach((item, index) => {\r\n    // eslint-disable-next-line\r\n    url += (index===0?'?':'')+'orders=' + `${item}${data.length-1!==index?'&':''}`\r\n  })\r\n  return get(url);\r\n};\r\n\r\nexport const createTask = (data) => {\r\n  return post(\"/app/persTaskSet\", data);\r\n};\r\n\r\nexport const processingTasks = (action,id,data) => {\r\n  return post(`/app/LDPTDb/${id}/${action}?body=${JSON.stringify(data)}`);\r\n} "]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\ActivityListPage\\\\index.js\";\nimport { Box, makeStyles } from \"@material-ui/core\";\nimport * as action from \"actions\";\nimport ActivityList from \"components/ActivityList\";\nimport CheckforUpdates from \"components/CheckforUpdates\";\nimport FFTab from \"components/FFTab\";\nimport { LocalizeContext } from \"i18n\";\nimport * as repo from \"js/fetch\";\nimport { scrollToPosition } from \"js/util\";\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\nimport React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nconst useStyles = makeStyles(({\n  theme,\n  spacing\n}) => ({\n  main: {\n    backgroundColor: \"#f3f3f3\",\n    padding: 6,\n    position: \"absolute\",\n    top: spacing(6),\n    height: window.screen.height - 173 + \"px\",\n    width: \"100%\",\n    overflow: \"hidden auto\"\n  }\n}));\n\nconst ActivityListPage = ({\n  timeHorizon,\n  setTimeHorizon,\n  historyPage,\n  serviceWorkerRegistration,\n  isServiceWorkerUpdated\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  const classes = useStyles();\n  const scrollRef = useRef(null);\n  const location = useLocation();\n  useEffect(() => {\n    setTimeout(() => {\n      scrollToPosition(scrollRef, location.pathname);\n    }, 1000);\n  }, [location.pathname]);\n  const tabs = [{\n    title: i18n.COCKPIT_FILTER_NONE,\n    value: \"all\"\n  }, {\n    title: i18n.COCKPIT_FILTER_THISWEEK,\n    value: \"thisWeek\"\n  }, {\n    title: \"2 \" + i18n.INSTALLATION_WEEKS,\n    value: \"twoWeeks\"\n  }, {\n    title: \"4 \" + i18n.INSTALLATION_WEEKS,\n    value: \"fourWeeks\"\n  }, {\n    title: \"8 \" + i18n.INSTALLATION_WEEKS,\n    value: \"eightWeeks\"\n  }];\n\n  const updateServiceWorker = () => {\n    const registrationWaiting = serviceWorkerRegistration.waiting;\n\n    if (registrationWaiting) {\n      registrationWaiting.postMessage({\n        type: \"SKIP_WAITING\"\n      });\n      registrationWaiting.addEventListener(\"statechange\", e => {\n        if (e.target.state === \"activated\") {\n          window.localStorage.removeItem(\"versionUpdating\");\n          window.location.reload();\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(PrimaryLayout, {\n    name: \"activities\",\n    title: i18n.INSTAPP_JOBLIST_ACTIVITY_COCKPIT,\n    pageLevel: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      width: \"100%\",\n      position: \"fixed\",\n      zIndex: \"100\",\n      backgroundColor: \"#fafafa\",\n      height: \"48px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FFTab, {\n    tabs: tabs,\n    selectedTabValue: timeHorizon,\n    onTabChange: value => setTimeHorizon(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.main,\n    ref: scrollRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ActivityList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, historyPage === \"loginPage\" && isServiceWorkerUpdated && /*#__PURE__*/React.createElement(CheckforUpdates, {\n    type: \"SW_UPDATE\",\n    page: \"activity\",\n    open: isServiceWorkerUpdated,\n    onClick: updateServiceWorker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst mapStateToPops = (state, ownProps) => {\n  const {\n    timeHorizon,\n    settings,\n    versionUpdating: {\n      serviceWorkerUpdated,\n      serviceWorkerRegistration\n    }\n  } = state;\n  const historyPage = settings.historyPage ? settings.historyPage : \"\";\n  return {\n    timeHorizon,\n    historyPage,\n    isServiceWorkerUpdated: serviceWorkerUpdated,\n    serviceWorkerRegistration\n  };\n};\n\nconst mapDispatchToState = dispatch => {\n  return {\n    refresh: () => {\n      dispatch(action.fetchAll(repo.type.CACHE));\n    },\n    setTimeHorizon: timeHorizon => {\n      dispatch(action.setTimeHorizon(timeHorizon));\n    },\n    setScrollPosition: data => {\n      dispatch(action.setScrollPosition(data));\n    }\n  };\n};\n\nexport default connect(mapStateToPops, mapDispatchToState)(ActivityListPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/ActivityListPage/index.js"],"names":["Box","makeStyles","action","ActivityList","CheckforUpdates","FFTab","LocalizeContext","repo","scrollToPosition","PrimaryLayout","React","useEffect","useRef","connect","useLocation","useStyles","theme","spacing","main","backgroundColor","padding","position","top","height","window","screen","width","overflow","ActivityListPage","timeHorizon","setTimeHorizon","historyPage","serviceWorkerRegistration","isServiceWorkerUpdated","i18n","useContext","classes","scrollRef","location","setTimeout","pathname","tabs","title","COCKPIT_FILTER_NONE","value","COCKPIT_FILTER_THISWEEK","INSTALLATION_WEEKS","updateServiceWorker","registrationWaiting","waiting","postMessage","type","addEventListener","e","target","state","localStorage","removeItem","reload","INSTAPP_JOBLIST_ACTIVITY_COCKPIT","zIndex","mapStateToPops","ownProps","settings","versionUpdating","serviceWorkerUpdated","mapDispatchToState","dispatch","refresh","fetchAll","CACHE","setScrollPosition","data"],"mappings":"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","sourcesContent":["import { Box, makeStyles } from \"@material-ui/core\";\r\nimport * as action from \"actions\";\r\nimport ActivityList from \"components/ActivityList\";\r\nimport CheckforUpdates from \"components/CheckforUpdates\";\r\nimport FFTab from \"components/FFTab\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport * as repo from \"js/fetch\";\r\nimport { scrollToPosition } from \"js/util\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(({ theme, spacing }) => ({\r\n  main: {\r\n    backgroundColor: \"#f3f3f3\",\r\n    padding: 6,\r\n    position: \"absolute\",\r\n    top: spacing(6),\r\n    height: window.screen.height - 173 + \"px\",\r\n    width: \"100%\",\r\n    overflow: \"hidden auto\",\r\n  },\r\n}));\r\n\r\nconst ActivityListPage = ({\r\n  timeHorizon,\r\n  setTimeHorizon,\r\n  historyPage,\r\n  serviceWorkerRegistration,\r\n  isServiceWorkerUpdated,\r\n}) => {\r\n  const i18n = React.useContext(LocalizeContext);\r\n  const classes = useStyles();\r\n  const scrollRef = useRef(null);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      scrollToPosition(scrollRef, location.pathname);\r\n    }, 1000);\r\n  }, [location.pathname]);\r\n\r\n  const tabs = [\r\n    { title: i18n.COCKPIT_FILTER_NONE, value: \"all\" },\r\n    { title: i18n.COCKPIT_FILTER_THISWEEK, value: \"thisWeek\" },\r\n    { title: \"2 \" + i18n.INSTALLATION_WEEKS, value: \"twoWeeks\" },\r\n    { title: \"4 \" + i18n.INSTALLATION_WEEKS, value: \"fourWeeks\" },\r\n    { title: \"8 \" + i18n.INSTALLATION_WEEKS, value: \"eightWeeks\" },\r\n  ];\r\n\r\n  const updateServiceWorker = () => {\r\n    const registrationWaiting = serviceWorkerRegistration.waiting;\r\n    if (registrationWaiting) {\r\n      registrationWaiting.postMessage({ type: \"SKIP_WAITING\" });\r\n\r\n      registrationWaiting.addEventListener(\"statechange\", (e) => {\r\n        if (e.target.state === \"activated\") {\r\n          window.localStorage.removeItem(\"versionUpdating\");\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PrimaryLayout\r\n      name=\"activities\"\r\n      title={i18n.INSTAPP_JOBLIST_ACTIVITY_COCKPIT}\r\n      pageLevel={1}\r\n    >\r\n      <Box\r\n        style={{\r\n          width: \"100%\",\r\n          position: \"fixed\",\r\n          zIndex: \"100\",\r\n          backgroundColor: \"#fafafa\",\r\n          height: \"48px\",\r\n        }}\r\n      >\r\n        <FFTab\r\n          tabs={tabs}\r\n          selectedTabValue={timeHorizon}\r\n          onTabChange={(value) => setTimeHorizon(value)}\r\n        />\r\n      </Box>\r\n      <div className={classes.main} ref={scrollRef}>\r\n        <ActivityList />\r\n      </div>\r\n\r\n      <div>\r\n        {historyPage === \"loginPage\" && isServiceWorkerUpdated && (\r\n          <CheckforUpdates\r\n            type=\"SW_UPDATE\"\r\n            page=\"activity\"\r\n            open={isServiceWorkerUpdated}\r\n            onClick={updateServiceWorker}\r\n          />\r\n        )}\r\n      </div>\r\n    </PrimaryLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToPops = (state, ownProps) => {\r\n  const {\r\n    timeHorizon,\r\n    settings,\r\n    versionUpdating: { serviceWorkerUpdated, serviceWorkerRegistration },\r\n  } = state;\r\n  const historyPage = settings.historyPage ? settings.historyPage : \"\";\r\n\r\n  return {\r\n    timeHorizon,\r\n    historyPage,\r\n    isServiceWorkerUpdated: serviceWorkerUpdated,\r\n    serviceWorkerRegistration,\r\n  };\r\n};\r\n\r\nconst mapDispatchToState = (dispatch) => {\r\n  return {\r\n    refresh: () => {\r\n      dispatch(action.fetchAll(repo.type.CACHE));\r\n    },\r\n    setTimeHorizon: (timeHorizon) => {\r\n      dispatch(action.setTimeHorizon(timeHorizon));\r\n    },\r\n    setScrollPosition: (data) => {\r\n      dispatch(action.setScrollPosition(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToPops, mapDispatchToState)(ActivityListPage);\r\n"]},"metadata":{},"sourceType":"module"}
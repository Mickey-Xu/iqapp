{"ast":null,"code":"import{Box}from\"@material-ui/core\";import{withStyles}from\"@material-ui/core/styles\";import{AssignmentOutlined,ChevronRight}from\"@material-ui/icons\";import{LocalizeContext}from\"i18n\";import{getTaskCount}from\"js/util\";import PrimaryLayout from\"layouts/PrimaryLayout\";import React from\"react\";import{connect}from\"react-redux\";import{useHistory}from\"react-router-dom\";var TaskManagermentPage=withStyles(function(_ref){var spacing=_ref.spacing;return{root:{width:\"calc(100% - 16px)\",height:\"calc(100% - 16px)\",display:\"flex\",flexDirection:\"column\",margin:\"8px\"},itemBox:{width:\"100%\",padding:\"4px\",margin:\"4px\",display:\"flex\",alignItems:\"center\",borderBottom:\"1px solid darkgray\"},itemIcon:{width:\"24px\",color:\"rgb(220,0,0)\",paddingTop:\"4px\",margin:\"0 4px\"},discriptionBox:{width:\"calc(100% - 54px)\"},iconBox:{paddingTop:\"6px\",width:\"6px\",color:\"rgb(220,0,0)\"},discription:{padding:spacing(0.5,1),backgroundColor:\"red\",borderRadius:\"30px\",color:\"white\",marginLeft:spacing(1)}};})(function(_ref2){var classes=_ref2.classes,_ref2$taskNum=_ref2.taskNum,awaitCloseNum=_ref2$taskNum.awaitCloseNum,awaitComplateNum=_ref2$taskNum.awaitComplateNum;var history=useHistory();var i18n=React.useContext(LocalizeContext);return/*#__PURE__*/React.createElement(PrimaryLayout,{name:\"taskManagerment\",title:i18n.INSTAPP_JOBLIST_TASKS,pageLevel:1},/*#__PURE__*/React.createElement(Box,{className:classes.root},/*#__PURE__*/React.createElement(Box,{className:classes.itemBox,onClick:function onClick(){history.push(\"/tasks/assigner\");}},/*#__PURE__*/React.createElement(Box,{className:classes.itemIcon},/*#__PURE__*/React.createElement(AssignmentOutlined,null)),/*#__PURE__*/React.createElement(Box,{className:classes.discriptionBox},i18n.ISNTAPP_TASKS_CREATED_BY_ME,awaitCloseNum>0&&/*#__PURE__*/React.createElement(\"span\",{className:classes.discription},awaitCloseNum)),/*#__PURE__*/React.createElement(Box,{className:classes.iconBox},/*#__PURE__*/React.createElement(ChevronRight,null))),/*#__PURE__*/React.createElement(Box,{className:classes.itemBox,onClick:function onClick(){history.push(\"/tasks/assignee\");}},/*#__PURE__*/React.createElement(Box,{className:classes.itemIcon},/*#__PURE__*/React.createElement(AssignmentOutlined,null)),/*#__PURE__*/React.createElement(Box,{className:classes.discriptionBox},i18n.ISNTAPP_TASKS_ASSIGUED_TO_ME,awaitComplateNum>0&&/*#__PURE__*/React.createElement(\"span\",{className:classes.discription},awaitComplateNum)),/*#__PURE__*/React.createElement(Box,{className:classes.iconBox},/*#__PURE__*/React.createElement(ChevronRight,null)))));});export default connect(function(state,props){var taskNum=getTaskCount();return{taskNum:taskNum};})(TaskManagermentPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/TaskManagermentPage/index.js"],"names":["Box","withStyles","AssignmentOutlined","ChevronRight","LocalizeContext","getTaskCount","PrimaryLayout","React","connect","useHistory","TaskManagermentPage","spacing","root","width","height","display","flexDirection","margin","itemBox","padding","alignItems","borderBottom","itemIcon","color","paddingTop","discriptionBox","iconBox","discription","backgroundColor","borderRadius","marginLeft","classes","taskNum","awaitCloseNum","awaitComplateNum","history","i18n","useContext","INSTAPP_JOBLIST_TASKS","push","ISNTAPP_TASKS_CREATED_BY_ME","ISNTAPP_TASKS_ASSIGUED_TO_ME","state","props"],"mappings":"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","sourcesContent":["import { Box } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { AssignmentOutlined, ChevronRight } from \"@material-ui/icons\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport { getTaskCount } from \"js/util\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TaskManagermentPage = withStyles(({ spacing }) => {\r\n  return {\r\n    root: {\r\n      width: `calc(100% - 16px)`,\r\n      height: `calc(100% - 16px)`,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      margin: \"8px\",\r\n    },\r\n    itemBox: {\r\n      width: \"100%\",\r\n      padding: \"4px\",\r\n      margin: \"4px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      borderBottom: \"1px solid darkgray\",\r\n    },\r\n    itemIcon: {\r\n      width: `24px`,\r\n      color: \"rgb(220,0,0)\",\r\n      paddingTop: \"4px\",\r\n      margin: \"0 4px\",\r\n    },\r\n    discriptionBox: {\r\n      width: `calc(100% - 54px)`,\r\n    },\r\n    iconBox: {\r\n      paddingTop: \"6px\",\r\n      width: \"6px\",\r\n      color: \"rgb(220,0,0)\",\r\n    },\r\n    discription: {\r\n      padding: spacing(0.5, 1),\r\n      backgroundColor: \"red\",\r\n      borderRadius: \"30px\",\r\n      color: \"white\",\r\n      marginLeft: spacing(1),\r\n    },\r\n  };\r\n})(({ classes, taskNum: { awaitCloseNum, awaitComplateNum } }) => {\r\n  const history = useHistory();\r\n  const i18n = React.useContext(LocalizeContext);\r\n  return (\r\n    <PrimaryLayout\r\n      name=\"taskManagerment\"\r\n      title={i18n.INSTAPP_JOBLIST_TASKS}\r\n      pageLevel={1}\r\n    >\r\n      <Box className={classes.root}>\r\n        <Box\r\n          className={classes.itemBox}\r\n          onClick={() => {\r\n            history.push(`/tasks/assigner`);\r\n          }}\r\n        >\r\n          <Box className={classes.itemIcon}>\r\n            <AssignmentOutlined />\r\n          </Box>\r\n          <Box className={classes.discriptionBox}>\r\n            {i18n.ISNTAPP_TASKS_CREATED_BY_ME}\r\n            {awaitCloseNum > 0 && (\r\n              <span className={classes.discription}>{awaitCloseNum}</span>\r\n            )}\r\n          </Box>\r\n          <Box className={classes.iconBox}>\r\n            <ChevronRight />\r\n          </Box>\r\n        </Box>\r\n        <Box\r\n          className={classes.itemBox}\r\n          onClick={() => {\r\n            history.push(`/tasks/assignee`);\r\n          }}\r\n        >\r\n          <Box className={classes.itemIcon}>\r\n            <AssignmentOutlined />\r\n          </Box>\r\n          <Box className={classes.discriptionBox}>\r\n            {i18n.ISNTAPP_TASKS_ASSIGUED_TO_ME}\r\n            {awaitComplateNum > 0 && (\r\n              <span className={classes.discription}>{awaitComplateNum}</span>\r\n            )}\r\n          </Box>\r\n          <Box className={classes.iconBox}>\r\n            <ChevronRight />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </PrimaryLayout>\r\n  );\r\n});\r\nexport default connect((state, props) => {\r\n  const taskNum = getTaskCount();\r\n  return {\r\n    taskNum,\r\n  };\r\n})(TaskManagermentPage);\r\n"]},"metadata":{},"sourceType":"module"}
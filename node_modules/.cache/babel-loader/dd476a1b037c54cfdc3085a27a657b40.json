{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */import{appendChild,appendQuestionBlock,hasChildNode,readQuestionBlock,getRequiredAttr,getChildNode}from\"./utils/xml\";export default{serialize:function serialize(doc,findField,parentNode,field){var initialValue=field.settings.initialValue;var questionBlock=appendQuestionBlock(doc,findField,parentNode,\"boolean\",field);questionBlock.setAttribute(\"value\",initialValue);appendChild(doc,questionBlock,\"checkbox\",null,{value:field.settings.value});},canDeserialize:function canDeserialize(node){return node.nodeName===\"question_block\"&&hasChildNode(node,\"checkbox\");},deserialize:function deserialize(node){var field=readQuestionBlock(node,\"yesNo\",\"boolean\");// eslint-disable-line prefer-const\nvar checkboxNode=getChildNode(node,\"checkbox\");field.settings.initialValue=getRequiredAttr(checkboxNode,\"value\")===\"true\";return field;}};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/YesNoIO.js"],"names":["appendChild","appendQuestionBlock","hasChildNode","readQuestionBlock","getRequiredAttr","getChildNode","serialize","doc","findField","parentNode","field","initialValue","settings","questionBlock","setAttribute","value","canDeserialize","node","nodeName","deserialize","checkboxNode"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,OACEA,WADF,CAEEC,mBAFF,CAGEC,YAHF,CAIEC,iBAJF,CAKEC,eALF,CAMEC,YANF,KAOO,aAPP,CASA,cAAe,CACbC,SADa,oBACHC,GADG,CACEC,SADF,CACaC,UADb,CACyBC,KADzB,CACgC,IACnCC,CAAAA,YADmC,CAClBD,KAAK,CAACE,QADY,CACnCD,YADmC,CAG3C,GAAME,CAAAA,aAAa,CAAGZ,mBAAmB,CACvCM,GADuC,CAEvCC,SAFuC,CAGvCC,UAHuC,CAIvC,SAJuC,CAKvCC,KALuC,CAAzC,CAOAG,aAAa,CAACC,YAAd,CAA2B,OAA3B,CAAoCH,YAApC,EAEAX,WAAW,CAACO,GAAD,CAAMM,aAAN,CAAqB,UAArB,CAAiC,IAAjC,CAAuC,CAChDE,KAAK,CAAEL,KAAK,CAACE,QAAN,CAAeG,KAD0B,CAAvC,CAAX,CAGD,CAhBY,CAkBbC,cAlBa,yBAkBEC,IAlBF,CAkBQ,CACnB,MAAOA,CAAAA,IAAI,CAACC,QAAL,GAAkB,gBAAlB,EAAsChB,YAAY,CAACe,IAAD,CAAO,UAAP,CAAzD,CACD,CApBY,CAsBbE,WAtBa,sBAsBDF,IAtBC,CAsBK,CAChB,GAAIP,CAAAA,KAAK,CAAGP,iBAAiB,CAACc,IAAD,CAAO,OAAP,CAAgB,SAAhB,CAA7B,CAAyD;AAEzD,GAAMG,CAAAA,YAAY,CAAGf,YAAY,CAACY,IAAD,CAAO,UAAP,CAAjC,CACAP,KAAK,CAACE,QAAN,CAAeD,YAAf,CACEP,eAAe,CAACgB,YAAD,CAAe,OAAf,CAAf,GAA2C,MAD7C,CAGA,MAAOV,CAAAA,KAAP,CACD,CA9BY,CAAf","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport {\r\n  appendChild,\r\n  appendQuestionBlock,\r\n  hasChildNode,\r\n  readQuestionBlock,\r\n  getRequiredAttr,\r\n  getChildNode,\r\n} from \"./utils/xml\";\r\n\r\nexport default {\r\n  serialize(doc, findField, parentNode, field) {\r\n    const { initialValue } = field.settings;\r\n\r\n    const questionBlock = appendQuestionBlock(\r\n      doc,\r\n      findField,\r\n      parentNode,\r\n      \"boolean\",\r\n      field\r\n    );\r\n    questionBlock.setAttribute(\"value\", initialValue);\r\n\r\n    appendChild(doc, questionBlock, \"checkbox\", null, {\r\n      value: field.settings.value,\r\n    });\r\n  },\r\n\r\n  canDeserialize(node) {\r\n    return node.nodeName === \"question_block\" && hasChildNode(node, \"checkbox\");\r\n  },\r\n\r\n  deserialize(node) {\r\n    let field = readQuestionBlock(node, \"yesNo\", \"boolean\"); // eslint-disable-line prefer-const\r\n\r\n    const checkboxNode = getChildNode(node, \"checkbox\");\r\n    field.settings.initialValue =\r\n      getRequiredAttr(checkboxNode, \"value\") === \"true\";\r\n\r\n    return field;\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\PrivateRoute\\\\index.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  ...rest\n}) => {\n  return /*#__PURE__*/React.createElement(Route, Object.assign({\n    render: props => {\n      return isAuthenticated ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }\n      })) : /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: props.location.pathname\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      });\n    }\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  return {\n    isAuthenticated: !!auth\n  };\n};\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/PrivateRoute/index.js"],"names":["React","connect","Redirect","Route","PrivateRoute","component","Component","isAuthenticated","rest","props","pathname","state","location","mapStateToProps","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,eAAxB;AAAyC,KAAGC;AAA5C,CAAD,KAAwD;AAC3E,sBACE,oBAAC,KAAD;AACE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,aAAOF,eAAe,gBACpB,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADoB,gBAGpB,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFC,UAAAA,QAAQ,EAAE,QADR;AAEFC,UAAAA,KAAK,EAAEF,KAAK,CAACG,QAAN,CAAeF;AAFpB,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;AAUD;AAZH,KAaMF,IAbN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAiBD,CAlBD;;AAoBA,MAAMK,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACpC,SAAO;AACLP,IAAAA,eAAe,EAAE,CAAC,CAACO;AADd,GAAP;AAGD,CAJD;;AAMA,eAAeb,OAAO,CAACY,eAAD,CAAP,CAAyBT,YAAzB,CAAf","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => {\r\n  return (\r\n    <Route\r\n      render={(props) => {\r\n        return isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: props.location.pathname,\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  return {\r\n    isAuthenticated: !!auth,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}
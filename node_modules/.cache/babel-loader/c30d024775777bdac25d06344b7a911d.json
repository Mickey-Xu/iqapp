{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TaskListItem\\\\index.js\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport ConfirmModal from \"components/ConfirmModal\";\nimport TaskItemCard from \"components/TaskItemCard\";\nimport { LocalizeContext } from \"i18n\";\nimport moment from \"moment\";\nimport React from \"react\";\n\nconst TaskList = ({\n  data,\n  status,\n  type,\n  submit\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  const [open, setOpen] = React.useState(null);\n  const [currentTask, setCurrentTask] = React.useState(\"\");\n  const [cplDate, setCplDate] = React.useState(moment(new Date()).format(\"YYYY-MM-DD\"));\n  const [description, setDescription] = React.useState(\"\");\n  const [submitData, setSubmitData] = React.useState(null);\n\n  const handleClick = (action, data) => {\n    console.log(action, data);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setCplDate(moment(new Date()).format(\"YYYY-MM-DD\"));\n    setDescription(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, data.map((item, index) => {\n    return /*#__PURE__*/React.createElement(TaskItemCard, {\n      data: item,\n      type: type,\n      status: status,\n      handleClick: (action, taskName, currentTaskData) => handleClick(action, taskName, currentTaskData),\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default TaskList;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TaskListItem/index.js"],"names":["Box","Typography","DatePicker","ConfirmModal","TaskItemCard","LocalizeContext","moment","React","TaskList","data","status","type","submit","i18n","useContext","open","setOpen","useState","currentTask","setCurrentTask","cplDate","setCplDate","Date","format","description","setDescription","submitData","setSubmitData","handleClick","action","console","log","handleClose","map","item","index","taskName","currentTaskData"],"mappings":";AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,eAAT,QAAgC,MAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,IAAhB;AAAsBC,EAAAA;AAAtB,CAAD,KAAoC;AACnD,QAAMC,IAAI,GAAGN,KAAK,CAACO,UAAN,CAAiBT,eAAjB,CAAb;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACU,QAAN,CAAe,IAAf,CAAxB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACU,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBd,KAAK,CAACU,QAAN,CAC5BX,MAAM,CAAC,IAAIgB,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAD4B,CAA9B;AAGA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgClB,KAAK,CAACU,QAAN,CAAe,EAAf,CAAtC;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BpB,KAAK,CAACU,QAAN,CAAe,IAAf,CAApC;;AAEA,QAAMW,WAAW,GAAG,CAACC,MAAD,EAASpB,IAAT,KAAkB;AACpCqB,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBpB,IAApB;AACD,GAFD;;AAIA,QAAMuB,WAAW,GAAG,MAAM;AACxBhB,IAAAA,OAAO,CAAC,KAAD,CAAP;AACAK,IAAAA,UAAU,CAACf,MAAM,CAAC,IAAIgB,IAAJ,EAAD,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAAD,CAAV;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAJD;;AAOA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,IAAI,CAACwB,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,wBACE,oBAAC,YAAD;AACE,MAAA,IAAI,EAAED,IADR;AAEE,MAAA,IAAI,EAAEvB,IAFR;AAGE,MAAA,MAAM,EAAED,MAHV;AAIE,MAAA,WAAW,EAAE,CAACmB,MAAD,EAASO,QAAT,EAAmBC,eAAnB,KACXT,WAAW,CAACC,MAAD,EAASO,QAAT,EAAmBC,eAAnB,CALf;AAOE,MAAA,GAAG,EAAEF,KAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD,GAZA,CADH,CADF;AAiBD,CAxCD;;AA0CA,eAAe3B,QAAf","sourcesContent":["import { Box, Typography } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport ConfirmModal from \"components/ConfirmModal\";\r\nimport TaskItemCard from \"components/TaskItemCard\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nconst TaskList = ({ data, status, type, submit }) => {\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  const [open, setOpen] = React.useState(null);\r\n\r\n  const [currentTask, setCurrentTask] = React.useState(\"\");\r\n  const [cplDate, setCplDate] = React.useState(\r\n    moment(new Date()).format(\"YYYY-MM-DD\")\r\n  );\r\n  const [description, setDescription] = React.useState(\"\");\r\n  const [submitData, setSubmitData] = React.useState(null);\r\n\r\n  const handleClick = (action, data) => {\r\n    console.log(action, data)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setCplDate(moment(new Date()).format(\"YYYY-MM-DD\"));\r\n    setDescription(\"\");\r\n  };\r\n\r\n\r\n  return (\r\n    <Box>\r\n      {data.map((item, index) => {\r\n        return (\r\n          <TaskItemCard\r\n            data={item}\r\n            type={type}\r\n            status={status}\r\n            handleClick={(action, taskName, currentTaskData) =>\r\n              handleClick(action, taskName, currentTaskData)\r\n            }\r\n            key={index}\r\n          />\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}
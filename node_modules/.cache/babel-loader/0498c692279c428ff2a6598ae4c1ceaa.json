{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\Camera\\\\index.js\";\nimport React, { useRef, useState } from 'react';\n\nconst CameraComponent = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [isCameraOn, setIsCameraOn] = useState(false);\n\n  const startCamera = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(stream => {\n      video.srcObject = stream;\n      setIsCameraOn(true);\n    }).catch(error => console.error('Error accessing camera:', error));\n    video.addEventListener('canplay', () => {\n      canvas.width = video.videoWidth;\n      canvas.height = video.videoHeight;\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    });\n  };\n\n  const takePhoto = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, isCameraOn && /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: true,\n    playsInline: true,\n    muted: true,\n    ref: videoRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), isCameraOn && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: takePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"\\u62CD\\u7167\"), isCameraOn && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsCameraOn(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"\\u5173\\u95ED\\u6444\\u50CF\\u5934\"), !isCameraOn && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startCamera,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"\\u6253\\u5F00\\u6444\\u50CF\\u5934\"));\n};\n\nexport default CameraComponent;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/Camera/index.js"],"names":["React","useRef","useState","CameraComponent","videoRef","canvasRef","isCameraOn","setIsCameraOn","startCamera","video","current","canvas","context","getContext","navigator","mediaDevices","getUserMedia","then","stream","srcObject","catch","error","console","addEventListener","width","videoWidth","height","videoHeight","drawImage","takePhoto"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC1B,QAAMC,QAAQ,GAAGH,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMI,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACtB,UAAMC,KAAK,GAAGL,QAAQ,CAACM,OAAvB;AACA,UAAMC,MAAM,GAAGN,SAAS,CAACK,OAAzB;AACA,UAAME,OAAO,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAhB;AAEAC,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEP,MAAAA,KAAK,EAAE;AAAT,KAApC,EACKQ,IADL,CACUC,MAAM,IAAI;AACZT,MAAAA,KAAK,CAACU,SAAN,GAAkBD,MAAlB;AACAX,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH,KAJL,EAKKa,KALL,CAKWC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC,CALpB;AAOAZ,IAAAA,KAAK,CAACc,gBAAN,CAAuB,SAAvB,EAAkC,MAAM;AACpCZ,MAAAA,MAAM,CAACa,KAAP,GAAef,KAAK,CAACgB,UAArB;AACAd,MAAAA,MAAM,CAACe,MAAP,GAAgBjB,KAAK,CAACkB,WAAtB;AACAf,MAAAA,OAAO,CAACgB,SAAR,CAAkBnB,KAAlB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+BE,MAAM,CAACa,KAAtC,EAA6Cb,MAAM,CAACe,MAApD;AACH,KAJD;AAKH,GAjBD;;AAmBA,QAAMG,SAAS,GAAG,MAAM;AACpB,UAAMlB,MAAM,GAAGN,SAAS,CAACK,OAAzB;AACA,UAAME,OAAO,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAhB;AACAD,IAAAA,OAAO,CAACgB,SAAR,CAAkBxB,QAAQ,CAACM,OAA3B,EAAoC,CAApC,EAAuC,CAAvC,EAA0CC,MAAM,CAACa,KAAjD,EAAwDb,MAAM,CAACe,MAA/D;AACH,GAJD;;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,UAAU,iBACP;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,WAAW,MAA3B;AAA4B,IAAA,KAAK,MAAjC;AAAkC,IAAA,GAAG,EAAEF,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,eAII;AAAQ,IAAA,GAAG,EAAEC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKKC,UAAU,iBACP;AAAQ,IAAA,OAAO,EAAEuB,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANR,EAQKvB,UAAU,iBACP;AAAQ,IAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,KAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCATR,EAWK,CAACD,UAAD,iBACG;AAAQ,IAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAZR,CADJ;AAiBH,CA/CD;;AAiDA,eAAeL,eAAf","sourcesContent":["import React, { useRef, useState } from 'react';\r\n\r\nconst CameraComponent = () => {\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const [isCameraOn, setIsCameraOn] = useState(false);\r\n\r\n    const startCamera = () => {\r\n        const video = videoRef.current;\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n\r\n        navigator.mediaDevices.getUserMedia({ video: true })\r\n            .then(stream => {\r\n                video.srcObject = stream;\r\n                setIsCameraOn(true);\r\n            })\r\n            .catch(error => console.error('Error accessing camera:', error));\r\n\r\n        video.addEventListener('canplay', () => {\r\n            canvas.width = video.videoWidth;\r\n            canvas.height = video.videoHeight;\r\n            context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        });\r\n    };\r\n\r\n    const takePhoto = () => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n        context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isCameraOn && (\r\n                <video autoPlay playsInline muted ref={videoRef} />\r\n            )}\r\n            <canvas ref={canvasRef} />\r\n            {isCameraOn && (\r\n                <button onClick={takePhoto}>拍照</button>\r\n            )}\r\n            {isCameraOn && (\r\n                <button onClick={() => setIsCameraOn(false)}>关闭摄像头</button>\r\n            )}\r\n            {!isCameraOn && (\r\n                <button onClick={startCamera}>打开摄像头</button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CameraComponent;"]},"metadata":{},"sourceType":"module"}
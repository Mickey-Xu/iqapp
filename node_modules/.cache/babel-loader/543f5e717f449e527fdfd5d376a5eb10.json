{"ast":null,"code":"import _slicedToArray from\"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{Box,Button,makeStyles}from\"@material-ui/core\";import*as action from\"actions\";import ConfirmModal from\"components/ConfirmModal\";import React,{useEffect,useState}from\"react\";import{useDispatch}from\"react-redux\";var useStyles=makeStyles(function(_ref){var spacing=_ref.spacing;return{btn:{width:\"80%\",position:\"fixed\",bottom:spacing(17),marginLeft:\"10%\"}};});var CheckforUpdates=function CheckforUpdates(_ref2){var type=_ref2.type,onClick=_ref2.onClick,_ref2$isServiceWorker=_ref2.isServiceWorkerUpdated,isServiceWorkerUpdated=_ref2$isServiceWorker===void 0?\"\":_ref2$isServiceWorker,_ref2$page=_ref2.page,page=_ref2$page===void 0?\"\":_ref2$page;var classes=useStyles();var dispatch=useDispatch();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];useEffect(function(){if(!onClick){var timer=setTimeout(function(){dispatch(\"\".concat(type===\"SW_INIT\"?action.setSwInIt():action.setSwUpdate()));},6000);return function(){return clearTimeout(timer);};}},[onClick,dispatch,type]);var closeMenu=function closeMenu(){setOpen(false);dispatch(action.setInfo(\"正在安装中\"));setTimeout(function(){onClick();},2000);};return/*#__PURE__*/React.createElement(Box,null,page===\"activity\"?/*#__PURE__*/React.createElement(ConfirmModal,{hiddenCancel:true,open:open,mask:true,handleClick:closeMenu},\"\\u60A8\\u6709\\u65B0\\u7684\\u7248\\u672C\"):/*#__PURE__*/React.createElement(Box,{className:classes.btn},/*#__PURE__*/React.createElement(Button,{style:{textTransform:\"capitalize\",backgroundColor:\"rgb(220,2,2)\",color:\"white\",padding:\"3px\"},fullWidth:true,onClick:onClick,size:\"large\",variant:\"contained\"},isServiceWorkerUpdated)));};export default CheckforUpdates;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/CheckforUpdates/index.js"],"names":["Box","Button","makeStyles","action","ConfirmModal","React","useEffect","useState","useDispatch","useStyles","spacing","btn","width","position","bottom","marginLeft","CheckforUpdates","type","onClick","isServiceWorkerUpdated","page","classes","dispatch","open","setOpen","timer","setTimeout","setSwInIt","setSwUpdate","clearTimeout","closeMenu","setInfo","textTransform","backgroundColor","color","padding"],"mappings":"6LAAA,OAASA,GAAT,CAAcC,MAAd,CAAsBC,UAAtB,KAAwC,mBAAxC,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,SAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,GAAMC,CAAAA,SAAS,CAAGP,UAAU,CAAC,kBAAGQ,CAAAA,OAAH,MAAGA,OAAH,OAAkB,CAC7CC,GAAG,CAAE,CACHC,KAAK,CAAE,KADJ,CAEHC,QAAQ,CAAE,OAFP,CAGHC,MAAM,CAAEJ,OAAO,CAAC,EAAD,CAHZ,CAIHK,UAAU,CAAE,KAJT,CADwC,CAAlB,EAAD,CAA5B,CASA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,OAKlB,IAJJC,CAAAA,IAII,OAJJA,IAII,CAHJC,OAGI,OAHJA,OAGI,6BAFJC,sBAEI,CAFJA,sBAEI,gCAFqB,EAErB,wCADJC,IACI,CADJA,IACI,qBADG,EACH,YACJ,GAAMC,CAAAA,OAAO,CAAGZ,SAAS,EAAzB,CACA,GAAMa,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAFI,cAGoBD,QAAQ,CAAC,IAAD,CAH5B,wCAGGgB,IAHH,eAGSC,OAHT,eAKJlB,SAAS,CAAC,UAAM,CACd,GAAI,CAACY,OAAL,CAAc,CACZ,GAAMO,CAAAA,KAAK,CAAGC,UAAU,CAAC,UAAM,CAC7BJ,QAAQ,WACHL,IAAI,GAAK,SAAT,CAAqBd,MAAM,CAACwB,SAAP,EAArB,CAA0CxB,MAAM,CAACyB,WAAP,EADvC,EAAR,CAGD,CAJuB,CAIrB,IAJqB,CAAxB,CAKA,MAAO,kBAAMC,CAAAA,YAAY,CAACJ,KAAD,CAAlB,EAAP,CACD,CACF,CATQ,CASN,CAACP,OAAD,CAAUI,QAAV,CAAoBL,IAApB,CATM,CAAT,CAWA,GAAMa,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBN,OAAO,CAAC,KAAD,CAAP,CACAF,QAAQ,CAACnB,MAAM,CAAC4B,OAAP,CAAe,OAAf,CAAD,CAAR,CACAL,UAAU,CAAC,UAAM,CACfR,OAAO,GACR,CAFS,CAEP,IAFO,CAAV,CAGD,CAND,CAQA,mBACE,oBAAC,GAAD,MACGE,IAAI,GAAK,UAAT,cACC,oBAAC,YAAD,EACE,YAAY,CAAE,IADhB,CAEE,IAAI,CAAEG,IAFR,CAGE,IAAI,CAAE,IAHR,CAIE,WAAW,CAAEO,SAJf,yCADD,cAUC,oBAAC,GAAD,EAAK,SAAS,CAAET,OAAO,CAACV,GAAxB,eACE,oBAAC,MAAD,EACE,KAAK,CAAE,CACLqB,aAAa,CAAE,YADV,CAELC,eAAe,CAAE,cAFZ,CAGLC,KAAK,CAAE,OAHF,CAILC,OAAO,CAAE,KAJJ,CADT,CAOE,SAAS,KAPX,CAQE,OAAO,CAAEjB,OARX,CASE,IAAI,CAAC,OATP,CAUE,OAAO,CAAC,WAVV,EAYGC,sBAZH,CADF,CAXJ,CADF,CA+BD,CA5DD,CA8DA,cAAeH,CAAAA,eAAf","sourcesContent":["import { Box, Button, makeStyles } from \"@material-ui/core\";\r\nimport * as action from \"actions\";\r\nimport ConfirmModal from \"components/ConfirmModal\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles(({ spacing }) => ({\r\n  btn: {\r\n    width: \"80%\",\r\n    position: \"fixed\",\r\n    bottom: spacing(17),\r\n    marginLeft: \"10%\",\r\n  },\r\n}));\r\n\r\nconst CheckforUpdates = ({\r\n  type,\r\n  onClick,\r\n  isServiceWorkerUpdated = \"\",\r\n  page = \"\",\r\n}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!onClick) {\r\n      const timer = setTimeout(() => {\r\n        dispatch(\r\n          `${type === \"SW_INIT\" ? action.setSwInIt() : action.setSwUpdate()}`\r\n        );\r\n      }, 6000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [onClick, dispatch, type]);\r\n\r\n  const closeMenu = () => {\r\n    setOpen(false);\r\n    dispatch(action.setInfo(\"正在安装中\"));\r\n    setTimeout(() => {\r\n      onClick();\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {page === \"activity\" ? (\r\n        <ConfirmModal\r\n          hiddenCancel={true}\r\n          open={open}\r\n          mask={true}\r\n          handleClick={closeMenu}\r\n        >\r\n          您有新的版本\r\n        </ConfirmModal>\r\n      ) : (\r\n        <Box className={classes.btn}>\r\n          <Button\r\n            style={{\r\n              textTransform: \"capitalize\",\r\n              backgroundColor: \"rgb(220,2,2)\",\r\n              color: \"white\",\r\n              padding: \"3px\",\r\n            }}\r\n            fullWidth\r\n            onClick={onClick}\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n          >\r\n            {isServiceWorkerUpdated}\r\n          </Button>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CheckforUpdates;\r\n"]},"metadata":{},"sourceType":"module"}
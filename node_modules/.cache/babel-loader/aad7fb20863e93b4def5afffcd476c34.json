{"ast":null,"code":"import _objectSpread from\"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";var initialState={};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload;switch(type){case\"SET_ENTITIES\":{var orderActivities=payload.orderActivities;return orderActivities?_objectSpread(_objectSpread({},state),orderActivities):state;}case\"SET_LOCAL_INSTALLATION_STEP_CONFIRMDATE\":var orderNo=payload.orderNo,stepNo=payload.stepNo,confirmedDate=payload.confirmedDate;state[orderNo+\"-\"+stepNo].confirmedDate=confirmedDate;return _objectSpread({},state);case\"SET_ALL_LOCAL_INSTALLATION_STEP_CONFIRMDATE\":var installationStepConfirmDates=_objectSpread({},payload);Object.keys(installationStepConfirmDates).forEach(function(orderAcitivity){if(state[orderAcitivity]){state[orderAcitivity].confirmedDate=installationStepConfirmDates[orderAcitivity].confirmedDate;}});return _objectSpread({},state);default:return state;}});","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/reducers/orderActivities.js"],"names":["initialState","state","action","type","payload","orderActivities","orderNo","stepNo","confirmedDate","installationStepConfirmDates","Object","keys","forEach","orderAcitivity"],"mappings":"4LAAA,GAAMA,CAAAA,YAAY,CAAG,EAArB,CAEA,eAAe,UAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBD,YAAyB,IAAXE,CAAAA,MAAW,8CACvCC,CAAAA,IADuC,CACrBD,MADqB,CACvCC,IADuC,CACjCC,OADiC,CACrBF,MADqB,CACjCE,OADiC,CAE/C,OAAQD,IAAR,EACE,IAAK,cAAL,CAAqB,IACXE,CAAAA,eADW,CACSD,OADT,CACXC,eADW,CAEnB,MAAOA,CAAAA,eAAe,gCAAQJ,KAAR,EAAkBI,eAAlB,EAAsCJ,KAA5D,CACD,CACD,IAAK,yCAAL,IACUK,CAAAA,OADV,CAC6CF,OAD7C,CACUE,OADV,CACmBC,MADnB,CAC6CH,OAD7C,CACmBG,MADnB,CAC2BC,aAD3B,CAC6CJ,OAD7C,CAC2BI,aAD3B,CAEEP,KAAK,CAACK,OAAO,CAAG,GAAV,CAAgBC,MAAjB,CAAL,CAA8BC,aAA9B,CAA8CA,aAA9C,CACA,wBAAYP,KAAZ,EACF,IAAK,6CAAL,CACE,GAAMQ,CAAAA,4BAA4B,kBAAQL,OAAR,CAAlC,CACAM,MAAM,CAACC,IAAP,CAAYF,4BAAZ,EAA0CG,OAA1C,CAAkD,SAACC,cAAD,CAAoB,CACpE,GAAIZ,KAAK,CAACY,cAAD,CAAT,CAA2B,CACzBZ,KAAK,CAACY,cAAD,CAAL,CAAsBL,aAAtB,CACEC,4BAA4B,CAACI,cAAD,CAA5B,CAA6CL,aAD/C,CAED,CACF,CALD,EAMA,wBAAYP,KAAZ,EACF,QACE,MAAOA,CAAAA,KAAP,CAnBJ,CAqBD,CAvBD","sourcesContent":["const initialState = {};\r\n\r\nexport default (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case \"SET_ENTITIES\": {\r\n      const { orderActivities } = payload;\r\n      return orderActivities ? { ...state, ...orderActivities } : state;\r\n    }\r\n    case \"SET_LOCAL_INSTALLATION_STEP_CONFIRMDATE\":\r\n      const { orderNo, stepNo, confirmedDate } = payload;\r\n      state[orderNo + \"-\" + stepNo].confirmedDate = confirmedDate;\r\n      return { ...state };\r\n    case \"SET_ALL_LOCAL_INSTALLATION_STEP_CONFIRMDATE\":\r\n      const installationStepConfirmDates = { ...payload };\r\n      Object.keys(installationStepConfirmDates).forEach((orderAcitivity) => {\r\n        if (state[orderAcitivity]) {\r\n          state[orderAcitivity].confirmedDate =\r\n            installationStepConfirmDates[orderAcitivity].confirmedDate;\r\n        }\r\n      });\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
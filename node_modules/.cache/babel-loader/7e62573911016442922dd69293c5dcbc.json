{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\nimport { appendChild, appendVisRules, appendStaticTagRules, appendImages, getChildNodes, getRequiredAttr, readImages, getAttrWithDefault, appendPrintTagRules, appendAuthorizationRules, appendExtVisRules } from \"./utils/xml\";\nimport uuid from \"node-uuid\";\nimport { DEFAULT_LANG } from \"./constants/global\";\nexport default {\n  serialize(doc, findField, parentNode, field) {\n    const {\n      id\n    } = field;\n    const {\n      identifier,\n      textI18n,\n      important,\n      visRules,\n      images,\n      authorizationRules,\n      tagRules,\n      printTagRules,\n      externalVisRules\n    } = field.settings;\n    const labelNode = appendChild(doc, parentNode, \"label\", null, {\n      guid: id,\n      identifier: identifier,\n      important\n    });\n    Object.keys(textI18n).forEach(lang => {\n      if (typeof textI18n[lang] !== \"undefined\") {\n        appendChild(doc, labelNode, \"text\", textI18n[lang], {\n          lang\n        });\n      }\n    });\n    appendVisRules(doc, findField, labelNode, visRules);\n    appendExtVisRules(doc, findField, labelNode, externalVisRules);\n    appendImages(doc, labelNode, images);\n    appendAuthorizationRules(doc, labelNode, field, authorizationRules);\n    appendStaticTagRules(doc, labelNode, field, tagRules);\n    appendPrintTagRules(doc, labelNode, field, printTagRules);\n  },\n\n  canDeserialize(node) {\n    return node.nodeName === \"label\";\n  },\n\n  deserialize(node) {\n    const textI18n = getChildNodes(node, \"text\").reduce((acc, textNode) => {\n      return Object.assign({}, acc, {\n        [getAttrWithDefault(textNode, \"lang\", DEFAULT_LANG)]: textNode.textContent\n      });\n    }, {});\n    return {\n      id: getAttrWithDefault(node, \"guid\", uuid.v4()),\n      type: \"staticText\",\n      settings: {\n        identifier: getAttrWithDefault(node, \"identifier\", uuid.v4()),\n        textI18n: textI18n,\n        important: getRequiredAttr(node, \"important\") === \"true\",\n        images: readImages(node)\n      }\n    };\n  }\n\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/StaticTextIO.js"],"names":["appendChild","appendVisRules","appendStaticTagRules","appendImages","getChildNodes","getRequiredAttr","readImages","getAttrWithDefault","appendPrintTagRules","appendAuthorizationRules","appendExtVisRules","uuid","DEFAULT_LANG","serialize","doc","findField","parentNode","field","id","identifier","textI18n","important","visRules","images","authorizationRules","tagRules","printTagRules","externalVisRules","settings","labelNode","guid","Object","keys","forEach","lang","canDeserialize","node","nodeName","deserialize","reduce","acc","textNode","assign","textContent","v4","type"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport {\r\n  appendChild,\r\n  appendVisRules,\r\n  appendStaticTagRules,\r\n  appendImages,\r\n  getChildNodes,\r\n  getRequiredAttr,\r\n  readImages,\r\n  getAttrWithDefault,\r\n  appendPrintTagRules,\r\n  appendAuthorizationRules,\r\n  appendExtVisRules,\r\n} from \"./utils/xml\";\r\nimport uuid from \"node-uuid\";\r\nimport { DEFAULT_LANG } from \"./constants/global\";\r\n\r\nexport default {\r\n  serialize(doc, findField, parentNode, field) {\r\n    const { id } = field;\r\n    const {\r\n      identifier,\r\n      textI18n,\r\n      important,\r\n      visRules,\r\n      images,\r\n      authorizationRules,\r\n      tagRules,\r\n      printTagRules,\r\n      externalVisRules,\r\n    } = field.settings;\r\n\r\n    const labelNode = appendChild(doc, parentNode, \"label\", null, {\r\n      guid: id,\r\n      identifier: identifier,\r\n      important,\r\n    });\r\n\r\n    Object.keys(textI18n).forEach((lang) => {\r\n      if (typeof textI18n[lang] !== \"undefined\") {\r\n        appendChild(doc, labelNode, \"text\", textI18n[lang], { lang });\r\n      }\r\n    });\r\n\r\n    appendVisRules(doc, findField, labelNode, visRules);\r\n    appendExtVisRules(doc, findField, labelNode, externalVisRules);\r\n    appendImages(doc, labelNode, images);\r\n    appendAuthorizationRules(doc, labelNode, field, authorizationRules);\r\n    appendStaticTagRules(doc, labelNode, field, tagRules);\r\n    appendPrintTagRules(doc, labelNode, field, printTagRules);\r\n  },\r\n\r\n  canDeserialize(node) {\r\n    return node.nodeName === \"label\";\r\n  },\r\n\r\n  deserialize(node) {\r\n    const textI18n = getChildNodes(node, \"text\").reduce((acc, textNode) => {\r\n      return Object.assign({}, acc, {\r\n        [getAttrWithDefault(\r\n          textNode,\r\n          \"lang\",\r\n          DEFAULT_LANG\r\n        )]: textNode.textContent,\r\n      });\r\n    }, {});\r\n\r\n    return {\r\n      id: getAttrWithDefault(node, \"guid\", uuid.v4()),\r\n      type: \"staticText\",\r\n      settings: {\r\n        identifier: getAttrWithDefault(node, \"identifier\", uuid.v4()),\r\n        textI18n: textI18n,\r\n        important: getRequiredAttr(node, \"important\") === \"true\",\r\n        images: readImages(node),\r\n      },\r\n    };\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import React from\"react\";import{Button,Typography,Dialog,DialogContent,DialogTitle,AppBar,Divider,IconButton,Toolbar,Checkbox,List,ListItem,ListItemIcon,ListItemText}from\"@material-ui/core\";import CloseIcon from'@material-ui/icons/Close';var CheckboxListSecondary=function CheckboxListSecondary(_ref){var templateForm=_ref.templateForm,handleToggle=_ref.handleToggle,checked=_ref.checked;return/*#__PURE__*/React.createElement(List,null,templateForm===null||templateForm===void 0?void 0:templateForm.form[\"settings\"][\"tagUniverse\"].map(function(item,idx){var labelId=\"checkbox-list-secondary-label-\".concat(item);return/*#__PURE__*/React.createElement(\"div\",{key:idx},/*#__PURE__*/React.createElement(ListItem,{style:{margin:\"6px 0\"},button:true,onClick:handleToggle(item)},/*#__PURE__*/React.createElement(ListItemText,{primary:\"\\n                             \".concat(item.name===\"Tag_Triangle\"?\"三角项\":item.name===\"Tag_Square\"?\"方块项\":item.name)}),/*#__PURE__*/React.createElement(ListItemIcon,null,/*#__PURE__*/React.createElement(Checkbox,{edge:\"start\",checked:checked.indexOf(item)!==-1,tabIndex:-1,disableRipple:true,inputProps:{'aria-labelledby':labelId}}))),/*#__PURE__*/React.createElement(Divider,{component:\"p\"}));}));};var Index=function Index(_ref2){var open=_ref2.open,setOpen=_ref2.setOpen,templateForm=_ref2.templateForm,handleToggle=_ref2.handleToggle,checked=_ref2.checked,confirmFilter=_ref2.confirmFilter;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Dialog,{fullScreen:true,open:open,keepMounted:true,onClose:function onClose(){return setOpen(false);},\"aria-labelledby\":\"alert-dialog-slide-title\",\"aria-describedby\":\"alert-dialog-slide-description\"},/*#__PURE__*/React.createElement(AppBar,{style:{backgroundColor:\"rgb(220, 2, 2)\"}},/*#__PURE__*/React.createElement(Toolbar,{style:{display:\"flex\",justifyContent:\"space-between\"}},/*#__PURE__*/React.createElement(IconButton,{onClick:function onClick(){return setOpen(false);},edge:\"start\",color:\"inherit\",\"aria-label\":\"close\"},/*#__PURE__*/React.createElement(CloseIcon,null)),/*#__PURE__*/React.createElement(Typography,{variant:\"h6\",component:\"h2\"},\"Filter\"),/*#__PURE__*/React.createElement(Button,{autoFocus:true,color:\"inherit\",onClick:function onClick(){return confirmFilter();}},\"save\"))),/*#__PURE__*/React.createElement(DialogTitle,{id:\"alert-dialog-slide-title\"},\"Use Google's location service?\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(CheckboxListSecondary,{templateForm:templateForm,handleToggle:handleToggle,checked:checked}))));};export default Index;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TemplateFilter/index.js"],"names":["React","Button","Typography","Dialog","DialogContent","DialogTitle","AppBar","Divider","IconButton","Toolbar","Checkbox","List","ListItem","ListItemIcon","ListItemText","CloseIcon","CheckboxListSecondary","templateForm","handleToggle","checked","form","map","item","idx","labelId","margin","name","indexOf","Index","open","setOpen","confirmFilter","backgroundColor","display","justifyContent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Typography, Dialog, DialogContent, DialogTitle, AppBar, Divider, IconButton, Toolbar, Checkbox, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst CheckboxListSecondary = ({ templateForm, handleToggle, checked }) => {\r\n    return (\r\n        <List >\r\n            {templateForm?.form[\"settings\"][\"tagUniverse\"].map((item, idx) => {\r\n                const labelId = `checkbox-list-secondary-label-${item}`;\r\n                return (\r\n                    <div key={idx}>\r\n                        <ListItem style={{ margin: \"6px 0\" }} button onClick={handleToggle(item)}>\r\n                            <ListItemText primary={`\r\n                             ${item.name === \"Tag_Triangle\" ?\r\n                                    \"三角项\" :\r\n                                    item.name === \"Tag_Square\" ?\r\n                                        \"方块项\" :\r\n                                        item.name}`} />\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    edge=\"start\"\r\n                                    checked={checked.indexOf(item) !== -1}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{ 'aria-labelledby': labelId }}\r\n                                />\r\n                            </ListItemIcon>\r\n                        </ListItem>\r\n                        <Divider component=\"p\" />\r\n                    </div>\r\n                );\r\n            })}\r\n        </List>\r\n    );\r\n}\r\n\r\nconst Index = ({ open, setOpen, templateForm, handleToggle, checked, confirmFilter }) => {\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                fullScreen\r\n                open={open}\r\n                keepMounted\r\n                onClose={() => setOpen(false)}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <AppBar style={{ backgroundColor: \"rgb(220, 2, 2)\" }}>\r\n                    <Toolbar style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <IconButton onClick={() => setOpen(false)} edge=\"start\" color=\"inherit\" aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" component=\"h2\">\r\n                            Filter\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={() => confirmFilter()} >\r\n                            save\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <CheckboxListSecondary templateForm={templateForm} handleToggle={handleToggle} checked={checked} />\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Index"]},"metadata":{},"sourceType":"module"}
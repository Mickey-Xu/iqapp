{"ast":null,"code":"import _defineProperty from\"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */import Ops from\"../constants/VisibilityOperators\";import uuid from\"node-uuid\";import assert from\"assert\";import{DEFAULT_LANG}from\"../constants/global\";import{FREE_TEXT_VALUE}from\"../utils/options\";import _ from\"lodash\";import moment from\"moment\";import serialize from\"../serialize\";export function readQuestionBlock(node,type,expectedReturnType){if(getRequiredAttr(node,\"return-type\")!==expectedReturnType){throw new Error(\"return-type of \".concat(type,\" is not \").concat(expectedReturnType));}var questionNode=getChildNode(node,\"question\");var labelI18n=getChildNodes(questionNode,\"text\").reduce(function(acc,textNode){return Object.assign({},acc,_defineProperty({},getAttrWithDefault(textNode,\"lang\",DEFAULT_LANG),textNode.textContent));},{});var descriptionI18n=_defineProperty({},DEFAULT_LANG,getAttrWithDefault(questionNode,\"description\",undefined));getChildNodes(questionNode,\"description\").forEach(function(descriptionNode){descriptionI18n[getRequiredAttr(descriptionNode,\"lang\")]=descriptionNode.textContent;});var annotatable=hasChildNode(node,\"annotation\");var annotation=null;if(annotatable){var annotationNode=getChildNode(node,\"annotation\");var text=getChildNodes(annotationNode,\"text\").map(function(n){return n.textContent;}).join(\" \");var imageUrl=hasChildNode(annotationNode,\"image\")?getRequiredAttr(getChildNode(annotationNode,\"image\"),\"src\"):null;if(text||imageUrl){annotation={text:text,imageUrl:imageUrl};}}var tags=_.uniq(getAttrWithDefault(node,\"tags\",\"\").split(\",\").map(function(tag){return tag.trim();}).filter(function(tag){return tag;}));return{id:getAttrWithDefault(node,\"guid\",uuid.v4()),type:type,annotation:annotation,tags:tags,settings:{identifier:getRequiredAttr(node,\"identifier\"),labelI18n:labelI18n,important:getRequiredAttr(node,\"important\")===\"true\",annotatable:annotatable,descriptionI18n:descriptionI18n,images:readImages(questionNode)}};}export function readImages(questionNode){return getChildNodes(questionNode,\"image\").map(function(n){return{id:uuid.v4(),url:getRequiredAttr(n,\"src\")};});}export function getAttrWithDefault(node,attrName,defaultValue){if(node.hasAttribute(attrName)){return node.getAttribute(attrName);}else{return defaultValue;}}export function getRequiredAttr(node,attrName){if(node.hasAttribute(attrName)){return node.getAttribute(attrName);}else{throw new Error(\"Expected \\\"\".concat(node.nodeName,\"\\\" element to have an attribute \\\"\").concat(attrName,\"\\\"\"));}}export function getValueAttr(node,attrName){if(node.hasAttribute(attrName)){return node.getAttribute(attrName);}else{return\"\";}}export function hasChildNode(node,childName){if(node.hasChildNodes()){for(var i=0;i<node.childNodes.length;i+=1){var child=node.childNodes[i];if(child.nodeName===childName){return true;}}}return false;}export function getChildNode(node,childName){if(node.hasChildNodes()){for(var i=0;i<node.childNodes.length;i+=1){var child=node.childNodes[i];if(child.nodeName===childName){return child;}}}throw new Error(\"Expected element \\\"\".concat(node.nodeName,\"\\\" to have a \\\"\").concat(childName,\"\\\" child element.\"));}export function getChildNodes(node,childName){var result=[];// eslint-disable-line prefer-const\nif(node.hasChildNodes()){for(var i=0;i<node.childNodes.length;i+=1){var child=node.childNodes[i];if(child.nodeName===childName){result.push(child);}}}return result;}export function appendChild(doc,parentNode,name){var textContent=arguments.length>3&&arguments[3]!==undefined?arguments[3]:\"\";var attributes=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var isTextContentEncode=arguments.length>5&&arguments[5]!==undefined?arguments[5]:true;var node=doc.createElement(name);parentNode.appendChild(node);Object.keys(attributes).forEach(function(key){var value=attributes[key];if(value!==null){if(typeof value===\"string\"){value=value.replace(\"\\n\",\" \");}node.setAttribute(key,value);}});// TODO check how newlines are handled, that is, are they still there when the sfdl is imported?\nif(textContent){if(isTextContentEncode)node.appendChild(doc.createTextNode(decodeURIComponent(encodeURIComponent(textContent).split(\"%C2%AD\").join(\"\"))));else node.appendChild(doc.createTextNode(textContent));}return node;}export function appendChildWithLineBreak(doc,parentNode,name){var textContent=arguments.length>3&&arguments[3]!==undefined?arguments[3]:\"\";var attributes=arguments.length>4&&arguments[4]!==undefined?arguments[4]:{};var node=doc.createElement(name);parentNode.appendChild(node);Object.keys(attributes).forEach(function(key){var value=attributes[key];if(value!==null){node.setAttribute(key,value);}});// TODO check how newlines are handled, that is, are they still there when the sfdl is imported?\nif(textContent){var textNode=doc.createTextNode(decodeURIComponent(encodeURIComponent(textContent).split(\"%C2%AD\").join(\"\")));node.appendChild(textNode);}return node;}export function appendQuestionBlock(doc,findField,parentNode,returnType,field){var id=field.id,settings=field.settings;var identifier=settings.identifier,labelI18n=settings.labelI18n,important=settings.important,annotatable=settings.annotatable,descriptionI18n=settings.descriptionI18n,visRules=settings.visRules,images=settings.images,authorizationRules=settings.authorizationRules,tagRules=settings.tagRules,printTagRules=settings.printTagRules,buttonDescriptions=settings.buttonDescriptions,externalVisRules=settings.externalVisRules,value=settings.value;var required=settings.hasOwnProperty(\"required\")?settings.required:false;var initValue=\"\";if(value){if(value.includes(\",\")){initValue=value.split(\",\");}else{initValue=value;}}else{initValue=\"\";}var questionBlock=appendChild(doc,parentNode,\"question_block\",null,{guid:id,identifier:identifier,required:required,important:important,\"return-type\":returnType,value:initValue});if(annotatable){appendChild(doc,questionBlock,\"annotation\");}appendVisRules(doc,findField,questionBlock,visRules);appendExtVisRules(doc,findField,questionBlock,externalVisRules);appendAuthorizationRules(doc,questionBlock,field,authorizationRules);appendTagRules(doc,questionBlock,field,tagRules);appendPrintTagRules(doc,questionBlock,field,printTagRules);appendButtonDescriptions(doc,questionBlock,buttonDescriptions);var questionNode=appendChild(doc,questionBlock,\"question\");Object.keys(labelI18n).forEach(function(lang){if(typeof labelI18n[lang]!==\"undefined\"){appendChild(doc,questionNode,\"text\",labelI18n[lang],{lang:lang});}});Object.keys(descriptionI18n).forEach(function(lang){if(typeof descriptionI18n[lang]!==\"undefined\"){appendChild(doc,questionNode,\"description\",descriptionI18n[lang],{lang:lang});}});appendImages(doc,questionNode,images);return questionBlock;}export function appendStaticTagRules(doc,parentNode,field,tagRules){if(tagRules&&tagRules.length>0){var tagRulesNode=appendChild(doc,parentNode,\"tag_rules\");tagRules.forEach(function(_ref){var tagName=_ref.tagName,operatorId=_ref.operatorId,argument=_ref.argument,alwaysAdd=_ref.alwaysAdd;assert(tagName);// this must be added earlier in the serialization process\nappendChild(doc,tagRulesNode,\"tag\",null,{name:tagName});});}}export function appendImages(doc,parentNode,images){images.forEach(function(_ref2){var url=_ref2.url;appendChild(doc,parentNode,\"image\",null,{src:url});});}export function appendVisRules(doc,findField,parentNode,visRules){if(Array.isArray(visRules)){if(visRules.length>0){// const first = visRules[0];\nvar visRulesNode=appendChild(doc,parentNode,\"visibility_rules\",null);visRules.forEach(function(child){appendVisRules(doc,findField,visRulesNode,child);});}}else{var fieldId=visRules.fieldId,operatorId=visRules.operatorId,argument=visRules.argument,conjunctionOperator=visRules.conjunctionOperator,positionRule=visRules.positionRule;var field=findField(fieldId);var settings=field.settings;assert(typeof settings.identifier===\"string\");appendChild(doc,parentNode,\"condition\",null,{\"field-identifier\":settings.identifier,operator:operatorId,\"conjunction-operator\":conjunctionOperator,argument:ruleArgumentToString(field,operatorId,argument),positionRule:positionRule});}}export function appendTagRules(doc,parentNode,field,tagRules){if(tagRules&&tagRules.length>0){var tagRulesNode=appendChild(doc,parentNode,\"tag_rules\");tagRules.forEach(function(_ref3){var tagName=_ref3.tagName,operatorId=_ref3.operatorId,argument=_ref3.argument,alwaysAdd=_ref3.alwaysAdd;assert(tagName);// this must be added earlier in the serialization process\nif(alwaysAdd){appendChild(doc,tagRulesNode,\"tag\",null,{name:tagName});}else{argument=ruleArgumentToString(field,operatorId,argument);appendChild(doc,tagRulesNode,\"tag_rule\",null,{tag:tagName,operator:operatorId,argument:argument});}});}}export function appendPrintTagRules(doc,parentNode,field,printTagRules){if(printTagRules&&printTagRules.length>0){var printTagRulesNode=appendChild(doc,parentNode,\"print_tag_rules\");printTagRules.forEach(function(_ref4){var tagName=_ref4.tagName;appendChild(doc,printTagRulesNode,\"tag\",null,{name:tagName});});}}export function appendAuthorizationRules(doc,parentNode,field,authorizationRules){if(authorizationRules&&authorizationRules.length>0){var authorizationRulesNode=appendChild(doc,parentNode,\"authorization_rules\");authorizationRules.forEach(function(_ref5){var authorizationName=_ref5.authorizationName;appendChild(doc,authorizationRulesNode,\"authorization\",null,{name:authorizationName});});}}export function ruleArgumentToString(field,operatorId,argument){var argType=Ops[operatorId].argType;var settings=field.settings;if(argType===\"optionId\"&&argument!==FREE_TEXT_VALUE){var options=settings.options;var option=options.find(function(o){return o.value===argument;});argument=option.value;}if(argType===\"date\"){assert(moment.isMoment(argument));argument=argument.format(\"YYYY-MM-DD\");}return argument;}export function appendExtVisRules(doc,findField,parentNode,externalVisRules){if(externalVisRules){if(Array.isArray(externalVisRules)){if(externalVisRules.length>0){// const first = externalVisRules[0];\nvar extVisRulesNode=appendChild(doc,parentNode,\"external_visibility_rules\",null);externalVisRules.forEach(function(child){appendExtVisRules(doc,findField,extVisRulesNode,child);});}}else{var fieldId=externalVisRules.fieldId,operatorId=externalVisRules.operatorId,argument=externalVisRules.argument,conjunctionOperator=externalVisRules.conjunctionOperator,fields=externalVisRules.fields,form=externalVisRules.form,positionRule=externalVisRules.positionRule;var field=fields.find(function(f){return f.id===fieldId;});var settings=field.settings;assert(typeof settings.identifier===\"string\");var extConditionNode=appendChild(doc,parentNode,\"condition\",null,{\"field-identifier\":settings.identifier,operator:operatorId,\"conjunction-operator\":conjunctionOperator,argument:ruleArgumentToString(field,operatorId,argument),positionRule:positionRule});var externalForm=serialize(form,fields);appendChild(doc,extConditionNode,\"external_form\",externalForm,{},false);}}}export function appendButtonDescriptions(doc,parentNode,buttonDescriptions){if(buttonDescriptions&&buttonDescriptions.length>0){var buttonDescriptionsNode=appendChild(doc,parentNode,\"button_descriptions\");buttonDescriptions.forEach(function(_ref6){var selectedDescriptionId=_ref6.selectedDescriptionId,selectedButtonId=_ref6.selectedButtonId;appendChild(doc,buttonDescriptionsNode,\"button_description\",null,{\"selected-description-id\":selectedDescriptionId,\"selected-button-id\":selectedButtonId});});}}export function appendValue(doc,parentNode,value){if(value&&value.length>0){appendChild(doc,parentNode,\"value\",value);}}","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/utils/xml.js"],"names":["Ops","uuid","assert","DEFAULT_LANG","FREE_TEXT_VALUE","_","moment","serialize","readQuestionBlock","node","type","expectedReturnType","getRequiredAttr","Error","questionNode","getChildNode","labelI18n","getChildNodes","reduce","acc","textNode","Object","assign","getAttrWithDefault","textContent","descriptionI18n","undefined","forEach","descriptionNode","annotatable","hasChildNode","annotation","annotationNode","text","map","n","join","imageUrl","tags","uniq","split","tag","trim","filter","id","v4","settings","identifier","important","images","readImages","url","attrName","defaultValue","hasAttribute","getAttribute","nodeName","getValueAttr","childName","hasChildNodes","i","childNodes","length","child","result","push","appendChild","doc","parentNode","name","attributes","isTextContentEncode","createElement","keys","key","value","replace","setAttribute","createTextNode","decodeURIComponent","encodeURIComponent","appendChildWithLineBreak","appendQuestionBlock","findField","returnType","field","visRules","authorizationRules","tagRules","printTagRules","buttonDescriptions","externalVisRules","required","hasOwnProperty","initValue","includes","questionBlock","guid","appendVisRules","appendExtVisRules","appendAuthorizationRules","appendTagRules","appendPrintTagRules","appendButtonDescriptions","lang","appendImages","appendStaticTagRules","tagRulesNode","tagName","operatorId","argument","alwaysAdd","src","Array","isArray","visRulesNode","fieldId","conjunctionOperator","positionRule","operator","ruleArgumentToString","printTagRulesNode","authorizationRulesNode","authorizationName","argType","options","option","find","o","isMoment","format","extVisRulesNode","fields","form","f","extConditionNode","externalForm","buttonDescriptionsNode","selectedDescriptionId","selectedButtonId","appendValue"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport Ops from \"../constants/VisibilityOperators\";\r\nimport uuid from \"node-uuid\";\r\nimport assert from \"assert\";\r\nimport { DEFAULT_LANG } from \"../constants/global\";\r\nimport { FREE_TEXT_VALUE } from \"../utils/options\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport serialize from \"../serialize\";\r\n\r\nexport function readQuestionBlock(node, type, expectedReturnType) {\r\n  if (getRequiredAttr(node, \"return-type\") !== expectedReturnType) {\r\n    throw new Error(`return-type of ${type} is not ${expectedReturnType}`);\r\n  }\r\n\r\n  const questionNode = getChildNode(node, \"question\");\r\n\r\n  const labelI18n = getChildNodes(questionNode, \"text\").reduce(\r\n    (acc, textNode) => {\r\n      return Object.assign({}, acc, {\r\n        [getAttrWithDefault(\r\n          textNode,\r\n          \"lang\",\r\n          DEFAULT_LANG\r\n        )]: textNode.textContent,\r\n      });\r\n    },\r\n    {}\r\n  );\r\n\r\n  const descriptionI18n = {\r\n    [DEFAULT_LANG]: getAttrWithDefault(questionNode, \"description\", undefined),\r\n  };\r\n\r\n  getChildNodes(questionNode, \"description\").forEach((descriptionNode) => {\r\n    descriptionI18n[getRequiredAttr(descriptionNode, \"lang\")] =\r\n      descriptionNode.textContent;\r\n  });\r\n\r\n  const annotatable = hasChildNode(node, \"annotation\");\r\n  let annotation = null;\r\n\r\n  if (annotatable) {\r\n    const annotationNode = getChildNode(node, \"annotation\");\r\n\r\n    const text = getChildNodes(annotationNode, \"text\")\r\n      .map((n) => n.textContent)\r\n      .join(\" \");\r\n    const imageUrl = hasChildNode(annotationNode, \"image\")\r\n      ? getRequiredAttr(getChildNode(annotationNode, \"image\"), \"src\")\r\n      : null;\r\n\r\n    if (text || imageUrl) {\r\n      annotation = { text, imageUrl };\r\n    }\r\n  }\r\n\r\n  const tags = _.uniq(\r\n    getAttrWithDefault(node, \"tags\", \"\")\r\n      .split(\",\")\r\n      .map((tag) => tag.trim())\r\n      .filter((tag) => tag)\r\n  );\r\n\r\n  return {\r\n    id: getAttrWithDefault(node, \"guid\", uuid.v4()),\r\n    type: type,\r\n    annotation,\r\n    tags,\r\n    settings: {\r\n      identifier: getRequiredAttr(node, \"identifier\"),\r\n      labelI18n: labelI18n,\r\n      important: getRequiredAttr(node, \"important\") === \"true\",\r\n      annotatable: annotatable,\r\n      descriptionI18n: descriptionI18n,\r\n      images: readImages(questionNode),\r\n    },\r\n  };\r\n}\r\n\r\nexport function readImages(questionNode) {\r\n  return getChildNodes(questionNode, \"image\").map((n) => ({\r\n    id: uuid.v4(),\r\n    url: getRequiredAttr(n, \"src\"),\r\n  }));\r\n}\r\n\r\nexport function getAttrWithDefault(node, attrName, defaultValue) {\r\n  if (node.hasAttribute(attrName)) {\r\n    return node.getAttribute(attrName);\r\n  } else {\r\n    return defaultValue;\r\n  }\r\n}\r\n\r\nexport function getRequiredAttr(node, attrName) {\r\n  if (node.hasAttribute(attrName)) {\r\n    return node.getAttribute(attrName);\r\n  } else {\r\n    throw new Error(\r\n      `Expected \"${node.nodeName}\" element to have an attribute \"${attrName}\"`\r\n    );\r\n  }\r\n}\r\n\r\nexport function getValueAttr(node, attrName) {\r\n  if (node.hasAttribute(attrName)) {\r\n    return node.getAttribute(attrName);\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport function hasChildNode(node, childName) {\r\n  if (node.hasChildNodes()) {\r\n    for (let i = 0; i < node.childNodes.length; i += 1) {\r\n      const child = node.childNodes[i];\r\n      if (child.nodeName === childName) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function getChildNode(node, childName) {\r\n  if (node.hasChildNodes()) {\r\n    for (let i = 0; i < node.childNodes.length; i += 1) {\r\n      const child = node.childNodes[i];\r\n      if (child.nodeName === childName) {\r\n        return child;\r\n      }\r\n    }\r\n  }\r\n\r\n  throw new Error(\r\n    `Expected element \"${node.nodeName}\" to have a \"${childName}\" child element.`\r\n  );\r\n}\r\n\r\nexport function getChildNodes(node, childName) {\r\n  let result = []; // eslint-disable-line prefer-const\r\n\r\n  if (node.hasChildNodes()) {\r\n    for (let i = 0; i < node.childNodes.length; i += 1) {\r\n      const child = node.childNodes[i];\r\n      if (child.nodeName === childName) {\r\n        result.push(child);\r\n      }\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nexport function appendChild(\r\n  doc,\r\n  parentNode,\r\n  name,\r\n  textContent = \"\",\r\n  attributes = {},\r\n  isTextContentEncode = true\r\n) {\r\n  const node = doc.createElement(name);\r\n  parentNode.appendChild(node);\r\n\r\n  Object.keys(attributes).forEach((key) => {\r\n    let value = attributes[key];\r\n    if (value !== null) {\r\n      if (typeof value === \"string\") {\r\n        value = value.replace(\"\\n\", \" \");\r\n      }\r\n      node.setAttribute(key, value);\r\n    }\r\n  });\r\n\r\n  // TODO check how newlines are handled, that is, are they still there when the sfdl is imported?\r\n  if (textContent) {\r\n    if (isTextContentEncode)\r\n      node.appendChild(\r\n        doc.createTextNode(\r\n          decodeURIComponent(\r\n            encodeURIComponent(textContent).split(\"%C2%AD\").join(\"\")\r\n          )\r\n        )\r\n      );\r\n    else node.appendChild(doc.createTextNode(textContent));\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\nexport function appendChildWithLineBreak(\r\n  doc,\r\n  parentNode,\r\n  name,\r\n  textContent = \"\",\r\n  attributes = {}\r\n) {\r\n  const node = doc.createElement(name);\r\n  parentNode.appendChild(node);\r\n\r\n  Object.keys(attributes).forEach((key) => {\r\n    let value = attributes[key];\r\n    if (value !== null) {\r\n      node.setAttribute(key, value);\r\n    }\r\n  });\r\n\r\n  // TODO check how newlines are handled, that is, are they still there when the sfdl is imported?\r\n  if (textContent) {\r\n    const textNode = doc.createTextNode(\r\n      decodeURIComponent(\r\n        encodeURIComponent(textContent).split(\"%C2%AD\").join(\"\")\r\n      )\r\n    );\r\n    node.appendChild(textNode);\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\nexport function appendQuestionBlock(\r\n  doc,\r\n  findField,\r\n  parentNode,\r\n  returnType,\r\n  field\r\n) {\r\n  const { id, settings } = field;\r\n  const {\r\n    identifier,\r\n    labelI18n,\r\n    important,\r\n    annotatable,\r\n    descriptionI18n,\r\n    visRules,\r\n    images,\r\n    authorizationRules,\r\n    tagRules,\r\n    printTagRules,\r\n    buttonDescriptions,\r\n    externalVisRules,\r\n    value,\r\n    // value,\r\n  } = settings;\r\n  const required = settings.hasOwnProperty(\"required\")\r\n    ? settings.required\r\n    : false;\r\n\r\n  let initValue = \"\";\r\n\r\n  if (value) {\r\n    if (value.includes(\",\")) {\r\n      initValue = value.split(\",\");\r\n    } else {\r\n      initValue = value;\r\n    }\r\n  } else {\r\n    initValue = \"\";\r\n  }\r\n\r\n  const questionBlock = appendChild(doc, parentNode, \"question_block\", null, {\r\n    guid: id,\r\n    identifier: identifier,\r\n    required: required,\r\n    important: important,\r\n    \"return-type\": returnType,\r\n    value: initValue,\r\n  });\r\n\r\n  if (annotatable) {\r\n    appendChild(doc, questionBlock, \"annotation\");\r\n  }\r\n\r\n  appendVisRules(doc, findField, questionBlock, visRules);\r\n  appendExtVisRules(doc, findField, questionBlock, externalVisRules);\r\n  appendAuthorizationRules(doc, questionBlock, field, authorizationRules);\r\n  appendTagRules(doc, questionBlock, field, tagRules);\r\n  appendPrintTagRules(doc, questionBlock, field, printTagRules);\r\n  appendButtonDescriptions(doc, questionBlock, buttonDescriptions);\r\n\r\n  const questionNode = appendChild(doc, questionBlock, \"question\");\r\n\r\n  Object.keys(labelI18n).forEach((lang) => {\r\n    if (typeof labelI18n[lang] !== \"undefined\") {\r\n      appendChild(doc, questionNode, \"text\", labelI18n[lang], { lang });\r\n    }\r\n  });\r\n\r\n  Object.keys(descriptionI18n).forEach((lang) => {\r\n    if (typeof descriptionI18n[lang] !== \"undefined\") {\r\n      appendChild(doc, questionNode, \"description\", descriptionI18n[lang], {\r\n        lang,\r\n      });\r\n    }\r\n  });\r\n\r\n  appendImages(doc, questionNode, images);\r\n\r\n  return questionBlock;\r\n}\r\n\r\nexport function appendStaticTagRules(doc, parentNode, field, tagRules) {\r\n  if (tagRules && tagRules.length > 0) {\r\n    const tagRulesNode = appendChild(doc, parentNode, \"tag_rules\");\r\n\r\n    tagRules.forEach(({ tagName, operatorId, argument, alwaysAdd }) => {\r\n      assert(tagName); // this must be added earlier in the serialization process\r\n\r\n      appendChild(doc, tagRulesNode, \"tag\", null, { name: tagName });\r\n    });\r\n  }\r\n}\r\n\r\nexport function appendImages(doc, parentNode, images) {\r\n  images.forEach(({ url }) => {\r\n    appendChild(doc, parentNode, \"image\", null, { src: url });\r\n  });\r\n}\r\n\r\nexport function appendVisRules(doc, findField, parentNode, visRules) {\r\n  if (Array.isArray(visRules)) {\r\n    if (visRules.length > 0) {\r\n      // const first = visRules[0];\r\n      const visRulesNode = appendChild(\r\n        doc,\r\n        parentNode,\r\n        \"visibility_rules\",\r\n        null\r\n      );\r\n\r\n      visRules.forEach((child) => {\r\n        appendVisRules(doc, findField, visRulesNode, child);\r\n      });\r\n    }\r\n  } else {\r\n    const {\r\n      fieldId,\r\n      operatorId,\r\n      argument,\r\n      conjunctionOperator,\r\n      positionRule,\r\n    } = visRules;\r\n    const field = findField(fieldId);\r\n    const { settings } = field;\r\n\r\n    assert(typeof settings.identifier === \"string\");\r\n\r\n    appendChild(doc, parentNode, \"condition\", null, {\r\n      \"field-identifier\": settings.identifier,\r\n      operator: operatorId,\r\n      \"conjunction-operator\": conjunctionOperator,\r\n      argument: ruleArgumentToString(field, operatorId, argument),\r\n      positionRule: positionRule,\r\n    });\r\n  }\r\n}\r\n\r\nexport function appendTagRules(doc, parentNode, field, tagRules) {\r\n  if (tagRules && tagRules.length > 0) {\r\n    const tagRulesNode = appendChild(doc, parentNode, \"tag_rules\");\r\n\r\n    tagRules.forEach(({ tagName, operatorId, argument, alwaysAdd }) => {\r\n      assert(tagName); // this must be added earlier in the serialization process\r\n\r\n      if (alwaysAdd) {\r\n        appendChild(doc, tagRulesNode, \"tag\", null, { name: tagName });\r\n      } else {\r\n        argument = ruleArgumentToString(field, operatorId, argument);\r\n\r\n        appendChild(doc, tagRulesNode, \"tag_rule\", null, {\r\n          tag: tagName,\r\n          operator: operatorId,\r\n          argument: argument,\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport function appendPrintTagRules(doc, parentNode, field, printTagRules) {\r\n  if (printTagRules && printTagRules.length > 0) {\r\n    const printTagRulesNode = appendChild(doc, parentNode, \"print_tag_rules\");\r\n\r\n    printTagRules.forEach(({ tagName }) => {\r\n      appendChild(doc, printTagRulesNode, \"tag\", null, { name: tagName });\r\n    });\r\n  }\r\n}\r\n\r\nexport function appendAuthorizationRules(\r\n  doc,\r\n  parentNode,\r\n  field,\r\n  authorizationRules\r\n) {\r\n  if (authorizationRules && authorizationRules.length > 0) {\r\n    const authorizationRulesNode = appendChild(\r\n      doc,\r\n      parentNode,\r\n      \"authorization_rules\"\r\n    );\r\n\r\n    authorizationRules.forEach(({ authorizationName }) => {\r\n      appendChild(doc, authorizationRulesNode, \"authorization\", null, {\r\n        name: authorizationName,\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport function ruleArgumentToString(field, operatorId, argument) {\r\n  const argType = Ops[operatorId].argType;\r\n  const { settings } = field;\r\n\r\n  if (argType === \"optionId\" && argument !== FREE_TEXT_VALUE) {\r\n    const { options } = settings;\r\n    const option = options.find((o) => o.value === argument);\r\n    argument = option.value;\r\n  }\r\n\r\n  if (argType === \"date\") {\r\n    assert(moment.isMoment(argument));\r\n    argument = argument.format(\"YYYY-MM-DD\");\r\n  }\r\n\r\n  return argument;\r\n}\r\n\r\nexport function appendExtVisRules(\r\n  doc,\r\n  findField,\r\n  parentNode,\r\n  externalVisRules\r\n) {\r\n  if (externalVisRules) {\r\n    if (Array.isArray(externalVisRules)) {\r\n      if (externalVisRules.length > 0) {\r\n        // const first = externalVisRules[0];\r\n        const extVisRulesNode = appendChild(\r\n          doc,\r\n          parentNode,\r\n          \"external_visibility_rules\",\r\n          null\r\n        );\r\n\r\n        externalVisRules.forEach((child) => {\r\n          appendExtVisRules(doc, findField, extVisRulesNode, child);\r\n        });\r\n      }\r\n    } else {\r\n      const {\r\n        fieldId,\r\n        operatorId,\r\n        argument,\r\n        conjunctionOperator,\r\n        fields,\r\n        form,\r\n        positionRule,\r\n      } = externalVisRules;\r\n      const field = fields.find((f) => f.id === fieldId);\r\n      const { settings } = field;\r\n\r\n      assert(typeof settings.identifier === \"string\");\r\n\r\n      const extConditionNode = appendChild(doc, parentNode, \"condition\", null, {\r\n        \"field-identifier\": settings.identifier,\r\n        operator: operatorId,\r\n        \"conjunction-operator\": conjunctionOperator,\r\n        argument: ruleArgumentToString(field, operatorId, argument),\r\n        positionRule: positionRule,\r\n      });\r\n      const externalForm = serialize(form, fields);\r\n      appendChild(\r\n        doc,\r\n        extConditionNode,\r\n        \"external_form\",\r\n        externalForm,\r\n        {},\r\n        false\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport function appendButtonDescriptions(doc, parentNode, buttonDescriptions) {\r\n  if (buttonDescriptions && buttonDescriptions.length > 0) {\r\n    const buttonDescriptionsNode = appendChild(\r\n      doc,\r\n      parentNode,\r\n      \"button_descriptions\"\r\n    );\r\n\r\n    buttonDescriptions.forEach(\r\n      ({ selectedDescriptionId, selectedButtonId }) => {\r\n        appendChild(doc, buttonDescriptionsNode, \"button_description\", null, {\r\n          \"selected-description-id\": selectedDescriptionId,\r\n          \"selected-button-id\": selectedButtonId,\r\n        });\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\nexport function appendValue(doc, parentNode, value) {\r\n  if (value && value.length > 0) {\r\n    appendChild(doc, parentNode, \"value\", value);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import{Box,Card,Grid,Typography}from\"@material-ui/core\";import{withStyles}from\"@material-ui/core/styles\";import*as action from\"actions\";import classnames from\"classnames\";import{LocalizeContext}from\"i18n\";import{showInActivityListSteps}from\"js/publicFn\";import*as util from\"js/util\";import React,{useEffect}from\"react\";import{connect}from\"react-redux\";import{useHistory}from\"react-router-dom\";var ActivityList=withStyles(function(_ref){var spacing=_ref.spacing;return{overdue:{backgroundColor:\"red\",color:\"white\"},normal:{backgroundColor:\"#9cea40\",color:\"white\"},cardStyle:{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",width:\"33%\",padding:\"20px 0\"},grid:{fontSize:\"14px\",marginLeft:1}};})(function(_ref2){var classes=_ref2.classes,overdueActivities=_ref2.overdueActivities,data=_ref2.data,setOverdueActivities=_ref2.setOverdueActivities;var history=useHistory();var i18n=React.useContext(LocalizeContext);var useOverdueActivities=function useOverdueActivities(setOverdueActivities){useEffect(function(){setOverdueActivities(overdueActivities);},[setOverdueActivities]);};useOverdueActivities(setOverdueActivities);return/*#__PURE__*/React.createElement(Box,null,data.map(function(activity,index){var _classnames;return activity.total>0?/*#__PURE__*/React.createElement(\"div\",{key:index},/*#__PURE__*/React.createElement(Card,{elevation:0,onClick:function onClick(){history.push(\"/activity/\".concat(activity.number));},style:{margin:\"8px 0\",borderRadius:\"0\"}},/*#__PURE__*/React.createElement(Box,{style:{display:\"flex\",flexDirection:\"row\",alignItems:\"center\",justifyContent:\"center\",height:80}},/*#__PURE__*/React.createElement(Box,{style:{width:\"1%\"},className:classnames((_classnames={},_defineProperty(_classnames,\"\".concat(classes.overdue),activity.overdue>0),_defineProperty(_classnames,\"\".concat(classes.normal),activity.overdue<=0),_classnames))},/*#__PURE__*/React.createElement(\"div\",{style:{width:\"2px\",height:\"80px\"}})),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:3,className:classes.grid},/*#__PURE__*/React.createElement(Grid,{item:true,xs:5},/*#__PURE__*/React.createElement(Typography,{style:{fontWeight:\"bold\"}},activity.number),/*#__PURE__*/React.createElement(Box,null,activity.descriptionShort3?activity.descriptionShort3+\"-扶梯\":activity.descriptionShort),/*#__PURE__*/React.createElement(Box,null,activity.descriptionShort14?activity.descriptionShort14+\"-电梯\":\"\")),/*#__PURE__*/React.createElement(Grid,{item:true,style:{textAlign:\"center\"},xs:2},/*#__PURE__*/React.createElement(Typography,{color:\"secondary\"},activity.total),/*#__PURE__*/React.createElement(Box,null,i18n.INSTAPP_JOBLIST_ACTIVITY_SUM)),/*#__PURE__*/React.createElement(Grid,{item:true,style:{textAlign:\"center\",padding:\"12px 9px\"},xs:2},/*#__PURE__*/React.createElement(Typography,{color:\"secondary\"},activity.notOverdue),/*#__PURE__*/React.createElement(Box,null,i18n.INSTALLATION_FUTURE)),/*#__PURE__*/React.createElement(Grid,{item:true,style:{textAlign:\"center\"},xs:2},/*#__PURE__*/React.createElement(Typography,{color:\"secondary\"},activity.overdue),/*#__PURE__*/React.createElement(Box,null,i18n.INSTAPP_JOBLIST_ACTIVITY_OVERDUE)))))):null;}));});var mapStateToProps=function mapStateToProps(_ref3){var activities=_ref3.activities,orderActivities=_ref3.orderActivities,timeHorizon=_ref3.timeHorizon,auth=_ref3.auth;var today=new Date().setHours(0,0,0,0);// const hideInProgress = auth.activityAuth.hideInProgress;\nvar overdueActivities={};var total=function total(activityNumber){return Object.keys(orderActivities).filter(function(key){return orderActivities[key].activityNumber===activityNumber&&!orderActivities[key].confirmedDate&&util.timeHorizonFilter(orderActivities[key].leadingDate?orderActivities[key].leadingDate:orderActivities[key].leadingEndDate,today,timeHorizon);}).length;};// const overdue = (activityNumber) => {\n//   const calculateOverdue = (orderActivityNumber) => {\n//     if (orderActivities[orderActivityNumber]) {\n//       return (\n//         new Date(orderActivities[orderActivityNumber].leadingDate).getTime() <\n//           today && !orderActivities[orderActivityNumber].confirmedDate\n//       );\n//     } else {\n//       return false;\n//     }\n//   };\n//   const overdueList = Object.keys(orderActivities).filter((key) => {\n//     let passedActivity = false;\n//     if (orderActivities[key].activityNumber !== activitiesList[0].number) {\n//       if (orderActivities[key].activityNumber === activityNumber) {\n//         let currentActivityIndex = 0;\n//         const orderNumber = orderActivities[key].orderNumber;\n//         activitiesList.forEach((item, activityIndex) => {\n//           if (item.number === activityNumber) {\n//             currentActivityIndex = activityIndex;\n//           }\n//         });\n//         activitiesList.forEach((item, index) => {\n//           if (index < currentActivityIndex) {\n//             if (calculateOverdue(orderNumber + \"-\" + item.number)) {\n//               passedActivity = calculateOverdue(\n//                 orderNumber + \"-\" + item.number\n//               );\n//             }\n//           }\n//         });\n//       }\n//     } else {\n//       passedActivity = false;\n//     }\n//     return (\n//       orderActivities[key].activityNumber === activityNumber &&\n//       util.timeHorizonFilter(\n//         orderActivities[key].leadingDate,\n//         today,\n//         timeHorizon\n//       ) &&\n//       calculateOverdue(key) &&\n//       !passedActivity\n//     );\n//   });\n//   if (overdueList.length > 0) {\n//     overdueActivities[activityNumber] = overdueList;\n//   }\n//   return overdueList.length;\n// };\nvar overdue=function overdue(activityNumber){var calculateOverdue=function calculateOverdue(orderActivityNumber){var orderActivity=orderActivities[orderActivityNumber];if(orderActivity){if(!orderActivity.leadingDate){if(orderActivity.leadingStartDate&&orderActivity.leadingEndDate){return new Date(orderActivity.leadingEndDate).getTime()<today&&!orderActivity.confirmedDate;}}else{return new Date(orderActivity.leadingDate).getTime()<today&&!orderActivity.confirmedDate;}}else{return false;}};var overdueList=Object.keys(orderActivities).filter(function(key){return orderActivities[key].activityNumber===activityNumber&&util.timeHorizonFilter(orderActivities[key].leadingDate?orderActivities[key].leadingDate:orderActivities[key].leadingEndDate,today,timeHorizon)&&calculateOverdue(key);});if(overdueList.length>0){overdueActivities[activityNumber]=overdueList;}return overdueList.length;};// const notOverdue = (total, overdue, activityNumber) => {\n//   const confirmedCount = Object.keys(orderActivities).filter((key) => {\n//     return (\n//       orderActivities[key].activityNumber === activityNumber &&\n//       util.timeHorizonFilter(\n//         orderActivities[key].leadingDate,\n//         today,\n//         timeHorizon\n//       ) &&\n//       orderActivities[key].confirmedDate\n//     );\n//   }).length;\n//   return total - overdue - confirmedCount;\n// };\nvar orderActivitiesList=[];Object.keys(orderActivities).forEach(function(item){orderActivitiesList.push(orderActivities[item]);});var activitiesObj=activities;orderActivitiesList.forEach(function(item){if(activitiesObj[item.activityNumber]){activitiesObj[item.activityNumber].sort=item.sort;}});var activitiesList=[];Object.keys(activitiesObj).forEach(function(item){activitiesList.push(activitiesObj[item]);});var showStepNos=[];// let rolesMapper = { sc: \"Subcon TL\", pe: \"PE\" };\n// Object.keys(auth.activityAuth).forEach((name) => {\n//   if (auth.roles.indexOf(rolesMapper[name.substring(0, 2)]) > -1) {\n//     showStepNos = showStepNos.concat(auth.activityAuth[name]);\n//   }\n// });\nshowStepNos=showInActivityListSteps(auth.activityAuth,auth.roles[0]);activitiesList=activitiesList.filter(function(item){return(// !hideInProgress.includes(item.number) ||\nshowStepNos.includes(item.number));}).sort(function(a,b){return a.sort?a.sort>b.sort?1:-1:1;});return{data:activitiesList.map(function(item){return _objectSpread(_objectSpread({},activities[item.number]),{},{total:total(item.number),overdue:overdue(item.number),notOverdue:total(item.number)-overdue(item.number)// notOverdue: notOverdue(\n//   total(item.number),\n//   overdue(item.number),\n//   item.number\n// ),\n});}),overdueActivities:overdueActivities};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{setOverdueActivities:function setOverdueActivities(data){dispatch(action.setOverdueActivities(data));}};};export default connect(mapStateToProps,mapDispatchToProps)(ActivityList);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/ActivityList/index.js"],"names":["Box","Card","Grid","Typography","withStyles","action","classnames","LocalizeContext","showInActivityListSteps","util","React","useEffect","connect","useHistory","ActivityList","spacing","overdue","backgroundColor","color","normal","cardStyle","display","flexDirection","alignItems","width","padding","grid","fontSize","marginLeft","classes","overdueActivities","data","setOverdueActivities","history","i18n","useContext","useOverdueActivities","map","activity","index","total","push","number","margin","borderRadius","justifyContent","height","fontWeight","descriptionShort3","descriptionShort","descriptionShort14","textAlign","INSTAPP_JOBLIST_ACTIVITY_SUM","notOverdue","INSTALLATION_FUTURE","INSTAPP_JOBLIST_ACTIVITY_OVERDUE","mapStateToProps","activities","orderActivities","timeHorizon","auth","today","Date","setHours","activityNumber","Object","keys","filter","key","confirmedDate","timeHorizonFilter","leadingDate","leadingEndDate","length","calculateOverdue","orderActivityNumber","orderActivity","leadingStartDate","getTime","overdueList","orderActivitiesList","forEach","item","activitiesObj","sort","activitiesList","showStepNos","activityAuth","roles","includes","a","b","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import { Box, Card, Grid, Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as action from \"actions\";\r\nimport classnames from \"classnames\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport { showInActivityListSteps } from \"js/publicFn\";\r\nimport * as util from \"js/util\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ActivityList = withStyles(({ spacing }) => {\r\n  return {\r\n    overdue: {\r\n      backgroundColor: \"red\",\r\n      color: \"white\",\r\n    },\r\n    normal: {\r\n      backgroundColor: \"#9cea40\",\r\n      color: \"white\",\r\n    },\r\n    cardStyle: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      width: \"33%\",\r\n      padding: \"20px 0\",\r\n    },\r\n    grid: {\r\n      fontSize: \"14px\",\r\n      marginLeft: 1,\r\n    },\r\n  };\r\n})(({ classes, overdueActivities, data, setOverdueActivities }) => {\r\n  const history = useHistory();\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  const useOverdueActivities = (setOverdueActivities) => {\r\n    useEffect(() => {\r\n      setOverdueActivities(overdueActivities);\r\n    }, [setOverdueActivities]);\r\n  };\r\n\r\n  useOverdueActivities(setOverdueActivities);\r\n\r\n  return (\r\n    <Box>\r\n      {data.map((activity, index) => {\r\n        return activity.total > 0 ? (\r\n          <div key={index}>\r\n            <Card\r\n              elevation={0}\r\n              onClick={() => {\r\n                history.push(`/activity/${activity.number}`);\r\n              }}\r\n              style={{ margin: \"8px 0\", borderRadius: \"0\" }}\r\n            >\r\n              <Box\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  height: 80,\r\n                }}\r\n              >\r\n                <Box\r\n                  style={{ width: \"1%\" }}\r\n                  className={classnames({\r\n                    [`${classes.overdue}`]: activity.overdue > 0,\r\n                    [`${classes.normal}`]: activity.overdue <= 0,\r\n                  })}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      width: `2px`,\r\n                      height: `80px`,\r\n                    }}\r\n                  ></div>\r\n                </Box>\r\n                <Grid container spacing={3} className={classes.grid}>\r\n                  <Grid item xs={5}>\r\n                    <Typography style={{ fontWeight: \"bold\" }}>\r\n                      {activity.number}\r\n                    </Typography>\r\n                    <Box>\r\n                      {activity.descriptionShort3\r\n                        ? activity.descriptionShort3 + \"-扶梯\"\r\n                        : activity.descriptionShort}\r\n                    </Box>\r\n                    <Box>\r\n                      {activity.descriptionShort14\r\n                        ? activity.descriptionShort14 + \"-电梯\"\r\n                        : \"\"}\r\n                    </Box>\r\n                  </Grid>\r\n                  <Grid item style={{ textAlign: \"center\" }} xs={2}>\r\n                    <Typography color=\"secondary\">{activity.total}</Typography>\r\n                    <Box>{i18n.INSTAPP_JOBLIST_ACTIVITY_SUM}</Box>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    style={{ textAlign: \"center\", padding: \"12px 9px\" }}\r\n                    xs={2}\r\n                  >\r\n                    <Typography color=\"secondary\">\r\n                      {activity.notOverdue}\r\n                    </Typography>\r\n                    <Box>{i18n.INSTALLATION_FUTURE}</Box>\r\n                  </Grid>\r\n                  <Grid item style={{ textAlign: \"center\" }} xs={2}>\r\n                    <Typography color=\"secondary\">\r\n                      {activity.overdue}\r\n                    </Typography>\r\n                    <Box>{i18n.INSTAPP_JOBLIST_ACTIVITY_OVERDUE}</Box>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Card>\r\n          </div>\r\n        ) : null;\r\n      })}\r\n    </Box>\r\n  );\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  activities,\r\n  orderActivities,\r\n  timeHorizon,\r\n  auth,\r\n}) => {\r\n  const today = new Date().setHours(0, 0, 0, 0);\r\n  // const hideInProgress = auth.activityAuth.hideInProgress;\r\n  let overdueActivities = {};\r\n\r\n  const total = (activityNumber) => {\r\n    return Object.keys(orderActivities).filter((key) => {\r\n      return (\r\n        orderActivities[key].activityNumber === activityNumber &&\r\n        !orderActivities[key].confirmedDate &&\r\n        util.timeHorizonFilter(\r\n          orderActivities[key].leadingDate\r\n            ? orderActivities[key].leadingDate\r\n            : orderActivities[key].leadingEndDate,\r\n          today,\r\n          timeHorizon\r\n        )\r\n      );\r\n    }).length;\r\n  };\r\n\r\n  // const overdue = (activityNumber) => {\r\n  //   const calculateOverdue = (orderActivityNumber) => {\r\n  //     if (orderActivities[orderActivityNumber]) {\r\n  //       return (\r\n  //         new Date(orderActivities[orderActivityNumber].leadingDate).getTime() <\r\n  //           today && !orderActivities[orderActivityNumber].confirmedDate\r\n  //       );\r\n  //     } else {\r\n  //       return false;\r\n  //     }\r\n  //   };\r\n\r\n  //   const overdueList = Object.keys(orderActivities).filter((key) => {\r\n  //     let passedActivity = false;\r\n\r\n  //     if (orderActivities[key].activityNumber !== activitiesList[0].number) {\r\n  //       if (orderActivities[key].activityNumber === activityNumber) {\r\n  //         let currentActivityIndex = 0;\r\n  //         const orderNumber = orderActivities[key].orderNumber;\r\n\r\n  //         activitiesList.forEach((item, activityIndex) => {\r\n  //           if (item.number === activityNumber) {\r\n  //             currentActivityIndex = activityIndex;\r\n  //           }\r\n  //         });\r\n\r\n  //         activitiesList.forEach((item, index) => {\r\n  //           if (index < currentActivityIndex) {\r\n  //             if (calculateOverdue(orderNumber + \"-\" + item.number)) {\r\n  //               passedActivity = calculateOverdue(\r\n  //                 orderNumber + \"-\" + item.number\r\n  //               );\r\n  //             }\r\n  //           }\r\n  //         });\r\n  //       }\r\n  //     } else {\r\n  //       passedActivity = false;\r\n  //     }\r\n\r\n  //     return (\r\n  //       orderActivities[key].activityNumber === activityNumber &&\r\n  //       util.timeHorizonFilter(\r\n  //         orderActivities[key].leadingDate,\r\n  //         today,\r\n  //         timeHorizon\r\n  //       ) &&\r\n  //       calculateOverdue(key) &&\r\n  //       !passedActivity\r\n  //     );\r\n  //   });\r\n\r\n  //   if (overdueList.length > 0) {\r\n  //     overdueActivities[activityNumber] = overdueList;\r\n  //   }\r\n\r\n  //   return overdueList.length;\r\n  // };\r\n\r\n  const overdue = (activityNumber) => {\r\n    const calculateOverdue = (orderActivityNumber) => {\r\n      const orderActivity = orderActivities[orderActivityNumber];\r\n      if (orderActivity) {\r\n        if (!orderActivity.leadingDate) {\r\n          if (orderActivity.leadingStartDate && orderActivity.leadingEndDate) {\r\n            return (\r\n              new Date(orderActivity.leadingEndDate).getTime() < today &&\r\n              !orderActivity.confirmedDate\r\n            );\r\n          }\r\n        } else {\r\n          return (\r\n            new Date(orderActivity.leadingDate).getTime() < today &&\r\n            !orderActivity.confirmedDate\r\n          );\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    const overdueList = Object.keys(orderActivities).filter((key) => {\r\n      return (\r\n        orderActivities[key].activityNumber === activityNumber &&\r\n        util.timeHorizonFilter(\r\n          orderActivities[key].leadingDate\r\n            ? orderActivities[key].leadingDate\r\n            : orderActivities[key].leadingEndDate,\r\n          today,\r\n          timeHorizon\r\n        ) &&\r\n        calculateOverdue(key)\r\n      );\r\n    });\r\n\r\n    if (overdueList.length > 0) {\r\n      overdueActivities[activityNumber] = overdueList;\r\n    }\r\n\r\n    return overdueList.length;\r\n  };\r\n\r\n  // const notOverdue = (total, overdue, activityNumber) => {\r\n  //   const confirmedCount = Object.keys(orderActivities).filter((key) => {\r\n  //     return (\r\n  //       orderActivities[key].activityNumber === activityNumber &&\r\n  //       util.timeHorizonFilter(\r\n  //         orderActivities[key].leadingDate,\r\n  //         today,\r\n  //         timeHorizon\r\n  //       ) &&\r\n  //       orderActivities[key].confirmedDate\r\n  //     );\r\n  //   }).length;\r\n\r\n  //   return total - overdue - confirmedCount;\r\n  // };\r\n\r\n  var orderActivitiesList = [];\r\n  Object.keys(orderActivities).forEach((item) => {\r\n    orderActivitiesList.push(orderActivities[item]);\r\n  });\r\n\r\n  var activitiesObj = activities;\r\n  orderActivitiesList.forEach((item) => {\r\n    if (activitiesObj[item.activityNumber]) {\r\n      activitiesObj[item.activityNumber].sort = item.sort;\r\n    }\r\n  });\r\n\r\n  var activitiesList = [];\r\n  Object.keys(activitiesObj).forEach((item) => {\r\n    activitiesList.push(activitiesObj[item]);\r\n  });\r\n\r\n  let showStepNos = [];\r\n\r\n  // let rolesMapper = { sc: \"Subcon TL\", pe: \"PE\" };\r\n\r\n  // Object.keys(auth.activityAuth).forEach((name) => {\r\n  //   if (auth.roles.indexOf(rolesMapper[name.substring(0, 2)]) > -1) {\r\n  //     showStepNos = showStepNos.concat(auth.activityAuth[name]);\r\n  //   }\r\n  // });\r\n\r\n  showStepNos = showInActivityListSteps(auth.activityAuth, auth.roles[0]);\r\n\r\n  activitiesList = activitiesList\r\n    .filter((item) => {\r\n      return (\r\n        // !hideInProgress.includes(item.number) ||\r\n        showStepNos.includes(item.number)\r\n      );\r\n    })\r\n    .sort((a, b) => (a.sort ? (a.sort > b.sort ? 1 : -1) : 1));\r\n\r\n  return {\r\n    data: activitiesList.map((item) => {\r\n      return {\r\n        ...activities[item.number],\r\n        total: total(item.number),\r\n        overdue: overdue(item.number),\r\n        notOverdue: total(item.number) - overdue(item.number),\r\n        // notOverdue: notOverdue(\r\n        //   total(item.number),\r\n        //   overdue(item.number),\r\n        //   item.number\r\n        // ),\r\n      };\r\n    }),\r\n    overdueActivities: overdueActivities,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setOverdueActivities: (data) => {\r\n      dispatch(action.setOverdueActivities(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ActivityList);\r\n"]},"metadata":{},"sourceType":"module"}
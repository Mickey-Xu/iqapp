{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */import{appendChild,appendQuestionBlock,hasChildNode,getChildNode,getRequiredAttr,getAttrWithDefault,readQuestionBlock}from\"./utils/xml\";export default{serialize:function serialize(doc,findField,parentNode,field){var _field$settings=field.settings,min=_field$settings.min,max=_field$settings.max,unit=_field$settings.unit,unitFront=_field$settings.unitFront,prefilledAnswer=_field$settings.prefilledAnswer,value=_field$settings.value;var questionBlock=appendQuestionBlock(doc,findField,parentNode,\"decimal\",field);appendChild(doc,questionBlock,\"numberfield\",null,{unit:unit,\"unit-in-front\":unitFront,min:min,max:max,\"prefilled-answer\":prefilledAnswer,value:value});},canDeserialize:function canDeserialize(node){return node.nodeName===\"question_block\"&&hasChildNode(node,\"numberfield\");},deserialize:function deserialize(node){var field=readQuestionBlock(node,\"number\",\"decimal\");// eslint-disable-line prefer-const\nfield.settings.required=getRequiredAttr(node,\"required\")===\"true\";var inputNode=getChildNode(node,\"numberfield\");field.settings.unit=getAttrWithDefault(inputNode,\"unit\",\"\");field.settings.unitFront=getAttrWithDefault(inputNode,\"unit-in-front\")===\"true\";field.settings.prefilledAnswer=getAttrWithDefault(inputNode,\"prefilled-answer\",\"\");field.settings.value=getAttrWithDefault(inputNode,\"value\",\"\");if(inputNode.textContent&&inputNode.textContent.trim()!==\"\"){field.settings.value=Number(inputNode.textContent.trim());if(isNaN(field.settings.value)){console.warn(\"Number field value is not a number: \"+inputNode.textContent);}}[\"min\",\"max\"].forEach(function(attr){if(inputNode.hasAttribute(attr)&&getRequiredAttr(inputNode,attr).trim()!==\"\"){field.settings[attr]=Number(getAttrWithDefault(inputNode,attr,\"0\"));}else{field.settings[attr]=null;}});return field;}};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/NumberIO.js"],"names":["appendChild","appendQuestionBlock","hasChildNode","getChildNode","getRequiredAttr","getAttrWithDefault","readQuestionBlock","serialize","doc","findField","parentNode","field","settings","min","max","unit","unitFront","prefilledAnswer","value","questionBlock","canDeserialize","node","nodeName","deserialize","required","inputNode","textContent","trim","Number","isNaN","console","warn","forEach","attr","hasAttribute"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport {\r\n  appendChild,\r\n  appendQuestionBlock,\r\n  hasChildNode,\r\n  getChildNode,\r\n  getRequiredAttr,\r\n  getAttrWithDefault,\r\n  readQuestionBlock,\r\n} from \"./utils/xml\";\r\n\r\nexport default {\r\n  serialize(doc, findField, parentNode, field) {\r\n    const {\r\n      min,\r\n      max,\r\n      unit,\r\n      unitFront,\r\n      prefilledAnswer,\r\n      value,\r\n    } = field.settings;\r\n\r\n    const questionBlock = appendQuestionBlock(\r\n      doc,\r\n      findField,\r\n      parentNode,\r\n      \"decimal\",\r\n      field\r\n    );\r\n    appendChild(doc, questionBlock, \"numberfield\", null, {\r\n      unit,\r\n      \"unit-in-front\": unitFront,\r\n      min,\r\n      max,\r\n      \"prefilled-answer\": prefilledAnswer,\r\n      value,\r\n    });\r\n  },\r\n\r\n  canDeserialize(node) {\r\n    return (\r\n      node.nodeName === \"question_block\" && hasChildNode(node, \"numberfield\")\r\n    );\r\n  },\r\n\r\n  deserialize(node) {\r\n    let field = readQuestionBlock(node, \"number\", \"decimal\"); // eslint-disable-line prefer-const\r\n    field.settings.required = getRequiredAttr(node, \"required\") === \"true\";\r\n\r\n    const inputNode = getChildNode(node, \"numberfield\");\r\n    field.settings.unit = getAttrWithDefault(inputNode, \"unit\", \"\");\r\n    field.settings.unitFront =\r\n      getAttrWithDefault(inputNode, \"unit-in-front\") === \"true\";\r\n    field.settings.prefilledAnswer = getAttrWithDefault(\r\n      inputNode,\r\n      \"prefilled-answer\",\r\n      \"\"\r\n    );\r\n\r\n    field.settings.value = getAttrWithDefault(inputNode, \"value\", \"\");\r\n\r\n    if (inputNode.textContent && inputNode.textContent.trim() !== \"\") {\r\n      field.settings.value = Number(inputNode.textContent.trim());\r\n      if (isNaN(field.settings.value)) {\r\n        console.warn(\r\n          \"Number field value is not a number: \" + inputNode.textContent\r\n        );\r\n      }\r\n    }\r\n\r\n    [\"min\", \"max\"].forEach((attr) => {\r\n      if (\r\n        inputNode.hasAttribute(attr) &&\r\n        getRequiredAttr(inputNode, attr).trim() !== \"\"\r\n      ) {\r\n        field.settings[attr] = Number(getAttrWithDefault(inputNode, attr, \"0\"));\r\n      } else {\r\n        field.settings[attr] = null;\r\n      }\r\n    });\r\n\r\n    return field;\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { toDoOrDone } from \"js/util\";\nimport { authorizationC, documentAuthorizationC, documentAuthorizationR } from \"js/publicFn/authUtils\";\n\nconst DateConfirmFlag = flagNumber => {\n  const permissionObj = {\n    CanConfirm: false,\n    CanCancel: false,\n    CanSetConstraint: false,\n    CanDeleteDonstraint: false,\n    HasConstraint: false,\n    SupervisorActivity: false,\n    HideActivity: false,\n    PaymentOk: false,\n    PaymentNotOk: false,\n    ProgressType: false\n  };\n  const binFlagNumberOrder = parseInt(flagNumber, 10).toString(2).padStart(10, \"0\").split(\"\").reverse().join(\"\");\n  Object.keys(permissionObj).forEach((item, index) => {\n    if (binFlagNumberOrder[index] === \"1\") {\n      permissionObj[item] = true;\n    }\n  });\n  return permissionObj;\n};\n\nexport const DatePermissionControl = (data, prarms) => {\n  var _orderActivities$;\n\n  const {\n    auth,\n    orderActivities,\n    documentList,\n    templates\n  } = data;\n  const {\n    orderNumber,\n    activityNumber,\n    projectNumber\n  } = prarms;\n  const role = auth.roles[0];\n  const permissions = auth.activityAuth;\n  const datePermission = {\n    Confirm: false,\n    Cancel: false,\n    Lock: false,\n    unLock: false,\n    canUploadDoc: false,\n    canReadDoc: false,\n    docStatus: \"\",\n    planedDateEditablePermission: false,\n    planedDateCancelablePermission: false,\n    finishedDateEditablePermission: false,\n    finishedDateCancelablePermission: false\n  };\n  const flagsNumber = (_orderActivities$ = orderActivities[`${orderNumber}-${activityNumber}`]) === null || _orderActivities$ === void 0 ? void 0 : _orderActivities$.flags;\n  const docStatus = toDoOrDone(projectNumber, orderNumber, activityNumber, templates, documentList);\n  const docIsFinish = docStatus !== \"ToDo\";\n  const flags = DateConfirmFlag(flagsNumber);\n\n  if (role === \"admin\") {\n    Object.keys(datePermission).forEach(Permission => {\n      if (Permission === \"Confirm\") {\n        if (docIsFinish) {\n          datePermission[Permission] = true;\n        }\n      } else {\n        datePermission[Permission] = true;\n      }\n\n      datePermission[\"docStatus\"] = docStatus;\n    });\n  } else {\n    const authNumbers = authorizationC(orderActivities, orderNumber, permissions, role);\n    datePermission[\"docStatus\"] = docStatus;\n\n    if (authNumbers.includes(activityNumber)) {\n      if (docIsFinish && flags.CanConfirm) {\n        datePermission.Confirm = true;\n      }\n\n      datePermission.Cancel = flags.CanCancel;\n      datePermission.Lock = flags.CanSetConstraint;\n      datePermission.unLock = flags.CanDeleteDonstraint;\n      datePermission.planedDateEditablePermission = flags.CanSetConstraint;\n      datePermission.planedDateCancelablePermission = flags.CanDeleteDonstraint;\n      datePermission.finishedDateEditablePermission = flags.CanConfirm;\n      datePermission.finishedDateCancelablePermission = flags.CanCancel;\n    }\n\n    if (orderActivities[`${orderNumber}-${activityNumber}`].editable !== undefined && orderActivities[`${orderNumber}-${activityNumber}`].editable === false) {\n      if (orderActivities[`${orderNumber}-${activityNumber}`].confirmedDate === null) {\n        datePermission.Confirm = true;\n        datePermission.Cancel = false;\n      } else {\n        datePermission.Confirm = false;\n        datePermission.Cancel = true;\n      }\n    }\n\n    if (!docIsFinish) {\n      datePermission.Confirm = false;\n    }\n\n    const docCNumbers = documentAuthorizationC(orderActivities, orderNumber, permissions, role);\n\n    if (docCNumbers.includes(activityNumber)) {\n      datePermission.canUploadDoc = true;\n    }\n\n    const docRNumbers = documentAuthorizationR(orderActivities, orderNumber, permissions, role);\n\n    if (docRNumbers.includes(activityNumber)) {\n      datePermission.canReadDoc = true;\n    }\n  }\n\n  return datePermission;\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/publicFn/DatePermissionControl.js"],"names":["toDoOrDone","authorizationC","documentAuthorizationC","documentAuthorizationR","DateConfirmFlag","flagNumber","permissionObj","CanConfirm","CanCancel","CanSetConstraint","CanDeleteDonstraint","HasConstraint","SupervisorActivity","HideActivity","PaymentOk","PaymentNotOk","ProgressType","binFlagNumberOrder","parseInt","toString","padStart","split","reverse","join","Object","keys","forEach","item","index","DatePermissionControl","data","prarms","auth","orderActivities","documentList","templates","orderNumber","activityNumber","projectNumber","role","roles","permissions","activityAuth","datePermission","Confirm","Cancel","Lock","unLock","canUploadDoc","canReadDoc","docStatus","planedDateEditablePermission","planedDateCancelablePermission","finishedDateEditablePermission","finishedDateCancelablePermission","flagsNumber","flags","docIsFinish","Permission","authNumbers","includes","editable","undefined","confirmedDate","docCNumbers","docRNumbers"],"mappings":"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","sourcesContent":["import { toDoOrDone } from \"js/util\";\r\nimport {\r\n  authorizationC,\r\n  documentAuthorizationC,\r\n  documentAuthorizationR,\r\n} from \"js/publicFn/authUtils\";\r\nconst DateConfirmFlag = (flagNumber) => {\r\n  const permissionObj = {\r\n    CanConfirm: false,\r\n    CanCancel: false,\r\n    CanSetConstraint: false,\r\n    CanDeleteDonstraint: false,\r\n    HasConstraint: false,\r\n    SupervisorActivity: false,\r\n    HideActivity: false,\r\n    PaymentOk: false,\r\n    PaymentNotOk: false,\r\n    ProgressType: false,\r\n  };\r\n  const binFlagNumberOrder = parseInt(flagNumber, 10)\r\n    .toString(2)\r\n    .padStart(10, \"0\")\r\n    .split(\"\")\r\n    .reverse()\r\n    .join(\"\");\r\n  Object.keys(permissionObj).forEach((item, index) => {\r\n    if (binFlagNumberOrder[index] === \"1\") {\r\n      permissionObj[item] = true;\r\n    }\r\n  });\r\n  return permissionObj;\r\n};\r\n\r\nexport const DatePermissionControl = (data, prarms) => {\r\n  const { auth, orderActivities, documentList, templates } = data;\r\n  const { orderNumber, activityNumber, projectNumber } = prarms;\r\n  const role = auth.roles[0];\r\n  const permissions = auth.activityAuth;\r\n  const datePermission = {\r\n    Confirm: false,\r\n    Cancel: false,\r\n    Lock: false,\r\n    unLock: false,\r\n    canUploadDoc: false,\r\n    canReadDoc: false,\r\n    docStatus: \"\",\r\n    planedDateEditablePermission: false,\r\n    planedDateCancelablePermission: false,\r\n    finishedDateEditablePermission: false,\r\n    finishedDateCancelablePermission: false,\r\n  };\r\n\r\n  const flagsNumber =\r\n    orderActivities[`${orderNumber}-${activityNumber}`]?.flags;\r\n\r\n  const docStatus = toDoOrDone(\r\n    projectNumber,\r\n    orderNumber,\r\n    activityNumber,\r\n    templates,\r\n    documentList\r\n  );\r\n\r\n  const docIsFinish = docStatus !== \"ToDo\";\r\n\r\n  const flags = DateConfirmFlag(flagsNumber);\r\n\r\n  if (role === \"admin\") {\r\n    Object.keys(datePermission).forEach((Permission) => {\r\n      if (Permission === \"Confirm\") {\r\n        if (docIsFinish) {\r\n          datePermission[Permission] = true;\r\n        }\r\n      } else {\r\n        datePermission[Permission] = true;\r\n      }\r\n      datePermission[\"docStatus\"] = docStatus;\r\n    });\r\n  } else {\r\n    const authNumbers = authorizationC(\r\n      orderActivities,\r\n      orderNumber,\r\n      permissions,\r\n      role\r\n    );\r\n\r\n    datePermission[\"docStatus\"] = docStatus;\r\n\r\n    if (authNumbers.includes(activityNumber)) {\r\n      if (docIsFinish && flags.CanConfirm) {\r\n        datePermission.Confirm = true;\r\n      }\r\n\r\n      datePermission.Cancel = flags.CanCancel;\r\n      datePermission.Lock = flags.CanSetConstraint;\r\n      datePermission.unLock = flags.CanDeleteDonstraint;\r\n\r\n      datePermission.planedDateEditablePermission = flags.CanSetConstraint;\r\n      datePermission.planedDateCancelablePermission = flags.CanDeleteDonstraint;\r\n      datePermission.finishedDateEditablePermission = flags.CanConfirm;\r\n      datePermission.finishedDateCancelablePermission = flags.CanCancel;\r\n    }\r\n\r\n    if (\r\n      orderActivities[`${orderNumber}-${activityNumber}`].editable !==\r\n        undefined &&\r\n      orderActivities[`${orderNumber}-${activityNumber}`].editable === false\r\n    ) {\r\n      if (\r\n        orderActivities[`${orderNumber}-${activityNumber}`].confirmedDate ===\r\n        null\r\n      ) {\r\n        datePermission.Confirm = true;\r\n        datePermission.Cancel = false;\r\n      } else {\r\n        datePermission.Confirm = false;\r\n        datePermission.Cancel = true;\r\n      }\r\n    }\r\n\r\n    if (!docIsFinish) {\r\n      datePermission.Confirm = false;\r\n    }\r\n\r\n    const docCNumbers = documentAuthorizationC(\r\n      orderActivities,\r\n      orderNumber,\r\n      permissions,\r\n      role\r\n    );\r\n\r\n    if (docCNumbers.includes(activityNumber)) {\r\n      datePermission.canUploadDoc = true;\r\n    }\r\n\r\n    const docRNumbers = documentAuthorizationR(\r\n      orderActivities,\r\n      orderNumber,\r\n      permissions,\r\n      role\r\n    );\r\n\r\n    if (docRNumbers.includes(activityNumber)) {\r\n      datePermission.canReadDoc = true;\r\n    }\r\n\r\n  }\r\n\r\n  return datePermission;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import{FormLabel,makeStyles,Typography}from\"@material-ui/core\";import InputAdornment from\"@material-ui/core/InputAdornment\";import TextField from\"@material-ui/core/TextField\";import clsx from\"clsx\";import{disableForm}from\"js/util\";import{showNumberText}from\"js/util\";import{useParams}from'react-router-dom';import React from\"react\";var useStyles=makeStyles(function(_ref){var spacing=_ref.spacing;return{lable:{color:\"rgba(0, 0, 0, 0.87)\",fontSize:\" 1rem\"},textField:{margin:spacing(1,0)}};});export var NumberText=function NumberText(props){var classes=useStyles();var maxMin=showNumberText(props.min,props.max);var params=useParams();var description=props.helperText?props.helperText+maxMin:maxMin;var _onBlur=function onBlur(value){if(props.min||props.max){if(value<props.min||value>props.max){alert(\"\".concat(props===null||props===void 0?void 0:props.label,\": \").concat(description));}}};return/*#__PURE__*/React.createElement(TextField,{onBlur:function onBlur(event){return _onBlur(event.target.value);},value:props.value,onChange:function onChange(event){return props.onChange(event,props);},fullWidth:true,type:props.type,disabled:disableForm(params)?disableForm(params):(props===null||props===void 0?void 0:props.prefilledAnswer)===\"%%!LoginUserNo!%%\",label:/*#__PURE__*/React.createElement(FormLabel,{required:props.required},/*#__PURE__*/React.createElement(Typography,{component:\"span\",variant:\"subtitle2\",className:classes.lable},props.label)),id:props.id,className:clsx(classes.margin,classes.textField),InputProps:props.unitFront?{startAdornment:/*#__PURE__*/React.createElement(InputAdornment,null,props.unit)}:{endAdornment:/*#__PURE__*/React.createElement(InputAdornment,null,props.unit)},helperText:description});};// props.helperText","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TemplateForm/NumberText/index.js"],"names":["FormLabel","makeStyles","Typography","InputAdornment","TextField","clsx","disableForm","showNumberText","useParams","React","useStyles","spacing","lable","color","fontSize","textField","margin","NumberText","props","classes","maxMin","min","max","params","description","helperText","onBlur","value","alert","label","event","target","onChange","type","prefilledAnswer","required","id","unitFront","startAdornment","unit","endAdornment"],"mappings":"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","sourcesContent":["import { FormLabel, makeStyles, Typography } from \"@material-ui/core\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport clsx from \"clsx\";\r\nimport { disableForm } from \"js/util\";\r\nimport { showNumberText } from \"js/util\";\r\nimport { useParams } from 'react-router-dom';\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(({ spacing }) => ({\r\n  lable: {\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    fontSize: \" 1rem\",\r\n  },\r\n  textField: {\r\n    margin: spacing(1, 0),\r\n  },\r\n}));\r\n\r\nexport const NumberText = (props) => {\r\n  const classes = useStyles();\r\n  const maxMin = showNumberText(props.min, props.max);\r\n  const params = useParams()\r\n\r\n  const description = props.helperText ? props.helperText + maxMin : maxMin;\r\n\r\n  const onBlur = (value) => {\r\n    if (props.min || props.max) {\r\n      if (value < props.min || value > props.max) {\r\n        alert(`${props?.label}: ${description}`);\r\n      }\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <TextField\r\n      onBlur={(event) => onBlur(event.target.value)}\r\n      value={props.value}\r\n      onChange={(event) => props.onChange(event, props)}\r\n      fullWidth\r\n      type={props.type}\r\n      disabled={disableForm(params) ? disableForm(params): props?.prefilledAnswer=== \"%%!LoginUserNo!%%\"}\r\n      label={\r\n        <FormLabel required={props.required}>\r\n          <Typography\r\n            component=\"span\"\r\n            variant=\"subtitle2\"\r\n            className={classes.lable}\r\n          >\r\n            {props.label}\r\n          </Typography>\r\n        </FormLabel>\r\n      }\r\n      id={props.id}\r\n      className={clsx(classes.margin, classes.textField)}\r\n      InputProps={\r\n        props.unitFront\r\n          ? {\r\n              startAdornment: <InputAdornment>{props.unit}</InputAdornment>,\r\n            }\r\n          : {\r\n              endAdornment: <InputAdornment>{props.unit}</InputAdornment>,\r\n            }\r\n      }\r\n      helperText={description}\r\n    />\r\n  );\r\n};\r\n// props.helperText\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */import assert from\"assert\";import moment from\"moment\";export default function getDefaultValue(type,targetField){switch(type){case\"number\":return 0;case\"string\":return\"\";case\"extBool\":return\"\";case\"bool\":return false;case\"date\":return moment();case\"optionId\":var options=targetField.settings.options;assert(options.length>0);return options[0].value;default:throw new Error(\"Unknown type: \"+type);}}","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/utils/getDefaultValue.js"],"names":["assert","moment","getDefaultValue","type","targetField","options","settings","length","value","Error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,MAAOA,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CAEA,cAAe,SAASC,CAAAA,eAAT,CAAyBC,IAAzB,CAA+BC,WAA/B,CAA4C,CACzD,OAAQD,IAAR,EACE,IAAK,QAAL,CACE,MAAO,EAAP,CACF,IAAK,QAAL,CACE,MAAO,EAAP,CACF,IAAK,SAAL,CACE,MAAO,EAAP,CACF,IAAK,MAAL,CACE,MAAO,MAAP,CACF,IAAK,MAAL,CACE,MAAOF,CAAAA,MAAM,EAAb,CACF,IAAK,UAAL,IACUI,CAAAA,OADV,CACsBD,WAAW,CAACE,QADlC,CACUD,OADV,CAEEL,MAAM,CAACK,OAAO,CAACE,MAAR,CAAiB,CAAlB,CAAN,CACA,MAAOF,CAAAA,OAAO,CAAC,CAAD,CAAP,CAAWG,KAAlB,CACF,QACE,KAAM,IAAIC,CAAAA,KAAJ,CAAU,iBAAmBN,IAA7B,CAAN,CAhBJ,CAkBD","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport assert from \"assert\";\r\nimport moment from \"moment\";\r\n\r\nexport default function getDefaultValue(type, targetField) {\r\n  switch (type) {\r\n    case \"number\":\r\n      return 0;\r\n    case \"string\":\r\n      return \"\";\r\n    case \"extBool\":\r\n      return \"\";\r\n    case \"bool\":\r\n      return false;\r\n    case \"date\":\r\n      return moment();\r\n    case \"optionId\":\r\n      const { options } = targetField.settings;\r\n      assert(options.length > 0);\r\n      return options[0].value;\r\n    default:\r\n      throw new Error(\"Unknown type: \" + type);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
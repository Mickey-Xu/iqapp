{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\nimport FieldTypes from \"./constants/FieldTypes\"; // import assert from \"assert\";\n\nimport SingleLineIO from \"./SingleLineIO\";\nimport ParagraphTextIO from \"./ParagraphTextIO\";\nimport NumberIO from \"./NumberIO\";\nimport SignatureIO from \"./SignatureIO\";\nimport StaticTextIO from \"./StaticTextIO\";\nimport YesNoIO from \"./YesNoIO\";\nimport SliderIO from \"./SliderIO\";\nimport CheckboxesIO from \"./CheckboxesIO\";\nimport NaYesNoIO from \"./NaYesNoIO\";\nimport SectionIO from \"./SectionIO\";\nimport PageIO from \"./PageIO\";\nimport DateIO from \"./DateIO\";\nimport CalculationIO from \"./CalculationIO\";\nimport PhotoIO from \"./PhotoIO\";\nimport TableIO from \"./TableIO\";\nimport genericMCIOFactory from \"./genericMCIOFactory\";\n\nfunction register(type, io) {\n  // assert(type);\n  // assert(FieldTypes[type]);\n  // assert(io);\n  // assert(!FieldTypes[type].io);\n  FieldTypes[type].io = io;\n}\n\nfunction checkFieldTypes() {\n  const uninitializedTypes = Object.keys(FieldTypes).filter(type => !FieldTypes[type].io).join(\", \");\n\n  if (uninitializedTypes !== \"\") {\n    throw new Error(\"Uninitialized FieldTypes io: \" + uninitializedTypes);\n  }\n}\n\nexport default function setup() {\n  register(\"singleLine\", SingleLineIO);\n  register(\"paragraph\", ParagraphTextIO);\n  register(\"number\", NumberIO);\n  register(\"slider\", SliderIO);\n  register(\"date\", DateIO);\n  register(\"multipleChoice\", genericMCIOFactory(\"multipleChoice\", \"radio_group\"));\n  register(\"dropdown\", genericMCIOFactory(\"dropdown\", \"dropdown\"));\n  register(\"yesNo\", YesNoIO);\n  register(\"naYesNo\", NaYesNoIO);\n  register(\"checkboxes\", CheckboxesIO);\n  register(\"signature\", SignatureIO);\n  register(\"photo\", PhotoIO);\n  register(\"calculation\", CalculationIO);\n  register(\"staticText\", StaticTextIO);\n  register(\"sectionBreak\", SectionIO);\n  register(\"pageBreak\", PageIO);\n  register(\"table\", TableIO);\n  checkFieldTypes();\n}","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/setup.js"],"names":["FieldTypes","SingleLineIO","ParagraphTextIO","NumberIO","SignatureIO","StaticTextIO","YesNoIO","SliderIO","CheckboxesIO","NaYesNoIO","SectionIO","PageIO","DateIO","CalculationIO","PhotoIO","TableIO","genericMCIOFactory","register","type","io","checkFieldTypes","uninitializedTypes","Object","keys","filter","join","Error","setup"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,UAAP,MAAuB,wBAAvB,C,CACA;;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,EAAxB,EAA4B;AAC1B;AACA;AACA;AACA;AAEAnB,EAAAA,UAAU,CAACkB,IAAD,CAAV,CAAiBC,EAAjB,GAAsBA,EAAtB;AACD;;AAED,SAASC,eAAT,GAA2B;AACzB,QAAMC,kBAAkB,GAAGC,MAAM,CAACC,IAAP,CAAYvB,UAAZ,EACxBwB,MADwB,CAChBN,IAAD,IAAU,CAAClB,UAAU,CAACkB,IAAD,CAAV,CAAiBC,EADX,EAExBM,IAFwB,CAEnB,IAFmB,CAA3B;;AAIA,MAAIJ,kBAAkB,KAAK,EAA3B,EAA+B;AAC7B,UAAM,IAAIK,KAAJ,CAAU,kCAAkCL,kBAA5C,CAAN;AACD;AACF;;AAED,eAAe,SAASM,KAAT,GAAiB;AAC9BV,EAAAA,QAAQ,CAAC,YAAD,EAAehB,YAAf,CAAR;AACAgB,EAAAA,QAAQ,CAAC,WAAD,EAAcf,eAAd,CAAR;AACAe,EAAAA,QAAQ,CAAC,QAAD,EAAWd,QAAX,CAAR;AACAc,EAAAA,QAAQ,CAAC,QAAD,EAAWV,QAAX,CAAR;AACAU,EAAAA,QAAQ,CAAC,MAAD,EAASL,MAAT,CAAR;AACAK,EAAAA,QAAQ,CACN,gBADM,EAEND,kBAAkB,CAAC,gBAAD,EAAmB,aAAnB,CAFZ,CAAR;AAIAC,EAAAA,QAAQ,CAAC,UAAD,EAAaD,kBAAkB,CAAC,UAAD,EAAa,UAAb,CAA/B,CAAR;AACAC,EAAAA,QAAQ,CAAC,OAAD,EAAUX,OAAV,CAAR;AACAW,EAAAA,QAAQ,CAAC,SAAD,EAAYR,SAAZ,CAAR;AACAQ,EAAAA,QAAQ,CAAC,YAAD,EAAeT,YAAf,CAAR;AACAS,EAAAA,QAAQ,CAAC,WAAD,EAAcb,WAAd,CAAR;AACAa,EAAAA,QAAQ,CAAC,OAAD,EAAUH,OAAV,CAAR;AACAG,EAAAA,QAAQ,CAAC,aAAD,EAAgBJ,aAAhB,CAAR;AACAI,EAAAA,QAAQ,CAAC,YAAD,EAAeZ,YAAf,CAAR;AACAY,EAAAA,QAAQ,CAAC,cAAD,EAAiBP,SAAjB,CAAR;AACAO,EAAAA,QAAQ,CAAC,WAAD,EAAcN,MAAd,CAAR;AACAM,EAAAA,QAAQ,CAAC,OAAD,EAAUF,OAAV,CAAR;AAEAK,EAAAA,eAAe;AAChB","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport FieldTypes from \"./constants/FieldTypes\";\r\n// import assert from \"assert\";\r\n\r\nimport SingleLineIO from \"./SingleLineIO\";\r\nimport ParagraphTextIO from \"./ParagraphTextIO\";\r\nimport NumberIO from \"./NumberIO\";\r\nimport SignatureIO from \"./SignatureIO\";\r\nimport StaticTextIO from \"./StaticTextIO\";\r\nimport YesNoIO from \"./YesNoIO\";\r\nimport SliderIO from \"./SliderIO\";\r\nimport CheckboxesIO from \"./CheckboxesIO\";\r\nimport NaYesNoIO from \"./NaYesNoIO\";\r\nimport SectionIO from \"./SectionIO\";\r\nimport PageIO from \"./PageIO\";\r\nimport DateIO from \"./DateIO\";\r\nimport CalculationIO from \"./CalculationIO\";\r\nimport PhotoIO from \"./PhotoIO\";\r\nimport TableIO from \"./TableIO\";\r\nimport genericMCIOFactory from \"./genericMCIOFactory\";\r\n\r\nfunction register(type, io) {\r\n  // assert(type);\r\n  // assert(FieldTypes[type]);\r\n  // assert(io);\r\n  // assert(!FieldTypes[type].io);\r\n\r\n  FieldTypes[type].io = io;\r\n}\r\n\r\nfunction checkFieldTypes() {\r\n  const uninitializedTypes = Object.keys(FieldTypes)\r\n    .filter((type) => !FieldTypes[type].io)\r\n    .join(\", \");\r\n\r\n  if (uninitializedTypes !== \"\") {\r\n    throw new Error(\"Uninitialized FieldTypes io: \" + uninitializedTypes);\r\n  }\r\n}\r\n\r\nexport default function setup() {\r\n  register(\"singleLine\", SingleLineIO);\r\n  register(\"paragraph\", ParagraphTextIO);\r\n  register(\"number\", NumberIO);\r\n  register(\"slider\", SliderIO);\r\n  register(\"date\", DateIO);\r\n  register(\r\n    \"multipleChoice\",\r\n    genericMCIOFactory(\"multipleChoice\", \"radio_group\")\r\n  );\r\n  register(\"dropdown\", genericMCIOFactory(\"dropdown\", \"dropdown\"));\r\n  register(\"yesNo\", YesNoIO);\r\n  register(\"naYesNo\", NaYesNoIO);\r\n  register(\"checkboxes\", CheckboxesIO);\r\n  register(\"signature\", SignatureIO);\r\n  register(\"photo\", PhotoIO);\r\n  register(\"calculation\", CalculationIO);\r\n  register(\"staticText\", StaticTextIO);\r\n  register(\"sectionBreak\", SectionIO);\r\n  register(\"pageBreak\", PageIO);\r\n  register(\"table\", TableIO);\r\n\r\n  checkFieldTypes();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
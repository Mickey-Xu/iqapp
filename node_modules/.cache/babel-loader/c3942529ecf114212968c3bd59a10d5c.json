{"ast":null,"code":"import _defineProperty from\"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */import{appendChild,appendQuestionBlock,hasChildNode,getChildNode,getChildNodes,getRequiredAttr,getAttrWithDefault,readQuestionBlock}from\"./utils/xml\";import{FREE_TEXT_VALUE}from\"./utils/options\";import{DEFAULT_LANG}from\"./constants/global\";import uuid from\"node-uuid\";export default{serialize:function serialize(doc,findField,parentNode,field){var _field$settings=field.settings,options=_field$settings.options,includeOther=_field$settings.includeOther;var questionBlock=appendQuestionBlock(doc,findField,parentNode,\"string[]\",field);var multiGroup=appendChild(doc,questionBlock,\"multi_group\");options.forEach(function(_ref){var id=_ref.id,nameI18n=_ref.nameI18n,value=_ref.value;var optionNode=appendChild(doc,multiGroup,\"option\",null,{value:value,selected:field.settings.value.includes(value)});Object.keys(nameI18n).forEach(function(lang){if(typeof nameI18n[lang]!==\"undefined\"){appendChild(doc,optionNode,\"text\",nameI18n[lang],{lang:lang});}});});if(includeOther){var optionNode=appendChild(doc,multiGroup,\"option\",null,{value:FREE_TEXT_VALUE,selected:false});appendChild(doc,optionNode,\"textfield\");}},canDeserialize:function canDeserialize(node){return node.nodeName===\"question_block\"&&hasChildNode(node,\"multi_group\");},deserialize:function deserialize(node){var field=readQuestionBlock(node,\"checkboxes\",\"string[]\");// eslint-disable-line prefer-const\nvar multiGroupNode=getChildNode(node,\"multi_group\");var optionNodes=getChildNodes(multiGroupNode,\"option\");var selectedValues=getAttrWithDefault(node,\"value\",\"\");field.settings.value=selectedValues===\"\"?[]:selectedValues.split(\",\");var options=[];// eslint-disable-line prefer-const\nvar selectedIds=[];// eslint-disable-line prefer-const\nfield.settings.options=options;field.settings.selectedIds=selectedIds;field.settings.includeOther=false;optionNodes.forEach(function(optionNode){if(hasChildNode(optionNode,\"textfield\")){var otherTextFieldNode=getChildNode(optionNode,\"textfield\");field.settings.includeOther=true;field.settings.otherOptionText=otherTextFieldNode.textContent;field.settings.otherOptionSelected=getAttrWithDefault(optionNode,\"selected\",\"false\")===\"true\";}else{var optionId=uuid.v4();var nameI18n=getChildNodes(optionNode,\"text\").reduce(function(acc,textNode){return Object.assign({},acc,_defineProperty({},getAttrWithDefault(textNode,\"lang\",DEFAULT_LANG),textNode.textContent));},{});options.push({id:optionId,nameI18n:nameI18n,value:getRequiredAttr(optionNode,\"value\")});if(getAttrWithDefault(optionNode,\"selected\",\"false\")===\"true\"){selectedIds.push(optionId);}}});return field;}};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/CheckboxesIO.js"],"names":["appendChild","appendQuestionBlock","hasChildNode","getChildNode","getChildNodes","getRequiredAttr","getAttrWithDefault","readQuestionBlock","FREE_TEXT_VALUE","DEFAULT_LANG","uuid","serialize","doc","findField","parentNode","field","settings","options","includeOther","questionBlock","multiGroup","forEach","id","nameI18n","value","optionNode","selected","includes","Object","keys","lang","canDeserialize","node","nodeName","deserialize","multiGroupNode","optionNodes","selectedValues","split","selectedIds","otherTextFieldNode","otherOptionText","textContent","otherOptionSelected","optionId","v4","reduce","acc","textNode","assign","push"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport {\r\n  appendChild,\r\n  appendQuestionBlock,\r\n  hasChildNode,\r\n  getChildNode,\r\n  getChildNodes,\r\n  getRequiredAttr,\r\n  getAttrWithDefault,\r\n  readQuestionBlock,\r\n} from \"./utils/xml\";\r\nimport { FREE_TEXT_VALUE } from \"./utils/options\";\r\nimport { DEFAULT_LANG } from \"./constants/global\";\r\nimport uuid from \"node-uuid\";\r\n\r\nexport default {\r\n  serialize(doc, findField, parentNode, field) {\r\n    const { options, includeOther } = field.settings;\r\n\r\n    const questionBlock = appendQuestionBlock(\r\n      doc,\r\n      findField,\r\n      parentNode,\r\n      \"string[]\",\r\n      field\r\n    );\r\n\r\n    const multiGroup = appendChild(doc, questionBlock, \"multi_group\");\r\n\r\n    options.forEach(({ id, nameI18n, value }) => {\r\n      const optionNode = appendChild(doc, multiGroup, \"option\", null, {\r\n        value: value,\r\n        selected: field.settings.value.includes(value),\r\n      });\r\n\r\n      Object.keys(nameI18n).forEach((lang) => {\r\n        if (typeof nameI18n[lang] !== \"undefined\") {\r\n          appendChild(doc, optionNode, \"text\", nameI18n[lang], { lang });\r\n        }\r\n      });\r\n    });\r\n\r\n    if (includeOther) {\r\n      const optionNode = appendChild(doc, multiGroup, \"option\", null, {\r\n        value: FREE_TEXT_VALUE,\r\n        selected: false,\r\n      });\r\n      appendChild(doc, optionNode, \"textfield\");\r\n    }\r\n  },\r\n\r\n  canDeserialize(node) {\r\n    return (\r\n      node.nodeName === \"question_block\" && hasChildNode(node, \"multi_group\")\r\n    );\r\n  },\r\n\r\n  deserialize(node) {\r\n    let field = readQuestionBlock(node, \"checkboxes\", \"string[]\"); // eslint-disable-line prefer-const\r\n\r\n    const multiGroupNode = getChildNode(node, \"multi_group\");\r\n    const optionNodes = getChildNodes(multiGroupNode, \"option\");\r\n\r\n    let selectedValues = getAttrWithDefault(node, \"value\", \"\");\r\n    field.settings.value =\r\n      selectedValues === \"\" ? [] : selectedValues.split(\",\");\r\n\r\n    let options = []; // eslint-disable-line prefer-const\r\n    let selectedIds = []; // eslint-disable-line prefer-const\r\n    field.settings.options = options;\r\n    field.settings.selectedIds = selectedIds;\r\n\r\n    field.settings.includeOther = false;\r\n\r\n    optionNodes.forEach((optionNode) => {\r\n      if (hasChildNode(optionNode, \"textfield\")) {\r\n        const otherTextFieldNode = getChildNode(optionNode, \"textfield\");\r\n        field.settings.includeOther = true;\r\n        field.settings.otherOptionText = otherTextFieldNode.textContent;\r\n        field.settings.otherOptionSelected =\r\n          getAttrWithDefault(optionNode, \"selected\", \"false\") === \"true\";\r\n      } else {\r\n        const optionId = uuid.v4();\r\n\r\n        const nameI18n = getChildNodes(optionNode, \"text\").reduce(\r\n          (acc, textNode) => {\r\n            return Object.assign({}, acc, {\r\n              [getAttrWithDefault(\r\n                textNode,\r\n                \"lang\",\r\n                DEFAULT_LANG\r\n              )]: textNode.textContent,\r\n            });\r\n          },\r\n          {}\r\n        );\r\n\r\n        options.push({\r\n          id: optionId,\r\n          nameI18n: nameI18n,\r\n          value: getRequiredAttr(optionNode, \"value\"),\r\n        });\r\n\r\n        if (getAttrWithDefault(optionNode, \"selected\", \"false\") === \"true\") {\r\n          selectedIds.push(optionId);\r\n        }\r\n      }\r\n    });\r\n\r\n    return field;\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
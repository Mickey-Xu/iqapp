{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\n// IMPORTANT: this has to be in sync with expr.pegjs (the identifier-rule) and vis_rules.pegjs!!!!\nexport default function isValidIdentifier(identifier) {\n  return identifier.match(/^[a-z_][a-z0-9_.]*$/i);\n}\nexport function removeXMLInvalidChars(string, removeDiscouragedChars = true) {\n  // remove everything forbidden by XML 1.0 specifications, plus the unicode replacement character U+FFFD\n\n  /*eslint no-control-regex: \"off\"*/\n  var regex = /((?:[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFD\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))/g;\n  string = string.replace(regex, \"\");\n\n  if (removeDiscouragedChars) {\n    // remove everything not suggested by XML 1.0 specifications\n    regex = new RegExp(\"([\\\\x7F-\\\\x84]|[\\\\x86-\\\\x9F]|[\\\\uFDD0-\\\\uFDEF]|(?:\\\\uD83F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD87F[\\\\uDF\" + \"FE\\\\uDFFF])|(?:\\\\uD8BF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD8FF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD93F[\\\\uDFFE\\\\uD\" + \"FFF])|(?:\\\\uD97F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD9BF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD9FF[\\\\uDFFE\\\\uDFFF])\" + \"|(?:\\\\uDA3F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDA7F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDABF[\\\\uDFFE\\\\uDFFF])|(?:\\\\\" + \"uDAFF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDB3F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDB7F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDBBF\" + \"[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDBFF[\\\\uDFFE\\\\uDFFF])(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uD7FF\\\\\" + \"uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|\" + \"(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF]))\", \"g\");\n    string = string.replace(regex, \"\");\n  }\n\n  return string;\n}","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/expr/isValidIdentifier.js"],"names":["isValidIdentifier","identifier","match","removeXMLInvalidChars","string","removeDiscouragedChars","regex","replace","RegExp"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,eAAe,SAASA,iBAAT,CAA2BC,UAA3B,EAAuC;AACpD,SAAOA,UAAU,CAACC,KAAX,CAAiB,sBAAjB,CAAP;AACD;AAED,OAAO,SAASC,qBAAT,CAA+BC,MAA/B,EAAuCC,sBAAsB,GAAG,IAAhE,EAAsE;AAC3E;;AAEA;AACA,MAAIC,KAAK,GAAG,4HAAZ;AACAF,EAAAA,MAAM,GAAGA,MAAM,CAACG,OAAP,CAAeD,KAAf,EAAsB,EAAtB,CAAT;;AAEA,MAAID,sBAAJ,EAA4B;AAC1B;AACAC,IAAAA,KAAK,GAAG,IAAIE,MAAJ,CACN,gGACE,4FADF,GAEE,2FAFF,GAGE,4FAHF,GAIE,2FAJF,GAKE,gGALF,GAME,2FANF,GAOE,6CARI,EASN,GATM,CAAR;AAWAJ,IAAAA,MAAM,GAAGA,MAAM,CAACG,OAAP,CAAeD,KAAf,EAAsB,EAAtB,CAAT;AACD;;AAED,SAAOF,MAAP;AACD","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\n// IMPORTANT: this has to be in sync with expr.pegjs (the identifier-rule) and vis_rules.pegjs!!!!\r\nexport default function isValidIdentifier(identifier) {\r\n  return identifier.match(/^[a-z_][a-z0-9_.]*$/i);\r\n}\r\n\r\nexport function removeXMLInvalidChars(string, removeDiscouragedChars = true) {\r\n  // remove everything forbidden by XML 1.0 specifications, plus the unicode replacement character U+FFFD\r\n\r\n  /*eslint no-control-regex: \"off\"*/\r\n  var regex = /((?:[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFD\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]))/g;\r\n  string = string.replace(regex, \"\");\r\n\r\n  if (removeDiscouragedChars) {\r\n    // remove everything not suggested by XML 1.0 specifications\r\n    regex = new RegExp(\r\n      \"([\\\\x7F-\\\\x84]|[\\\\x86-\\\\x9F]|[\\\\uFDD0-\\\\uFDEF]|(?:\\\\uD83F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD87F[\\\\uDF\" +\r\n        \"FE\\\\uDFFF])|(?:\\\\uD8BF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD8FF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD93F[\\\\uDFFE\\\\uD\" +\r\n        \"FFF])|(?:\\\\uD97F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD9BF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uD9FF[\\\\uDFFE\\\\uDFFF])\" +\r\n        \"|(?:\\\\uDA3F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDA7F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDABF[\\\\uDFFE\\\\uDFFF])|(?:\\\\\" +\r\n        \"uDAFF[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDB3F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDB7F[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDBBF\" +\r\n        \"[\\\\uDFFE\\\\uDFFF])|(?:\\\\uDBFF[\\\\uDFFE\\\\uDFFF])(?:[\\\\0-\\\\t\\\\x0B\\\\f\\\\x0E-\\\\u2027\\\\u202A-\\\\uD7FF\\\\\" +\r\n        \"uE000-\\\\uFFFF]|[\\\\uD800-\\\\uDBFF][\\\\uDC00-\\\\uDFFF]|[\\\\uD800-\\\\uDBFF](?![\\\\uDC00-\\\\uDFFF])|\" +\r\n        \"(?:[^\\\\uD800-\\\\uDBFF]|^)[\\\\uDC00-\\\\uDFFF]))\",\r\n      \"g\"\r\n    );\r\n    string = string.replace(regex, \"\");\r\n  }\r\n\r\n  return string;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\Camera\\\\index.js\";\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst CameraCapture = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [image, setImage] = useState(null);\n  useEffect(() => {\n    const getVideo = async () => {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n        videoRef.current.play();\n      }\n    };\n\n    getVideo(); // Cleanup function to stop video stream\n\n    return () => {\n      if (videoRef.current) {\n        const stream = videoRef.current.srcObject;\n\n        if (stream) {\n          const tracks = stream.getTracks();\n          tracks.forEach(track => track.stop());\n        }\n      }\n    };\n  }, []);\n\n  const capture = () => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current; // 设置canvas的宽高\n\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight; // 将视频帧绘制到canvas上\n\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, canvas.width, canvas.height); // 自动截取指定区域（例如：中心区域）\n\n    const startX = canvas.width / 4;\n    const startY = canvas.height / 4;\n    const width = canvas.width / 2;\n    const height = canvas.height / 2; // 从canvas中获取指定区域的图像\n\n    const imageData = ctx.getImageData(startX, startY, width, height);\n    ctx.putImageData(imageData, 0, 0); // 将canvas转换为图片URL并保存\n\n    const imageUrl = canvas.toDataURL('image/png');\n    setImage(imageUrl);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Camera Capture\"), /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    width: \"600\",\n    height: \"400\",\n    autoPlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: capture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Capture\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), image && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Captured Image:\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: \"Captured\",\n    width: \"300\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default CameraCapture;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/Camera/index.js"],"names":["React","useEffect","useRef","useState","CameraCapture","videoRef","canvasRef","image","setImage","getVideo","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","play","tracks","getTracks","forEach","track","stop","capture","canvas","width","videoWidth","height","videoHeight","ctx","getContext","drawImage","startX","startY","imageData","getImageData","putImageData","imageUrl","toDataURL","display"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst CameraCapture = () => {\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const [image, setImage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getVideo = async () => {\r\n            const stream = await navigator.mediaDevices.getUserMedia({\r\n                video: true,\r\n            });\r\n            if (videoRef.current) {\r\n                videoRef.current.srcObject = stream;\r\n                videoRef.current.play();\r\n            }\r\n        };\r\n        getVideo();\r\n\r\n        // Cleanup function to stop video stream\r\n        return () => {\r\n            if (videoRef.current) {\r\n                const stream = videoRef.current.srcObject;\r\n                if (stream) {\r\n                    const tracks = stream.getTracks();\r\n                    tracks.forEach(track => track.stop());\r\n                }\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const capture = () => {\r\n        const canvas = canvasRef.current;\r\n        const video = videoRef.current;\r\n\r\n        // 设置canvas的宽高\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n\r\n        // 将视频帧绘制到canvas上\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n        // 自动截取指定区域（例如：中心区域）\r\n        const startX = canvas.width / 4;\r\n        const startY = canvas.height / 4;\r\n        const width = canvas.width / 2;\r\n        const height = canvas.height / 2;\r\n\r\n        // 从canvas中获取指定区域的图像\r\n        const imageData = ctx.getImageData(startX, startY, width, height);\r\n        ctx.putImageData(imageData, 0, 0);\r\n\r\n        // 将canvas转换为图片URL并保存\r\n        const imageUrl = canvas.toDataURL('image/png');\r\n        setImage(imageUrl);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Camera Capture</h1>\r\n            <video ref={videoRef} width=\"600\" height=\"400\" autoPlay></video>\r\n            <button onClick={capture}>Capture</button>\r\n            <canvas ref={canvasRef} style={{ display: 'none' }}></canvas>\r\n            {image && (\r\n                <div>\r\n                    <h2>Captured Image:</h2>\r\n                    <img src={image} alt=\"Captured\" width=\"300\" />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CameraCapture;\r\n"]},"metadata":{},"sourceType":"module"}
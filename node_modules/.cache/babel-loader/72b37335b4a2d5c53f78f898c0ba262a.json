{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TaskItemCard\\\\index.js\";\nimport { Box, Button, Card, CardActions, CardContent, Grid, Typography, withStyles } from \"@material-ui/core\";\nimport { CheckCircleOutlineOutlined, DescriptionOutlined } from \"@material-ui/icons\";\nimport HourglassEmptySharpIcon from '@material-ui/icons/HourglassEmptySharp';\nimport { useHistory } from \"react-router-dom\";\nimport { LocalizeContext } from \"i18n\";\nimport React from \"react\";\nconst TaskListCard = withStyles(({\n  spacing\n}) => {\n  return {\n    button: {\n      borderRadius: spacing(2.5),\n      lineHeight: \"unset\",\n      fontSize: \"0.5rem\",\n      padding: \"2px 14px\"\n    },\n    card: {\n      marginTop: spacing(2)\n    },\n    cardActions: {\n      marginLeft: \"0px\"\n    },\n    contentColor: {\n      color: \"#999999\",\n      wordBreak: \"break-word\"\n    },\n    fontColor: {\n      color: \"#e54141\" // color: \"rgba(0, 0, 0, 0.54)\",\n\n    },\n    iconColor: {\n      color: \"rgba(0, 0, 0, 0.54)\"\n    }\n  };\n})(({\n  classes,\n  data,\n  submit\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  const history = useHistory();\n  const document = data.documentStatus === \"Done\" ? i18n.ISNTAPP_UPLOADED : data.documentStatus === \"ToDo\" ? i18n.ISNTAPP_JOBLIST_DOC_TODO : i18n.ISNTAPP_WITHOUT_TEMPLATES;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    onClick: () => history.push(`/order/${data.orderNo}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    style: {\n      display: \"inline-flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, i18n.JOBLIST_ORDER, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, data.orderNo))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    style: {\n      display: \"inline-flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, i18n.PROJECTLIST_PROJECT, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, data.projectName))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      display: \"flex\",\n      justifyContent: 'space-between'\n    },\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, i18n.ISNTAPP_PLAN_START_DATE, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, data.planStartDate)), /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, i18n.ISNTAPP_ACTUAL_START_DATE, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, data.actualStartDate))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      display: \"flex\",\n      justifyContent: 'space-between'\n    },\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, i18n.ISNTAPP_PLAN_END_DATE, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, data.planEndDate)), /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, i18n.ISNTAPP_ACTUAL_END_DATE, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, data.actualEndDate))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      display: \"flex\",\n      justifyContent: 'space-between'\n    },\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }), data.status === 'closed' && /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 19\n    }\n  }, i18n.ISNTAPP_ACTUAL_CLOSED_DATE, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    component: \"span\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, data.actualCloseDate))))), /*#__PURE__*/React.createElement(CardActions, {\n    style: {\n      backgroundColor: \"#f5f5f5\",\n      padding: \"2px\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    disabled: data.actualStartDate,\n    style: {\n      display: data.status === \"awaitComplate\" || data.status === \"awaitStart\" ? \"inline-grid\" : \"none\"\n    },\n    onClick: () => {\n      submit(\"start\", data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HourglassEmptySharpIcon, {\n    color: data.actualStartDate ? \"disabled\" : 'action',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, i18n.ISNTAPP_START)), /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    style: {\n      display: \"inline-grid\",\n      textAlign: \"center\"\n    },\n    onClick: () => {\n      history.push(`/documents/${data.activityNo}/${data.orderNo}/${data === null || data === void 0 ? void 0 : data.productFamily}/listCard`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DescriptionOutlined, {\n    style: {\n      margin: \"auto\"\n    },\n    classes: {\n      root: classes.iconColor\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, document)), /*#__PURE__*/React.createElement(Button, {\n    disabled: data.status === \"awaitComplate\" ? data.actualStartDate && !data.actualEndDate ? false : true : true,\n    size: \"small\",\n    style: {\n      display: data.status === \"closed\" ? \"none\" : \"inline-grid\"\n    },\n    onClick: () => {\n      submit(data.status === \"awaitComplate\" ? \"finish\" : \"close\", data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircleOutlineOutlined, {\n    color: !data.actualStartDate && data.actualEndDate ? 'action' : 'disabled',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, data.status === \"awaitComplate\" || data.status === \"awaitStart\" ? i18n.ISNTAPP_COMPLETE : i18n.ISNTAPP_CLOSE))));\n});\nexport default TaskListCard;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TaskItemCard/index.js"],"names":["Box","Button","Card","CardActions","CardContent","Grid","Typography","withStyles","CheckCircleOutlineOutlined","DescriptionOutlined","HourglassEmptySharpIcon","useHistory","LocalizeContext","React","TaskListCard","spacing","button","borderRadius","lineHeight","fontSize","padding","card","marginTop","cardActions","marginLeft","contentColor","color","wordBreak","fontColor","iconColor","classes","data","submit","i18n","useContext","history","document","documentStatus","ISNTAPP_UPLOADED","ISNTAPP_JOBLIST_DOC_TODO","ISNTAPP_WITHOUT_TEMPLATES","push","orderNo","display","marginRight","JOBLIST_ORDER","PROJECTLIST_PROJECT","projectName","justifyContent","ISNTAPP_PLAN_START_DATE","planStartDate","ISNTAPP_ACTUAL_START_DATE","actualStartDate","ISNTAPP_PLAN_END_DATE","planEndDate","ISNTAPP_ACTUAL_END_DATE","actualEndDate","status","ISNTAPP_ACTUAL_CLOSED_DATE","actualCloseDate","backgroundColor","ISNTAPP_START","textAlign","activityNo","productFamily","margin","root","ISNTAPP_COMPLETE","ISNTAPP_CLOSE"],"mappings":"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","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  CheckCircleOutlineOutlined,\r\n  DescriptionOutlined\r\n} from \"@material-ui/icons\";\r\nimport HourglassEmptySharpIcon from '@material-ui/icons/HourglassEmptySharp';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport React from \"react\";\r\n\r\nconst TaskListCard = withStyles(({ spacing }) => {\r\n  return {\r\n    button: {\r\n      borderRadius: spacing(2.5),\r\n      lineHeight: \"unset\",\r\n      fontSize: \"0.5rem\",\r\n      padding: \"2px 14px\",\r\n    },\r\n    card: {\r\n      marginTop: spacing(2),\r\n    },\r\n    cardActions: {\r\n      marginLeft: \"0px\",\r\n    },\r\n    contentColor: {\r\n      color: \"#999999\",\r\n      wordBreak: \"break-word\",\r\n    },\r\n    fontColor: {\r\n      color: \"#e54141\",\r\n      // color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    iconColor: {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n  };\r\n})(\r\n  ({\r\n    classes,\r\n    data,\r\n    submit,\r\n  }) => {\r\n    const i18n = React.useContext(LocalizeContext);\r\n    const history = useHistory();\r\n\r\n    const document = data.documentStatus === \"Done\"\r\n      ? i18n.ISNTAPP_UPLOADED\r\n      : data.documentStatus === \"ToDo\"\r\n        ? i18n.ISNTAPP_JOBLIST_DOC_TODO\r\n        : i18n.ISNTAPP_WITHOUT_TEMPLATES;\r\n\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardContent onClick={() => history.push(`/order/${data.orderNo}`)}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Box mt={1} style={{ display: \"inline-flex\" }}>\r\n                <Typography variant=\"body2\" style={{ marginRight: \"4px\" }}>\r\n                  {i18n.JOBLIST_ORDER}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                >\r\n                  {data.orderNo}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box mt={1} style={{ display: \"inline-flex\" }}>\r\n                <Typography variant=\"body2\" style={{ marginRight: \"4px\" }}>\r\n                  {i18n.PROJECTLIST_PROJECT}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                >\r\n                  {data.projectName}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item style={{ display: \"flex\", justifyContent: 'space-between' }} xs={12}>\r\n              <Box mt={1}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {i18n.ISNTAPP_PLAN_START_DATE}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {data.planStartDate}\r\n                </Typography>\r\n              </Box>\r\n              <Box mt={1}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {i18n.ISNTAPP_ACTUAL_START_DATE}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n\r\n                  {data.actualStartDate}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item style={{ display: \"flex\", justifyContent: 'space-between' }} xs={12}>\r\n              <Box mt={1}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {i18n.ISNTAPP_PLAN_END_DATE}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {data.planEndDate}\r\n                </Typography>\r\n              </Box>\r\n              <Box mt={1}>\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {i18n.ISNTAPP_ACTUAL_END_DATE}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  component=\"span\"\r\n                  style={{ marginRight: \"4px\" }}\r\n                >\r\n                  {data.actualEndDate}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item style={{ display: \"flex\", justifyContent: 'space-between' }} xs={12}>\r\n              <Box mt={1}>\r\n              </Box>\r\n\r\n              {data.status === 'closed' &&\r\n                <Box mt={1}>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    component=\"span\"\r\n                    style={{ marginRight: \"4px\" }}\r\n                  >\r\n                    {i18n.ISNTAPP_ACTUAL_CLOSED_DATE}:\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"caption\"\r\n                    component=\"span\"\r\n                    style={{ marginRight: \"4px\" }}\r\n                  >\r\n                    {data.actualCloseDate}\r\n                  </Typography>\r\n                </Box>\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions\r\n          style={{\r\n            backgroundColor: \"#f5f5f5\",\r\n            padding: \"2px\",\r\n            justifyContent: \"space-around\"\r\n          }}\r\n        >\r\n          <Button\r\n            size=\"small\"\r\n            disabled={data.actualStartDate}\r\n            style={{\r\n              display:\r\n                data.status === \"awaitComplate\" || data.status === \"awaitStart\" ? \"inline-grid\" : \"none\",\r\n            }}\r\n            onClick={() => {\r\n              submit(\"start\", data);\r\n            }}\r\n          >\r\n            <HourglassEmptySharpIcon\r\n              color={data.actualStartDate ? \"disabled\" : 'action'}\r\n            />\r\n            <Typography variant=\"caption\">{i18n.ISNTAPP_START}</Typography>\r\n          </Button>\r\n\r\n          <Button\r\n            size=\"small\"\r\n            style={{\r\n              display: \"inline-grid\",\r\n              textAlign: \"center\"\r\n            }}\r\n            onClick={() => {\r\n              history.push(\r\n                `/documents/${data.activityNo}/${data.orderNo}/${data?.productFamily}/listCard`\r\n              );\r\n            }}\r\n          >\r\n            <DescriptionOutlined style={{ margin: \"auto\" }} classes={{ root: classes.iconColor }} />\r\n            <Typography variant=\"caption\">{document}</Typography>\r\n          </Button>\r\n          <Button\r\n            disabled={\r\n              data.status === \"awaitComplate\" ? (data.actualStartDate && !data.actualEndDate ? false : true):true\r\n            }\r\n            size=\"small\"\r\n            style={{\r\n              display: data.status === \"closed\" ? \"none\" : \"inline-grid\",\r\n            }}\r\n            onClick={() => {\r\n              submit(data.status === \"awaitComplate\" ? \"finish\" : \"close\", data);\r\n            }}\r\n          >\r\n            <CheckCircleOutlineOutlined\r\n              color={!data.actualStartDate && data.actualEndDate ? 'action' : 'disabled'}\r\n            />\r\n            <Typography variant=\"caption\">{data.status === \"awaitComplate\" || data.status === \"awaitStart\" ? i18n.ISNTAPP_COMPLETE : i18n.ISNTAPP_CLOSE}</Typography>\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n);\r\nexport default TaskListCard;\r\n"]},"metadata":{},"sourceType":"module"}
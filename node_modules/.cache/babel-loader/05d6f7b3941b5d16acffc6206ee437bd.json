{"ast":null,"code":"import{Box}from\"@material-ui/core\";import{withStyles}from\"@material-ui/core/styles\";import{AssignmentOutlined,ChevronRight}from\"@material-ui/icons\";import{LocalizeContext}from\"i18n\";import{getAwaitComplateAwaitCloseCount}from\"js/util\";import PrimaryLayout from\"layouts/PrimaryLayout\";import React from\"react\";import{connect}from\"react-redux\";import{useHistory}from\"react-router-dom\";var TaskManagermentPage=withStyles(function(_ref){var spacing=_ref.spacing;return{root:{width:\"calc(100% - 16px)\",height:\"calc(100% - 16px)\",display:\"flex\",flexDirection:\"column\",margin:\"8px\"},itemBox:{width:\"100%\",padding:\"4px\",margin:\"4px\",display:\"flex\",alignItems:\"center\",borderBottom:\"1px solid darkgray\"},itemIcon:{width:\"24px\",color:\"rgb(220,0,0)\",paddingTop:\"4px\",margin:\"0 4px\"},discriptionBox:{width:\"calc(100% - 54px)\"},iconBox:{paddingTop:\"6px\",width:\"6px\",color:\"rgb(220,0,0)\"},discription:{padding:spacing(0.5,1),backgroundColor:\"red\",borderRadius:\"30px\",color:\"white\",marginLeft:spacing(1)}};})(function(_ref2){var classes=_ref2.classes,taskDataGroup=_ref2.taskDataGroup;var history=useHistory();var i18n=React.useContext(LocalizeContext);var tasks=taskDataGroup.filter(function(task,index,self){return index===self.findIndex(function(t){return t.taskType===task.taskType;});});return/*#__PURE__*/React.createElement(PrimaryLayout,{name:\"TasksGroupPage\",title:i18n.INSTAPP_JOBLIST_TASKS,pageLevel:1},/*#__PURE__*/React.createElement(Box,{className:classes.root},tasks.map(function(item,index){return/*#__PURE__*/React.createElement(Box,{key:index,className:classes.itemBox,onClick:function onClick(){history.push(\"/taskList/\".concat(item.taskType));}},/*#__PURE__*/React.createElement(Box,{className:classes.itemIcon},/*#__PURE__*/React.createElement(AssignmentOutlined,null)),/*#__PURE__*/React.createElement(Box,{className:classes.discriptionBox},item.taskType,item.awaitStartNum+item.awaitCloseNum+item.awaitComplateNum>0&&/*#__PURE__*/React.createElement(\"span\",{className:classes.discription},item.awaitStartNum+item.awaitCloseNum+item.awaitComplateNum)),/*#__PURE__*/React.createElement(Box,{className:classes.iconBox},/*#__PURE__*/React.createElement(ChevronRight,null)));})));});export default connect(function(state,props){var tasks=Object.keys(state===null||state===void 0?void 0:state.tasks).length>0?state===null||state===void 0?void 0:state.tasks:[];var taskList=getAwaitComplateAwaitCloseCount(tasks);return{taskDataGroup:taskList};})(TaskManagermentPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/TaskGroupPage/index.js"],"names":["Box","withStyles","AssignmentOutlined","ChevronRight","LocalizeContext","getAwaitComplateAwaitCloseCount","PrimaryLayout","React","connect","useHistory","TaskManagermentPage","spacing","root","width","height","display","flexDirection","margin","itemBox","padding","alignItems","borderBottom","itemIcon","color","paddingTop","discriptionBox","iconBox","discription","backgroundColor","borderRadius","marginLeft","classes","taskDataGroup","history","i18n","useContext","tasks","filter","task","index","self","findIndex","t","taskType","INSTAPP_JOBLIST_TASKS","map","item","push","awaitStartNum","awaitCloseNum","awaitComplateNum","state","props","Object","keys","length","taskList"],"mappings":"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","sourcesContent":["import { Box } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { AssignmentOutlined, ChevronRight } from \"@material-ui/icons\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport { getAwaitComplateAwaitCloseCount } from \"js/util\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst TaskManagermentPage = withStyles(({ spacing }) => {\r\n  return {\r\n    root: {\r\n      width: `calc(100% - 16px)`,\r\n      height: `calc(100% - 16px)`,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      margin: \"8px\",\r\n    },\r\n    itemBox: {\r\n      width: \"100%\",\r\n      padding: \"4px\",\r\n      margin: \"4px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      borderBottom: \"1px solid darkgray\",\r\n    },\r\n    itemIcon: {\r\n      width: `24px`,\r\n      color: \"rgb(220,0,0)\",\r\n      paddingTop: \"4px\",\r\n      margin: \"0 4px\",\r\n    },\r\n    discriptionBox: {\r\n      width: `calc(100% - 54px)`,\r\n    },\r\n    iconBox: {\r\n      paddingTop: \"6px\",\r\n      width: \"6px\",\r\n      color: \"rgb(220,0,0)\",\r\n    },\r\n    discription: {\r\n      padding: spacing(0.5, 1),\r\n      backgroundColor: \"red\",\r\n      borderRadius: \"30px\",\r\n      color: \"white\",\r\n      marginLeft: spacing(1),\r\n    },\r\n  };\r\n})(({ classes, taskDataGroup }) => {\r\n  const history = useHistory();\r\n  const i18n = React.useContext(LocalizeContext);\r\n  const tasks = taskDataGroup.filter((task, index, self) =>\r\n    index === self.findIndex(t => t.taskType === task.taskType)\r\n  );\r\n\r\n  return (\r\n    <PrimaryLayout\r\n      name=\"TasksGroupPage\"\r\n      title={i18n.INSTAPP_JOBLIST_TASKS}\r\n      pageLevel={1}\r\n    >\r\n      <Box className={classes.root}>\r\n        {tasks.map((item,index) => {\r\n          return <Box\r\n            key={index}\r\n            className={classes.itemBox}\r\n            onClick={() => {\r\n              history.push(`/taskList/${item.taskType}`);\r\n            }}\r\n          >\r\n            <Box className={classes.itemIcon}>\r\n              <AssignmentOutlined />\r\n            </Box>\r\n            <Box className={classes.discriptionBox}>\r\n              {item.taskType}\r\n              {(item.awaitStartNum +item.awaitCloseNum + item.awaitComplateNum) > 0 && (\r\n                <span className={classes.discription}>{item.awaitStartNum +item.awaitCloseNum + item.awaitComplateNum}</span>\r\n              )}\r\n            </Box>\r\n            <Box className={classes.iconBox}>\r\n              <ChevronRight />\r\n            </Box>\r\n          </Box>\r\n        })}\r\n      \r\n      </Box>\r\n    </PrimaryLayout>\r\n  );\r\n});\r\nexport default connect((state, props) => {\r\n  let tasks = Object.keys(state?.tasks).length > 0 ? state?.tasks : [];\r\n  const taskList = getAwaitComplateAwaitCloseCount(tasks);\r\n  return {\r\n    taskDataGroup: taskList\r\n  };\r\n})(TaskManagermentPage);\r\n"]},"metadata":{},"sourceType":"module"}
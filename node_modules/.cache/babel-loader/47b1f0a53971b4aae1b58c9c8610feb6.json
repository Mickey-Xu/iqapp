{"ast":null,"code":"import * as action from \"actions\";\nimport * as api from \"api\";\nimport * as repo from \"js/fetch\";\nimport { saveTheFirstRefreshTime } from \"js/util\";\nimport axios from \"axios\";\nexport const setAuth = auth => {\n  return {\n    type: \"SET_AUTH\",\n    payload: auth\n  };\n};\nexport const clearState = () => {\n  return {\n    type: \"USER_LOGOUT\"\n  };\n};\nexport const getIDPToken = () => {\n  const data = {\n    \"AppId\": \"SCF.IQAPP\",\n    \"UserName\": \"IQAPP\",\n    \"Password\": \"YtLPPMGa9YUkGsJZNYJA8\"\n  };\n  return axios.post(\"/user/login\", data, {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    var _response$data;\n\n    window.localStorage.setItem(\"idptAuth\", JSON.stringify((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data));\n  }).catch(error => {\n    console.error('Error:', error);\n    return Promise.reject(error);\n  });\n};\nexport const login = data => dispatch => {\n  dispatch(action.showLoading());\n  return api.login(data).then(response => {\n    const {\n      result\n    } = response.data;\n\n    if (result === 2) {\n      return Promise.reject({\n        message: \"用户名或密码错误\"\n      });\n    }\n\n    return repo.fetchProfile();\n  }).then(data => {\n    if (data.isPwdInit) {\n      return data;\n    } else {\n      dispatch(action.setAuth(data));\n      window.localStorage.setItem(\"auth\", JSON.stringify(data));\n      saveTheFirstRefreshTime(dispatch);\n      dispatch(action.setHistoryPage(\"loginPage\"));\n      getIDPToken();\n      return repo.fetchInstMethods();\n    }\n  }).catch(error => {\n    window.localStorage.removeItem(\"auth\");\n    dispatch(action.setAuth(null));\n    dispatch(action.setError(error.message));\n  }).finally(() => {\n    dispatch(action.hideLoading());\n  });\n};\nexport const logout = () => dispatch => {\n  dispatch(action.showLoading());\n  return api.logout().then(() => {\n    window.localStorage.removeItem(\"auth\");\n    dispatch(setAuth(null));\n    dispatch(clearState());\n  }).catch(error => {\n    dispatch(action.setError(error));\n  }).finally(() => {\n    dispatch(action.hideLoading());\n  });\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/actions/auth.js"],"names":["action","api","repo","saveTheFirstRefreshTime","axios","setAuth","auth","type","payload","clearState","getIDPToken","data","post","headers","then","response","window","localStorage","setItem","JSON","stringify","catch","error","console","Promise","reject","login","dispatch","showLoading","result","message","fetchProfile","isPwdInit","setHistoryPage","fetchInstMethods","removeItem","setError","finally","hideLoading","logout"],"mappings":"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","sourcesContent":["import * as action from \"actions\";\r\nimport * as api from \"api\";\r\nimport * as repo from \"js/fetch\";\r\nimport { saveTheFirstRefreshTime } from \"js/util\";\r\nimport axios from \"axios\";\r\n\r\nexport const setAuth = (auth) => {\r\n  return { type: \"SET_AUTH\", payload: auth };\r\n};\r\n\r\nexport const clearState = () => {\r\n  return { type: \"USER_LOGOUT\" };\r\n};\r\n\r\nexport const getIDPToken = () => {\r\n  const data = {\r\n    \"AppId\": \"SCF.IQAPP\",\r\n    \"UserName\": \"IQAPP\",\r\n    \"Password\": \"YtLPPMGa9YUkGsJZNYJA8\"\r\n  }\r\n\r\n return axios.post(\"/user/login\", data, {\r\n    headers: { \"Content-Type\": \"application/json\" }\r\n  })\r\n    .then(response => {\r\n      window.localStorage.setItem(\"idptAuth\", JSON.stringify(response.data?.data));\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n      return Promise.reject(error);\r\n    });\r\n\r\n}\r\n\r\nexport const login = (data) => (dispatch) => {\r\n  dispatch(action.showLoading());\r\n  return api\r\n    .login(data)\r\n    .then((response) => {\r\n      const { result } = response.data;\r\n      if (result === 2) {\r\n        return Promise.reject({ message: \"用户名或密码错误\" });\r\n      }\r\n      return repo.fetchProfile();\r\n    })\r\n    .then((data) => {\r\n      if (data.isPwdInit) {\r\n        return data;\r\n      } else {\r\n        dispatch(action.setAuth(data));\r\n        window.localStorage.setItem(\"auth\", JSON.stringify(data));\r\n        saveTheFirstRefreshTime(dispatch);\r\n        dispatch(action.setHistoryPage(\"loginPage\"));\r\n        getIDPToken()\r\n        return repo.fetchInstMethods();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      window.localStorage.removeItem(\"auth\");\r\n      dispatch(action.setAuth(null));\r\n      dispatch(action.setError(error.message));\r\n    })\r\n    .finally(() => {\r\n      dispatch(action.hideLoading());\r\n    });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch(action.showLoading());\r\n  return api\r\n    .logout()\r\n    .then(() => {\r\n      window.localStorage.removeItem(\"auth\");\r\n      dispatch(setAuth(null));\r\n      dispatch(clearState());\r\n    })\r\n    .catch((error) => {\r\n      dispatch(action.setError(error));\r\n    })\r\n    .finally(() => {\r\n      dispatch(action.hideLoading());\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from\"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import*as api from\"api\";import*as action from\"actions\";import{db}from\"js/db\";import{taskDataConversion}from\"js/util\";export var setTasks=function setTasks(data){return{type:\"SET_TASKS\",payload:data};};export var fetchCreateTask=function fetchCreateTask(data){return function(dispatch){dispatch(action.showLoading());return api.createTask(data).then(function(response){//get task\ndispatch(action.hideLoading());}).catch(function(error){if(error.code===401){dispatch(action.setAuth(null));}dispatch(action.setError(error.message));}).finally(function(){dispatch(action.hideLoading());});};};export var processingTasks=function processingTasks(type,data,activityParams){return function(dispatch){dispatch(action.showLoading());var auth=JSON.parse(window.localStorage.getItem(\"auth\"));var userInfo={userId:auth.userName};return api.processingTasks(type.toLocaleUpperCase(),data.taskId,userInfo).then(function(response){var _response$data;if(((_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.code)!==200){var _response$data2;dispatch(action.setError((_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.message));return false;}dispatch(action.hideLoading());db.cache.get(\"tasks\").then(function(cache){var resp=response.data.data;var result=taskDataConversion(resp);var lastData=cache.data.map(function(task){return task.taskId===data.taskId?_objectSpread(_objectSpread({},task),result):task;});db.cache.put({id:\"tasks\",data:lastData}).then(function(){dispatch(action.setTasks(lastData));});});if(data.taskType===\"COMMISSIONING\"&&type===\"finish\"){dispatch(action.updateOrderActivityStatus(activityParams));}}).catch(function(error){dispatch(action.setError(error.message));}).finally(function(){dispatch(action.hideLoading());});};};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/actions/task.js"],"names":["api","action","db","taskDataConversion","setTasks","data","type","payload","fetchCreateTask","dispatch","showLoading","createTask","then","response","hideLoading","catch","error","code","setAuth","setError","message","finally","processingTasks","activityParams","auth","JSON","parse","window","localStorage","getItem","userInfo","userId","userName","toLocaleUpperCase","taskId","cache","get","resp","result","lastData","map","task","put","id","taskType","updateOrderActivityStatus"],"mappings":"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","sourcesContent":["import * as api from \"api\";\r\nimport * as action from \"actions\";\r\nimport { db } from \"js/db\";\r\nimport { taskDataConversion } from \"js/util\";\r\n\r\nexport const setTasks = (data) => ({\r\n  type: \"SET_TASKS\",\r\n  payload: data,\r\n});\r\n\r\nexport const fetchCreateTask = (data) => (dispatch) => {\r\n  dispatch(action.showLoading());\r\n  return api\r\n    .createTask(data)\r\n    .then((response) => {\r\n      //get task\r\n      dispatch(action.hideLoading());\r\n    })\r\n    .catch((error) => {\r\n      if (error.code === 401) {\r\n        dispatch(action.setAuth(null));\r\n      }\r\n      dispatch(action.setError(error.message));\r\n    })\r\n    .finally(() => {\r\n      dispatch(action.hideLoading());\r\n    });\r\n};\r\n\r\n\r\nexport const processingTasks = (type, data, activityParams) => (dispatch) => {\r\n  dispatch(action.showLoading());\r\n  const auth = JSON.parse(window.localStorage.getItem(\"auth\"));\r\n\r\n  const userInfo = {\r\n    userId: auth.userName\r\n  };\r\n\r\n  return api\r\n    .processingTasks(type.toLocaleUpperCase(), data.taskId, userInfo)\r\n    .then((response) => {\r\n      if (response.data?.code !== 200) {\r\n        dispatch(action.setError(response.data?.message));\r\n        return false;\r\n      }\r\n      dispatch(action.hideLoading());\r\n      db.cache.get(\"tasks\").then((cache) => {\r\n        const resp = response.data.data;\r\n        const result = taskDataConversion(resp)\r\n        const lastData = cache.data.map(task =>\r\n          task.taskId === data.taskId\r\n            ? { ...task, ...result } \r\n            : task\r\n        );\r\n        db.cache.put({ id: \"tasks\", data: lastData }).then(() => {\r\n          dispatch(action.setTasks(lastData));\r\n        });\r\n      });      \r\n      if (data.taskType === \"COMMISSIONING\" && type === \"finish\") {\r\n        dispatch(action.updateOrderActivityStatus(activityParams));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch(action.setError(error.message));\r\n    })  \r\n    .finally(() => {\r\n      dispatch(action.hideLoading());\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as action from \"actions\";\nimport * as api from \"api\";\nimport * as repo from \"js/fetch\";\nimport { saveTheFirstRefreshTime } from \"js/util\";\nimport axios from \"axios\";\nimport { axiosIDPTConfig } from \"config\";\nexport const setAuth = auth => {\n  return {\n    type: \"SET_AUTH\",\n    payload: auth\n  };\n};\nexport const clearState = () => {\n  return {\n    type: \"USER_LOGOUT\"\n  };\n};\nexport const login = data => dispatch => {\n  dispatch(action.showLoading());\n  return api.login(data).then(response => {\n    const {\n      result\n    } = response.data;\n\n    if (result === 2) {\n      return Promise.reject({\n        message: \"用户名或密码错误\"\n      });\n    }\n\n    return repo.fetchProfile();\n  }).then(data => {\n    if (data.isPwdInit) {\n      return data;\n    } else {\n      dispatch(action.setAuth(data));\n      window.localStorage.setItem(\"auth\", JSON.stringify(data));\n      saveTheFirstRefreshTime(dispatch);\n      dispatch(action.setHistoryPage(\"loginPage\"));\n      getIDPToken();\n      return repo.fetchInstMethods();\n    }\n  }).catch(error => {\n    window.localStorage.removeItem(\"auth\");\n    dispatch(action.setAuth(null));\n    dispatch(action.setError(error.message));\n  }).finally(() => {\n    dispatch(action.hideLoading());\n  });\n};\nexport const logout = () => dispatch => {\n  dispatch(action.showLoading());\n  return api.logout().then(() => {\n    window.localStorage.removeItem(\"auth\");\n    dispatch(setAuth(null));\n    dispatch(clearState());\n  }).catch(error => {\n    dispatch(action.setError(error));\n  }).finally(() => {\n    dispatch(action.hideLoading());\n  });\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/actions/auth.js"],"names":["action","api","repo","saveTheFirstRefreshTime","axios","axiosIDPTConfig","setAuth","auth","type","payload","clearState","login","data","dispatch","showLoading","then","response","result","Promise","reject","message","fetchProfile","isPwdInit","window","localStorage","setItem","JSON","stringify","setHistoryPage","getIDPToken","fetchInstMethods","catch","error","removeItem","setError","finally","hideLoading","logout"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,SAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAO,KAAKC,IAAZ,MAAsB,UAAtB;AACA,SAASC,uBAAT,QAAwC,SAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,QAAhC;AAEA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAU;AAC/B,SAAO;AAAEC,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,OAAO,EAAEF;AAA7B,GAAP;AACD,CAFM;AAIP,OAAO,MAAMG,UAAU,GAAG,MAAM;AAC9B,SAAO;AAAEF,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAFM;AAIP,OAAO,MAAMG,KAAK,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAACb,MAAM,CAACc,WAAP,EAAD,CAAR;AACA,SAAOb,GAAG,CACPU,KADI,CACEC,IADF,EAEJG,IAFI,CAEEC,QAAD,IAAc;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAaD,QAAQ,CAACJ,IAA5B;;AACA,QAAIK,MAAM,KAAK,CAAf,EAAkB;AAChB,aAAOC,OAAO,CAACC,MAAR,CAAe;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAf,CAAP;AACD;;AACD,WAAOlB,IAAI,CAACmB,YAAL,EAAP;AACD,GARI,EASJN,IATI,CASEH,IAAD,IAAU;AACd,QAAIA,IAAI,CAACU,SAAT,EAAoB;AAClB,aAAOV,IAAP;AACD,KAFD,MAEO;AACLC,MAAAA,QAAQ,CAACb,MAAM,CAACM,OAAP,CAAeM,IAAf,CAAD,CAAR;AACAW,MAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,EAAoCC,IAAI,CAACC,SAAL,CAAef,IAAf,CAApC;AACAT,MAAAA,uBAAuB,CAACU,QAAD,CAAvB;AACAA,MAAAA,QAAQ,CAACb,MAAM,CAAC4B,cAAP,CAAsB,WAAtB,CAAD,CAAR;AACAC,MAAAA,WAAW;AACX,aAAO3B,IAAI,CAAC4B,gBAAL,EAAP;AACD;AACF,GApBI,EAqBJC,KArBI,CAqBGC,KAAD,IAAW;AAChBT,IAAAA,MAAM,CAACC,YAAP,CAAoBS,UAApB,CAA+B,MAA/B;AACApB,IAAAA,QAAQ,CAACb,MAAM,CAACM,OAAP,CAAe,IAAf,CAAD,CAAR;AACAO,IAAAA,QAAQ,CAACb,MAAM,CAACkC,QAAP,CAAgBF,KAAK,CAACZ,OAAtB,CAAD,CAAR;AACD,GAzBI,EA0BJe,OA1BI,CA0BI,MAAM;AACbtB,IAAAA,QAAQ,CAACb,MAAM,CAACoC,WAAP,EAAD,CAAR;AACD,GA5BI,CAAP;AA6BD,CA/BM;AAiCP,OAAO,MAAMC,MAAM,GAAG,MAAOxB,QAAD,IAAc;AACxCA,EAAAA,QAAQ,CAACb,MAAM,CAACc,WAAP,EAAD,CAAR;AACA,SAAOb,GAAG,CACPoC,MADI,GAEJtB,IAFI,CAEC,MAAM;AACVQ,IAAAA,MAAM,CAACC,YAAP,CAAoBS,UAApB,CAA+B,MAA/B;AACApB,IAAAA,QAAQ,CAACP,OAAO,CAAC,IAAD,CAAR,CAAR;AACAO,IAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;AACD,GANI,EAOJqB,KAPI,CAOGC,KAAD,IAAW;AAChBnB,IAAAA,QAAQ,CAACb,MAAM,CAACkC,QAAP,CAAgBF,KAAhB,CAAD,CAAR;AACD,GATI,EAUJG,OAVI,CAUI,MAAM;AACbtB,IAAAA,QAAQ,CAACb,MAAM,CAACoC,WAAP,EAAD,CAAR;AACD,GAZI,CAAP;AAaD,CAfM","sourcesContent":["import * as action from \"actions\";\r\nimport * as api from \"api\";\r\nimport * as repo from \"js/fetch\";\r\nimport { saveTheFirstRefreshTime } from \"js/util\";\r\nimport axios from \"axios\";\r\nimport { axiosIDPTConfig } from \"config\";\r\n\r\nexport const setAuth = (auth) => {\r\n  return { type: \"SET_AUTH\", payload: auth };\r\n};\r\n\r\nexport const clearState = () => {\r\n  return { type: \"USER_LOGOUT\" };\r\n};\r\n\r\nexport const login = (data) => (dispatch) => {\r\n  dispatch(action.showLoading());\r\n  return api\r\n    .login(data)\r\n    .then((response) => {\r\n      const { result } = response.data;\r\n      if (result === 2) {\r\n        return Promise.reject({ message: \"用户名或密码错误\" });\r\n      }\r\n      return repo.fetchProfile();\r\n    })\r\n    .then((data) => {\r\n      if (data.isPwdInit) {\r\n        return data;\r\n      } else {\r\n        dispatch(action.setAuth(data));\r\n        window.localStorage.setItem(\"auth\", JSON.stringify(data));\r\n        saveTheFirstRefreshTime(dispatch);\r\n        dispatch(action.setHistoryPage(\"loginPage\"));\r\n        getIDPToken()\r\n        return repo.fetchInstMethods();\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      window.localStorage.removeItem(\"auth\");\r\n      dispatch(action.setAuth(null));\r\n      dispatch(action.setError(error.message));\r\n    })\r\n    .finally(() => {\r\n      dispatch(action.hideLoading());\r\n    });\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch(action.showLoading());\r\n  return api\r\n    .logout()\r\n    .then(() => {\r\n      window.localStorage.removeItem(\"auth\");\r\n      dispatch(setAuth(null));\r\n      dispatch(clearState());\r\n    })\r\n    .catch((error) => {\r\n      dispatch(action.setError(error));\r\n    })\r\n    .finally(() => {\r\n      dispatch(action.hideLoading());\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
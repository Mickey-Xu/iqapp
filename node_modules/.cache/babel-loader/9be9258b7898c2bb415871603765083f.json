{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TemplateForm\\\\Photo\\\\index.js\";\nimport { Box, FormLabel, makeStyles, Typography } from \"@material-ui/core\";\nimport Compressor from \"compressorjs\";\nimport { LocalizeContext } from \"i18n\";\nimport { fillTextToImg } from \"js/util\";\nimport React, { useRef, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nconst useStyles = makeStyles(({\n  spacing\n}) => ({\n  btm: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: spacing(1, 1, 0, 1)\n  },\n  root: {\n    display: \"grid\",\n    padding: spacing(1, 0),\n    borderBottom: \" 1px solid #e0e0e0\",\n    backgroundColor: \"#FFF\"\n  },\n  lable: {\n    margin: spacing(0, 0, 1, 0),\n    color: \"rgba(0, 0, 0, 0.87)\"\n  },\n  inputFile: {\n    width: \"0.1px\",\n    height: \"0.1px\",\n    opacity: 0,\n    overflow: \"hidden\",\n    position: \"absolute\",\n    top: \"0\",\n    zIndex: -1\n  },\n  file: {\n    height: \"160px\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    textAlign: \"center\"\n  }\n}));\nexport const Photo = props => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [imageSrc, setImageSrc] = useState(null);\n  const [isCameraActive, setIsCameraActive] = useState(false);\n\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n\n    if (file) {\n      const isCamera = event.target.value.includes('camera');\n\n      if (isCamera) {\n        startCamera();\n      } else {\n        const reader = new FileReader();\n\n        reader.onloadend = () => setImageSrc(reader.result);\n\n        reader.readAsDataURL(file);\n      }\n    }\n  };\n\n  const startCamera = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n    videoRef.current.srcObject = stream;\n    videoRef.current.play();\n    setIsCameraActive(true);\n  };\n\n  const captureImage = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const video = videoRef.current;\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    const base64 = canvas.toDataURL('image/png');\n    setImageSrc(base64);\n    stopCamera();\n  };\n\n  const stopCamera = () => {\n    const stream = videoRef.current.srcObject;\n\n    if (stream) {\n      stream.getTracks().forEach(track => track.stop());\n    }\n\n    videoRef.current.srcObject = null;\n    setIsCameraActive(false);\n  };\n\n  useEffect(() => {\n    if (isCameraActive) {\n      const canvas = canvasRef.current;\n      canvas.width = videoRef.current.videoWidth;\n      canvas.height = videoRef.current.videoHeight;\n    }\n  }, [isCameraActive]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*;capture=camera\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), isCameraActive ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    style: {\n      width: '300px',\n      height: 'auto',\n      border: '2px solid #fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '20%',\n      left: '10%',\n      width: '80%',\n      height: '60%',\n      border: '2px dashed #ff0000',\n      pointerEvents: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: captureImage,\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, \"\\u62CD\\u7167\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })) : imageSrc ? /*#__PURE__*/React.createElement(\"img\", {\n    src: imageSrc,\n    alt: \"\\u9884\\u89C8\",\n    style: {\n      maxWidth: '100%',\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }) : null);\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TemplateForm/Photo/index.js"],"names":["Box","FormLabel","makeStyles","Typography","Compressor","LocalizeContext","fillTextToImg","React","useRef","useState","useParams","useStyles","spacing","btm","display","justifyContent","margin","root","padding","borderBottom","backgroundColor","lable","color","inputFile","width","height","opacity","overflow","position","top","zIndex","file","textAlign","Photo","props","videoRef","canvasRef","imageSrc","setImageSrc","isCameraActive","setIsCameraActive","handleFileChange","event","target","files","isCamera","value","includes","startCamera","reader","FileReader","onloadend","result","readAsDataURL","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","play","captureImage","canvas","context","getContext","drawImage","base64","toDataURL","stopCamera","getTracks","forEach","track","stop","useEffect","videoWidth","videoHeight","border","left","pointerEvents","marginTop","maxWidth"],"mappings":"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","sourcesContent":["import { Box, FormLabel, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Compressor from \"compressorjs\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport { fillTextToImg } from \"js/util\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(({ spacing }) => ({\r\n  btm: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: spacing(1, 1, 0, 1),\r\n  },\r\n  root: {\r\n    display: \"grid\",\r\n    padding: spacing(1, 0),\r\n    borderBottom: \" 1px solid #e0e0e0\",\r\n    backgroundColor: \"#FFF\",\r\n  },\r\n  lable: {\r\n    margin: spacing(0, 0, 1, 0),\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n  },\r\n  inputFile: {\r\n    width: \"0.1px\",\r\n    height: \"0.1px\",\r\n    opacity: 0,\r\n    overflow: \"hidden\",\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    zIndex: -1,\r\n  },\r\n  file: {\r\n    height: \"160px\",\r\n    position: \"relative\",\r\n    overflow: \"hidden\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport const Photo = (props) => {\r\n  \r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const [isCameraActive, setIsCameraActive] = useState(false);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const isCamera = event.target.value.includes('camera');\r\n      if (isCamera) {\r\n        startCamera();\r\n      } else {\r\n        const reader = new FileReader();\r\n        reader.onloadend = () => setImageSrc(reader.result);\r\n        reader.readAsDataURL(file);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startCamera = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n    videoRef.current.srcObject = stream;\r\n    videoRef.current.play();\r\n    setIsCameraActive(true);\r\n  };\r\n\r\n  const captureImage = () => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    const video = videoRef.current;\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    const base64 = canvas.toDataURL('image/png');\r\n    setImageSrc(base64);\r\n    stopCamera();\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    const stream = videoRef.current.srcObject;\r\n    if (stream) {\r\n      stream.getTracks().forEach(track => track.stop());\r\n    }\r\n    videoRef.current.srcObject = null;\r\n    setIsCameraActive(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isCameraActive) {\r\n      const canvas = canvasRef.current;\r\n      canvas.width = videoRef.current.videoWidth;\r\n      canvas.height = videoRef.current.videoHeight;\r\n    }\r\n  }, [isCameraActive]);\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center' }}>\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*;capture=camera\"\r\n        onChange={handleFileChange}\r\n      />\r\n      {isCameraActive ? (\r\n        <div style={{ position: 'relative', display: 'inline-block' }}>\r\n          <video\r\n            ref={videoRef}\r\n            style={{ width: '300px', height: 'auto', border: '2px solid #fff' }}\r\n          />\r\n          <div\r\n            style={{\r\n              position: 'absolute',\r\n              top: '20%',\r\n              left: '10%',\r\n              width: '80%',\r\n              height: '60%',\r\n              border: '2px dashed #ff0000',\r\n              pointerEvents: 'none'\r\n            }}\r\n          />\r\n          <button\r\n            onClick={captureImage}\r\n            style={{ marginTop: '10px' }}\r\n          >\r\n            拍照\r\n          </button>\r\n          <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n        </div>\r\n      ) : imageSrc ? (\r\n        <img src={imageSrc} alt=\"预览\" style={{ maxWidth: '100%', marginTop: '10px' }} />\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
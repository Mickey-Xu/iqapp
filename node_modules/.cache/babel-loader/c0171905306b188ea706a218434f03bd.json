{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TemplateForm\\\\Photo\\\\index.js\";\n// import { Box, FormLabel, makeStyles, Typography } from \"@material-ui/core\";\n// import Compressor from \"compressorjs\";\n// import { LocalizeContext } from \"i18n\";\n// import { fillTextToImg } from \"js/util\";\n// import React, { useRef, useState } from \"react\";\n// import { useParams } from 'react-router-dom';\n// const useStyles = makeStyles(({ spacing }) => ({\n//   btm: {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     margin: spacing(1, 1, 0, 1),\n//   },\n//   root: {\n//     display: \"grid\",\n//     padding: spacing(1, 0),\n//     borderBottom: \" 1px solid #e0e0e0\",\n//     backgroundColor: \"#FFF\",\n//   },\n//   lable: {\n//     margin: spacing(0, 0, 1, 0),\n//     color: \"rgba(0, 0, 0, 0.87)\",\n//   },\n//   inputFile: {\n//     width: \"0.1px\",\n//     height: \"0.1px\",\n//     opacity: 0,\n//     overflow: \"hidden\",\n//     position: \"absolute\",\n//     top: \"0\",\n//     zIndex: -1,\n//   },\n//   file: {\n//     height: \"160px\",\n//     position: \"relative\",\n//     overflow: \"hidden\",\n//     textAlign: \"center\",\n//   },\n// }));\n// export const Photo = (props) => {\n//   const i18n = React.useContext(LocalizeContext);\n//   const classes = useStyles();\n//   const [photoStyle, setPhotoStyle] = useState({\n//     width: \"auto\",\n//     height: \"100%\",\n//   });\n//   const photoEl = useRef(null);\n//   const iptRef = useRef(null);\n//   const projectData = useParams();\n//   const onPhotoChange = (e) => {\n//     const fileReader = new FileReader();\n//     const file = e.target.files[0];\n//     fileReader.onloadend = (e) => {\n//       const photo = e.target.result;\n//       fillTextToImg(photo, projectData).then((res) => {\n//         props.onChange(res);\n//        })\n//       const i = new Image();\n//       i.onload = () => {\n//         setPhotoStyle({\n//           // width: photoEl.current.clientWidth,\n//           // height: (photoEl.current.clientWidth / i.width) * i.height,\n//           width: \"auto\",\n//           height: \"100%\",\n//         });\n//       };\n//       i.src = photo;\n//     };\n//     if (file) {\n//       new Compressor(file, {\n//         quality: 0.2,\n//         convertSize: 400000,\n//         success(result) {\n//           fileReader.readAsDataURL(result);\n//         },\n//         error(err) {\n//           console.log(err.message);\n//         },\n//       });\n//     } else {\n//       props.onChange(\"#\");\n//     }\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <Typography variant=\"subtitle2\" className={classes.lable}>\n//         {props.label}\n//       </Typography>\n//       <div>\n//         <input\n//           className={classes.inputFile}\n//           type=\"file\"\n//           accept=\"image/x-png,image/jpeg,image/gif\"\n//           id={props.id}\n//           ref={iptRef}\n//           onChange={onPhotoChange}\n//         />\n//       </div>\n//       <div>\n//         {/* <Typography variant=\"body2\">{props.description}</Typography> */}\n//         <FormLabel required={props.required}>\n//           <Typography\n//             component=\"span\"\n//             variant=\"subtitle2\"\n//             className={classes.lable}\n//           >\n//             {props.description}\n//           </Typography>\n//         </FormLabel>\n//       </div>\n//       <Box border={1} className={classes.file}>\n//         <img src={props.value} style={photoStyle} ref={photoEl} alt=\"\" />\n//       </Box>\n//       <Box className={classes.btm}>\n//         <Typography\n//           color=\"secondary\"\n//           variant=\"body2\"\n//           onClick={() => {\n//             props.onChange(\"#\");\n//             iptRef.current.value = \"\";\n//           }}\n//         >\n//           {i18n.ISNTAPP_DELETE}\n//         </Typography>\n//         <label htmlFor={props.id}>\n//           <Typography color=\"secondary\" variant=\"body2\">\n//             {i18n.ISNTAPP_IMPORT_PICTURES}\n//           </Typography>\n//         </label>\n//       </Box>\n//     </div>\n//   );\n// };\nimport React, { useRef } from 'react';\n\nconst CameraComponent = () => {\n  const cameraVideoRef = useRef(null);\n  const cameraCanvasRef = useRef(null);\n\n  function successFunc(mediaStream) {\n    const video = cameraVideoRef.current; // const video = document.getElementById('cameraVideo') as HTMLVideoElement;\n    // 旧的浏览器可能没有srcObject\n\n    if ('srcObject' in video) {\n      video.srcObject = mediaStream;\n    }\n\n    video.onloadedmetadata = () => {\n      video.play();\n    };\n  }\n\n  function errorFunc(err) {\n    console.log(`${err.name}: ${err.message}`); // always check for errors at the end.\n  } // 启动摄像头\n\n\n  const openMedia = () => {\n    // 打开摄像头\n    const opt = {\n      audio: false,\n      video: {\n        width: 1280,\n        height: 720\n      }\n    };\n    navigator.mediaDevices.getUserMedia(opt).then(successFunc).catch(errorFunc);\n  }; // 关闭摄像头\n\n\n  const closeMedia = () => {\n    // const video = document.getElementById('cameraVideo') as HTMLVideoElement;\n    const video = cameraVideoRef.current;\n    const stream = video.srcObject;\n\n    if ('getTracks' in stream) {\n      const tracks = stream.getTracks();\n      tracks.forEach(track => {\n        track.stop();\n      });\n    }\n  };\n\n  const getImg = () => {\n    // 获取图片资源\n    // const video = document.getElementById('cameraVideo') as HTMLVideoElement;\n    // const canvas = document.getElementById('cameraCanvas') as HTMLCanvasElement;\n    const video = cameraVideoRef.current;\n    const canvas = cameraCanvasRef.current;\n\n    if (canvas == null) {\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n    ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight); // 把视频中的一帧在canvas画布里面绘制出来\n\n    const imgStr = canvas.toDataURL(); // 将图片资源转成字符串\n\n    const base64Img = imgStr.split(';base64,').pop(); // 将图片资源转成base64格式\n\n    const imgData = {\n      base64Img\n    };\n    closeMedia(); // 获取到图片之后可以自动关闭摄像头\n\n    return imgData;\n  };\n\n  const saveImg = () => {\n    // electron项目保存到本地\n    const data = getImg();\n    document.getElementById('imgTag').src = data.base64Img; // 网页保存图片的方法\n\n    const saveLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n    saveLink.href = data.base64Img;\n    saveLink.download = './i.png';\n    const event = document.createEvent('MouseEvents');\n    event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n    saveLink.dispatchEvent(event);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    id: \"cameraVideo\",\n    ref: cameraVideoRef,\n    style: {\n      width: '1280px',\n      height: '720px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"cameraCanvas\",\n    ref: cameraCanvasRef,\n    width: 1280,\n    height: 720,\n    style: {\n      width: '1280px',\n      height: '720px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    id: \"imgTag\",\n    src: \"\",\n    alt: \"imgTag\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: openMedia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, \"\\u6253\\u5F00\\u6444\\u50CF\\u5934\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: saveImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, \"\\u4FDD\\u5B58\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: closeMedia,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }, \"\\u5173\\u95ED\\u6444\\u50CF\\u5934\"));\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TemplateForm/Photo/index.js"],"names":["React","useRef","CameraComponent","cameraVideoRef","cameraCanvasRef","successFunc","mediaStream","video","current","srcObject","onloadedmetadata","play","errorFunc","err","console","log","name","message","openMedia","opt","audio","width","height","navigator","mediaDevices","getUserMedia","then","catch","closeMedia","stream","tracks","getTracks","forEach","track","stop","getImg","canvas","ctx","getContext","drawImage","videoWidth","videoHeight","imgStr","toDataURL","base64Img","split","pop","imgData","saveImg","data","document","getElementById","src","saveLink","createElementNS","href","download","event","createEvent","initMouseEvent","window","dispatchEvent"],"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","sourcesContent":["// import { Box, FormLabel, makeStyles, Typography } from \"@material-ui/core\";\r\n// import Compressor from \"compressorjs\";\r\n// import { LocalizeContext } from \"i18n\";\r\n// import { fillTextToImg } from \"js/util\";\r\n// import React, { useRef, useState } from \"react\";\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles(({ spacing }) => ({\r\n//   btm: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"space-between\",\r\n//     margin: spacing(1, 1, 0, 1),\r\n//   },\r\n//   root: {\r\n//     display: \"grid\",\r\n//     padding: spacing(1, 0),\r\n//     borderBottom: \" 1px solid #e0e0e0\",\r\n//     backgroundColor: \"#FFF\",\r\n//   },\r\n//   lable: {\r\n//     margin: spacing(0, 0, 1, 0),\r\n//     color: \"rgba(0, 0, 0, 0.87)\",\r\n//   },\r\n//   inputFile: {\r\n//     width: \"0.1px\",\r\n//     height: \"0.1px\",\r\n//     opacity: 0,\r\n//     overflow: \"hidden\",\r\n//     position: \"absolute\",\r\n//     top: \"0\",\r\n//     zIndex: -1,\r\n//   },\r\n//   file: {\r\n//     height: \"160px\",\r\n//     position: \"relative\",\r\n//     overflow: \"hidden\",\r\n//     textAlign: \"center\",\r\n//   },\r\n// }));\r\n\r\n// export const Photo = (props) => {\r\n//   const i18n = React.useContext(LocalizeContext);\r\n//   const classes = useStyles();\r\n//   const [photoStyle, setPhotoStyle] = useState({\r\n//     width: \"auto\",\r\n//     height: \"100%\",\r\n//   });\r\n//   const photoEl = useRef(null);\r\n//   const iptRef = useRef(null);\r\n//   const projectData = useParams();\r\n//   const onPhotoChange = (e) => {\r\n//     const fileReader = new FileReader();\r\n//     const file = e.target.files[0];\r\n\r\n//     fileReader.onloadend = (e) => {\r\n//       const photo = e.target.result;\r\n//       fillTextToImg(photo, projectData).then((res) => {\r\n//         props.onChange(res);\r\n//        })\r\n//       const i = new Image();\r\n//       i.onload = () => {\r\n//         setPhotoStyle({\r\n//           // width: photoEl.current.clientWidth,\r\n//           // height: (photoEl.current.clientWidth / i.width) * i.height,\r\n//           width: \"auto\",\r\n//           height: \"100%\",\r\n//         });\r\n//       };\r\n//       i.src = photo;\r\n//     };\r\n//     if (file) {\r\n//       new Compressor(file, {\r\n//         quality: 0.2,\r\n//         convertSize: 400000,\r\n//         success(result) {\r\n//           fileReader.readAsDataURL(result);\r\n//         },\r\n//         error(err) {\r\n//           console.log(err.message);\r\n//         },\r\n//       });\r\n//     } else {\r\n//       props.onChange(\"#\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Typography variant=\"subtitle2\" className={classes.lable}>\r\n//         {props.label}\r\n//       </Typography>\r\n//       <div>\r\n//         <input\r\n//           className={classes.inputFile}\r\n//           type=\"file\"\r\n//           accept=\"image/x-png,image/jpeg,image/gif\"\r\n//           id={props.id}\r\n//           ref={iptRef}\r\n//           onChange={onPhotoChange}\r\n//         />\r\n//       </div>\r\n//       <div>\r\n//         {/* <Typography variant=\"body2\">{props.description}</Typography> */}\r\n//         <FormLabel required={props.required}>\r\n//           <Typography\r\n//             component=\"span\"\r\n//             variant=\"subtitle2\"\r\n//             className={classes.lable}\r\n//           >\r\n//             {props.description}\r\n//           </Typography>\r\n//         </FormLabel>\r\n//       </div>\r\n//       <Box border={1} className={classes.file}>\r\n//         <img src={props.value} style={photoStyle} ref={photoEl} alt=\"\" />\r\n//       </Box>\r\n//       <Box className={classes.btm}>\r\n//         <Typography\r\n//           color=\"secondary\"\r\n//           variant=\"body2\"\r\n//           onClick={() => {\r\n//             props.onChange(\"#\");\r\n//             iptRef.current.value = \"\";\r\n//           }}\r\n//         >\r\n//           {i18n.ISNTAPP_DELETE}\r\n//         </Typography>\r\n//         <label htmlFor={props.id}>\r\n//           <Typography color=\"secondary\" variant=\"body2\">\r\n//             {i18n.ISNTAPP_IMPORT_PICTURES}\r\n//           </Typography>\r\n//         </label>\r\n//       </Box>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\nimport React, { useRef } from 'react';\r\nconst CameraComponent = () => {\r\n\r\n  const cameraVideoRef = useRef(null);\r\n  const cameraCanvasRef = useRef(null);\r\n\r\n  function successFunc(mediaStream) {\r\n    const video = cameraVideoRef.current;\r\n    // const video = document.getElementById('cameraVideo') as HTMLVideoElement;\r\n    // 旧的浏览器可能没有srcObject\r\n    if ('srcObject' in video) {\r\n      video.srcObject = mediaStream;\r\n    }\r\n    video.onloadedmetadata = () => {\r\n      video.play();\r\n    };\r\n  }\r\n\r\n  function errorFunc(err) {\r\n    console.log(`${err.name}: ${err.message}`);\r\n    // always check for errors at the end.\r\n  }\r\n  // 启动摄像头\r\n  const openMedia = () => { // 打开摄像头\r\n    const opt = {\r\n      audio: false,\r\n      video: {\r\n        width: 1280,\r\n        height: 720\r\n      }\r\n    };\r\n    navigator.mediaDevices.getUserMedia(opt).then(successFunc).catch(errorFunc);\r\n  };\r\n  // 关闭摄像头\r\n  const closeMedia = () => {\r\n    // const video = document.getElementById('cameraVideo') as HTMLVideoElement;\r\n    const video = cameraVideoRef.current;\r\n    const stream = video.srcObject;\r\n    if ('getTracks' in stream) {\r\n      const tracks = stream.getTracks();\r\n      tracks.forEach(track => {\r\n        track.stop();\r\n      });\r\n    }\r\n  };\r\n\r\n  const getImg = () => { // 获取图片资源\r\n    // const video = document.getElementById('cameraVideo') as HTMLVideoElement;\r\n    // const canvas = document.getElementById('cameraCanvas') as HTMLCanvasElement;\r\n    const video = cameraVideoRef.current;\r\n    const canvas = cameraCanvasRef.current;\r\n    if (canvas == null) {\r\n      return;\r\n    }\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.drawImage(video, 0, 0, video.videoWidth, video.videoHeight); // 把视频中的一帧在canvas画布里面绘制出来\r\n    const imgStr = canvas.toDataURL(); // 将图片资源转成字符串\r\n    const base64Img = imgStr.split(';base64,').pop(); // 将图片资源转成base64格式\r\n    const imgData = {\r\n      base64Img\r\n    };\r\n    closeMedia(); // 获取到图片之后可以自动关闭摄像头\r\n    return imgData;\r\n  };\r\n\r\n\r\n  const saveImg = () => { // electron项目保存到本地\r\n    const data = getImg();\r\n    document.getElementById('imgTag').src = data.base64Img\r\n    // 网页保存图片的方法\r\n    const saveLink = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\r\n    saveLink.href = data.base64Img;\r\n    saveLink.download = './i.png';\r\n    const event = document.createEvent('MouseEvents');\r\n    event.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\r\n    saveLink.dispatchEvent(event);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <video\r\n        id=\"cameraVideo\"\r\n        ref={cameraVideoRef}\r\n        style={{\r\n          width: '1280px', height: '720px'\r\n        }}\r\n      />\r\n      <canvas\r\n        id=\"cameraCanvas\"\r\n        ref={cameraCanvasRef}\r\n        width={1280}\r\n        height={720}\r\n        style={{\r\n          width: '1280px', height: '720px'\r\n        }}\r\n      />\r\n      <img id=\"imgTag\" src=\"\" alt=\"imgTag\" />\r\n      <button onClick={openMedia} >打开摄像头</button>\r\n      <button onClick={saveImg} >保存</button>\r\n      <button onClick={closeMedia} >关闭摄像头</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}
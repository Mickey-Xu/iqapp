{"ast":null,"code":"import*as api from\"api\";import*as action from\"actions\";export var setTasks=function setTasks(data){return{type:\"SET_TASKS\",payload:data};};export var fetchCreateTask=function fetchCreateTask(data){return function(dispatch){dispatch(action.showLoading());return api.createTask(data).then(function(response){//get task\ndispatch(action.hideLoading());}).catch(function(error){if(error.code===401){dispatch(action.setAuth(null));}dispatch(action.setError(error.message));}).finally(function(){dispatch(action.hideLoading());});};};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/actions/task.js"],"names":["api","action","setTasks","data","type","payload","fetchCreateTask","dispatch","showLoading","createTask","then","response","hideLoading","catch","error","code","setAuth","setError","message","finally"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,GAAZ,KAAqB,KAArB,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,SAAxB,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,QAAW,CACjCC,IAAI,CAAE,WAD2B,CAEjCC,OAAO,CAAEF,IAFwB,CAAX,EAAjB,CAKP,MAAO,IAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACH,IAAD,QAAU,UAACI,QAAD,CAAc,CACrDA,QAAQ,CAACN,MAAM,CAACO,WAAP,EAAD,CAAR,CACA,MAAOR,CAAAA,GAAG,CACPS,UADI,CACON,IADP,EAEJO,IAFI,CAEC,SAACC,QAAD,CAAc,CAClB;AACAJ,QAAQ,CAACN,MAAM,CAACW,WAAP,EAAD,CAAR,CACD,CALI,EAMJC,KANI,CAME,SAACC,KAAD,CAAW,CAChB,GAAIA,KAAK,CAACC,IAAN,GAAe,GAAnB,CAAwB,CACtBR,QAAQ,CAACN,MAAM,CAACe,OAAP,CAAe,IAAf,CAAD,CAAR,CACD,CACDT,QAAQ,CAACN,MAAM,CAACgB,QAAP,CAAgBH,KAAK,CAACI,OAAtB,CAAD,CAAR,CACD,CAXI,EAYJC,OAZI,CAYI,UAAM,CACbZ,QAAQ,CAACN,MAAM,CAACW,WAAP,EAAD,CAAR,CACD,CAdI,CAAP,CAeD,CAjB8B,EAAxB","sourcesContent":["import * as api from \"api\";\r\nimport * as action from \"actions\";\r\n\r\nexport const setTasks = (data) => ({\r\n  type: \"SET_TASKS\",\r\n  payload: data,\r\n});\r\n\r\nexport const fetchCreateTask = (data) => (dispatch) => {\r\n  dispatch(action.showLoading());\r\n  return api\r\n    .createTask(data)\r\n    .then((response) => {\r\n      //get task\r\n      dispatch(action.hideLoading());\r\n    })\r\n    .catch((error) => {\r\n      if (error.code === 401) {\r\n        dispatch(action.setAuth(null));\r\n      }\r\n      dispatch(action.setError(error.message));\r\n    })\r\n    .finally(() => {\r\n      dispatch(action.hideLoading());\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
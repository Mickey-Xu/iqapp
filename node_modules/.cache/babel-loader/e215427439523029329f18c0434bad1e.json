{"ast":null,"code":"import _slicedToArray from\"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{Box,Button,Checkbox,Grid}from\"@material-ui/core\";import{withStyles}from\"@material-ui/core/styles\";import*as action from\"actions\";import React,{useState}from\"react\";import{connect}from\"react-redux\";import{LocalizeContext}from\"i18n\";var FitterAssignment=withStyles(function(_ref){var spacing=_ref.spacing,palette=_ref.palette;return{root:{display:\"flex\",borderBottomColor:palette.grey[\"300\"],borderBottomStyle:\"solid\",borderBottomWidth:1,padding:spacing(1,0)}};})(function(_ref2){var defaultAssignedList=_ref2.defaultAssignedList,classes=_ref2.classes,data=_ref2.data,projectNumber=_ref2.projectNumber,confirm=_ref2.confirm;var i18n=React.useContext(LocalizeContext);var _useState=useState(defaultAssignedList),_useState2=_slicedToArray(_useState,2),fitterConfirmList=_useState2[0],setFitterConfirmList=_useState2[1];var assignedList=function assignedList(sqmNr){var newFitterConfirmList=fitterConfirmList.slice(0);var fitterIndex=newFitterConfirmList.indexOf(sqmNr);if(fitterIndex>-1){newFitterConfirmList.splice(fitterIndex,1);}else{newFitterConfirmList.push(sqmNr);}setFitterConfirmList(newFitterConfirmList);};return/*#__PURE__*/React.createElement(Box,{my:2},/*#__PURE__*/React.createElement(Box,{textAlign:\"right\"},/*#__PURE__*/React.createElement(Button,{style:{textTransform:\"none\"},color:\"primary\",onClick:function onClick(){confirm({projectNo:projectNumber,sqmNr:fitterConfirmList});}},i18n.GENERAL_CONFIRM)),data.map(function(item,key){return/*#__PURE__*/React.createElement(Box,{className:classes.root,key:key},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:0,style:{flex:\"auto\"}},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},item.fitterName),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},item.sqmNr)),/*#__PURE__*/React.createElement(Grid,{container:true,spacing:1},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},item.fitterRole),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},item.productFamilyName))),/*#__PURE__*/React.createElement(Box,{style:{flex:\"auto\"}},/*#__PURE__*/React.createElement(Checkbox,{color:\"primary\",checked:fitterConfirmList.includes(item.sqmNr),onChange:function onChange(){assignedList(item.sqmNr);}})));}));});var mapStateToProps=function mapStateToProps(_ref3,_ref4){var fittersAssignmentTransfer=_ref3.fittersAssignmentTransfer,fittersCertification=_ref3.fittersCertification,productFamilies=_ref3.productFamilies;var projectNumber=_ref4.projectNumber;var fitterAssignmentList=[];var defaultAssignedList=[];var joinProductFramilyName=function joinProductFramilyName(item){var framilyNames=\"\";var bias=\"\";var productFamilyLists=item.productFamily.split(\"/\");if(productFamilyLists.length>1){productFamilyLists.forEach(function(key,index){if(index!==0){bias=\"/\";}framilyNames+=bias+productFamilies[key].name;});}else{framilyNames=productFamilies[item.productFamily].name;}return framilyNames;};Object.keys(fittersCertification).forEach(function(key){if(fittersCertification[key].fitterRole===\"TL\"){fittersCertification[key].productFamilyName=joinProductFramilyName(fittersCertification[key]);fitterAssignmentList.unshift(fittersCertification[key]);}else{fittersCertification[key].productFamilyName=joinProductFramilyName(fittersCertification[key]);fitterAssignmentList.push(fittersCertification[key]);}});(fittersAssignmentTransfer[projectNumber]?fittersAssignmentTransfer[projectNumber]:[]).forEach(function(item){defaultAssignedList.push(item.sqmNr);});return{data:fitterAssignmentList,defaultAssignedList:defaultAssignedList};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{confirm:function confirm(data){dispatch(action.confirmFittersAssignmentList(data));}};};export default connect(mapStateToProps,mapDispatchToProps)(FitterAssignment);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/FitterAssignment/index.js"],"names":["Box","Button","Checkbox","Grid","withStyles","action","React","useState","connect","LocalizeContext","FitterAssignment","spacing","palette","root","display","borderBottomColor","grey","borderBottomStyle","borderBottomWidth","padding","defaultAssignedList","classes","data","projectNumber","confirm","i18n","useContext","fitterConfirmList","setFitterConfirmList","assignedList","sqmNr","newFitterConfirmList","slice","fitterIndex","indexOf","splice","push","textTransform","projectNo","GENERAL_CONFIRM","map","item","key","flex","fitterName","fitterRole","productFamilyName","includes","mapStateToProps","fittersAssignmentTransfer","fittersCertification","productFamilies","fitterAssignmentList","joinProductFramilyName","framilyNames","bias","productFamilyLists","productFamily","split","length","forEach","index","name","Object","keys","unshift","mapDispatchToProps","dispatch","confirmFittersAssignmentList"],"mappings":"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","sourcesContent":["import { Box, Button, Checkbox, Grid } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as action from \"actions\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LocalizeContext } from \"i18n\";\r\n\r\nconst FitterAssignment = withStyles(({ spacing, palette }) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      borderBottomColor: palette.grey[\"300\"],\r\n      borderBottomStyle: \"solid\",\r\n      borderBottomWidth: 1,\r\n      padding: spacing(1, 0),\r\n    },\r\n  };\r\n})(({ defaultAssignedList, classes, data, projectNumber, confirm }) => {\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  const [fitterConfirmList, setFitterConfirmList] = useState(\r\n    defaultAssignedList\r\n  );\r\n\r\n  const assignedList = (sqmNr) => {\r\n    let newFitterConfirmList = fitterConfirmList.slice(0);\r\n    const fitterIndex = newFitterConfirmList.indexOf(sqmNr);\r\n    if (fitterIndex > -1) {\r\n      newFitterConfirmList.splice(fitterIndex, 1);\r\n    } else {\r\n      newFitterConfirmList.push(sqmNr);\r\n    }\r\n    setFitterConfirmList(newFitterConfirmList);\r\n  };\r\n\r\n  return (\r\n    <Box my={2}>\r\n      <Box textAlign={\"right\"}>\r\n        <Button\r\n          style={{ textTransform: \"none\" }}\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            confirm({ projectNo: projectNumber, sqmNr: fitterConfirmList });\r\n          }}\r\n        >\r\n          {i18n.GENERAL_CONFIRM}\r\n        </Button>\r\n      </Box>\r\n      {data.map((item, key) => {\r\n        return (\r\n          <Box className={classes.root} key={key}>\r\n            <Grid container spacing={0} style={{ flex: \"auto\" }}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={6}>\r\n                  {item.fitterName}\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item.sqmNr}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={6}>\r\n                  {item.fitterRole}\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item.productFamilyName}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Box style={{ flex: \"auto\" }}>\r\n              <Checkbox\r\n                color=\"primary\"\r\n                checked={fitterConfirmList.includes(item.sqmNr)}\r\n                onChange={() => {\r\n                  assignedList(item.sqmNr);\r\n                }}\r\n              ></Checkbox>\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n});\r\n\r\nconst mapStateToProps = (\r\n  { fittersAssignmentTransfer, fittersCertification, productFamilies },\r\n  { projectNumber }\r\n) => {\r\n  let fitterAssignmentList = [];\r\n  let defaultAssignedList = [];\r\n\r\n  const joinProductFramilyName = (item) => {\r\n    let framilyNames = \"\";\r\n    let bias = \"\";\r\n    const productFamilyLists = item.productFamily.split(\"/\");\r\n    if (productFamilyLists.length > 1) {\r\n      productFamilyLists.forEach((key, index) => {\r\n        if (index !== 0) {\r\n          bias = \"/\";\r\n        }\r\n        framilyNames += bias + productFamilies[key].name;\r\n      });\r\n    } else {\r\n      framilyNames = productFamilies[item.productFamily].name;\r\n    }\r\n    return framilyNames;\r\n  };\r\n\r\n  Object.keys(fittersCertification).forEach((key) => {\r\n    if (fittersCertification[key].fitterRole === \"TL\") {\r\n      fittersCertification[key].productFamilyName = joinProductFramilyName(\r\n        fittersCertification[key]\r\n      );\r\n      fitterAssignmentList.unshift(fittersCertification[key]);\r\n    } else {\r\n      fittersCertification[key].productFamilyName = joinProductFramilyName(\r\n        fittersCertification[key]\r\n      );\r\n      fitterAssignmentList.push(fittersCertification[key]);\r\n    }\r\n  });\r\n\r\n  (fittersAssignmentTransfer[projectNumber]\r\n    ? fittersAssignmentTransfer[projectNumber]\r\n    : []\r\n  ).forEach((item) => {\r\n    defaultAssignedList.push(item.sqmNr);\r\n  });\r\n\r\n  return {\r\n    data: fitterAssignmentList,\r\n    defaultAssignedList: defaultAssignedList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    confirm: (data) => {\r\n      dispatch(action.confirmFittersAssignmentList(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FitterAssignment);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TemplateForm\\\\Photo\\\\index.js\";\nimport { ActivityIndicator, StyleSheet, Text, Pressable, View } from 'react-native';\nimport React, { useEffect, useRef } from 'react';\nimport { useCameraPermission, useCameraDevice, Camera } from 'react-native-vision-camera';\nimport { useAppState } from '@react-native-community/hooks';\nimport { useIsFocused } from '@react-navigation/native';\nimport { CameraRoll } from \"@react-native-camera-roll/camera-roll\";\nexport const Photo = () => {\n  const {\n    hasPermission,\n    requestPermission\n  } = useCameraPermission();\n  const device = useCameraDevice(\"back\", {\n    physicalDevices: [\"ultra-wide-angle-camera\"]\n  });\n  const camera = useRef < Camera > null;\n  /**\r\n  * useAppState当应用程序关闭或置于后台时，将在“活动”、“后台”或（iOS）“非活动”之一之间更改\r\n  * useIsFocused根据屏幕当前的焦点状态呈现不同的内容,例如导航到新屏幕时,\r\n  * 使用此挂钩会触发组件的重新渲染\r\n  */\n\n  const isFocused = useIsFocused();\n  const appState = useAppState();\n  const isActive = isFocused && appState === \"active\";\n  useEffect(() => {\n    if (!hasPermission) {\n      requestPermission();\n    }\n  }, [hasPermission]);\n\n  if (!hasPermission) {\n    return /*#__PURE__*/React.createElement(ActivityIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    });\n  }\n\n  if (!device) {\n    return /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    }, \"Camera device not found\");\n  }\n\n  const Tophoto = async () => {\n    var _camera$current;\n\n    const photo = await ((_camera$current = camera.current) === null || _camera$current === void 0 ? void 0 : _camera$current.takePhoto({\n      flash: 'auto'\n    }));\n    await CameraRoll.saveAsset(`file://${photo === null || photo === void 0 ? void 0 : photo.path}`), {\n      type: 'photo'\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Camera, {\n    ref: camera,\n    style: [styles.abusfell],\n    device: device,\n    isActive: isActive,\n    photo: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Pressable, {\n    onPress: Tophoto,\n    style: [styles.test],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\nconst styles = StyleSheet.create({\n  abusfell: {\n    flex: 1\n  },\n  test: {\n    position: \"absolute\",\n    alignSelf: \"center\",\n    bottom: 10,\n    width: 75,\n    height: 75,\n    backgroundColor: \"red\",\n    borderRadius: 75,\n    opacity: 0.4\n  }\n});","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TemplateForm/Photo/index.js"],"names":["ActivityIndicator","StyleSheet","Text","Pressable","View","React","useEffect","useRef","useCameraPermission","useCameraDevice","Camera","useAppState","useIsFocused","CameraRoll","Photo","hasPermission","requestPermission","device","physicalDevices","camera","isFocused","appState","isActive","Tophoto","photo","current","takePhoto","flash","saveAsset","path","type","flex","styles","abusfell","test","create","position","alignSelf","bottom","width","height","backgroundColor","borderRadius","opacity"],"mappings":"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","sourcesContent":["import { ActivityIndicator, StyleSheet, Text, Pressable, View } from 'react-native'\r\nimport React, { useEffect, useRef } from 'react'\r\nimport { useCameraPermission, useCameraDevice, Camera } from 'react-native-vision-camera'\r\nimport { useAppState } from '@react-native-community/hooks'\r\nimport { useIsFocused } from '@react-navigation/native';\r\nimport { CameraRoll } from \"@react-native-camera-roll/camera-roll\"; \r\nexport const Photo = () => {\r\n  const { hasPermission, requestPermission } = useCameraPermission()\r\n  const device = useCameraDevice(\"back\", {\r\n    physicalDevices: [\"ultra-wide-angle-camera\"]\r\n  })\r\n  const camera = useRef < Camera > (null)\r\n  /**\r\n * useAppState当应用程序关闭或置于后台时，将在“活动”、“后台”或（iOS）“非活动”之一之间更改\r\n * useIsFocused根据屏幕当前的焦点状态呈现不同的内容,例如导航到新屏幕时,\r\n * 使用此挂钩会触发组件的重新渲染\r\n */\r\n  const isFocused = useIsFocused()\r\n  const appState = useAppState()\r\n  const isActive = isFocused && appState === \"active\"\r\n  useEffect(() => {\r\n    if (!hasPermission) {\r\n      requestPermission()\r\n    }\r\n  }, [hasPermission])\r\n  if (!hasPermission) {\r\n    return <ActivityIndicator></ActivityIndicator>\r\n  }\r\n  if (!device) {\r\n    return <Text>Camera device not found</Text>\r\n  }\r\n  const Tophoto = async () => {\r\n    const photo = await camera.current?.takePhoto({\r\n      flash: 'auto'\r\n    })\r\n    await CameraRoll.saveAsset(`file://${photo?.path}`), {\r\n      type: 'photo',\r\n    }\r\n  }\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <Camera\r\n        ref={camera}\r\n        style={[styles.abusfell]}\r\n        device={device}\r\n        isActive={isActive}\r\n        photo={true}\r\n      >\r\n      </Camera>\r\n      <Pressable onPress={Tophoto} style={[styles.test]}></Pressable>\r\n    </View>\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n  abusfell: {\r\n    flex: 1\r\n  },\r\n  test: {\r\n    position: \"absolute\",\r\n    alignSelf: \"center\",\r\n    bottom: 10,\r\n    width: 75,\r\n    height: 75,\r\n    backgroundColor: \"red\",\r\n    borderRadius: 75,\r\n    opacity: 0.4\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}
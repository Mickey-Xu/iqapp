{"ast":null,"code":"import { get, post } from \"./base\";\nimport store from \"js/store\";\nimport _ from \"lodash\";\nexport const fetchMasterData = data => {\n  return get(\"/app/orderMDGet\", data);\n};\nexport const fetchOrdersData = data => {\n  return get(\"/app/ordersGet\", data);\n};\nexport const fetchOrdersDataByProjects = data => {\n  return get(\"/app/ordersGet/ByProjects\", data);\n};\n\nfunction customizer(objValue, srcValue) {\n  if (_.isArray(objValue)) {\n    return objValue.concat(srcValue);\n  }\n}\n\nexport const fetchOrdersDataByProjectsAndMerge = (projects, step, userInfo) => {\n  const auth = store.getState().auth;\n  let promises = [];\n  let splitCount = Math.ceil(projects.length / step);\n\n  for (let i = 0; i < splitCount; i++) {\n    let ps = {\n      projectNos: projects.slice(i * step, (i + 1) * step)\n    };\n\n    if (userInfo === null || userInfo === void 0 ? void 0 : userInfo.pNumber) {\n      ps[\"pNumber\"] = userInfo.pNumber;\n    }\n\n    promises.push(fetchOrdersDataByProjects(ps));\n  }\n\n  if (promises.length === 0) {\n    // Just get the error message through call api\n    const message = (auth === null || auth === void 0 ? void 0 : auth.roles[0]) === \"SL\" ? \"请到我的->同步界面上，点最右上角的同步按钮同步数据\" : \"未发现该用户的订单信息\";\n    return Promise.reject({\n      message: message\n    });\n  }\n\n  let result = {};\n  let fulfilledValues = [];\n  return Promise.allSettled(promises).then(results => {\n    results.forEach(result => {\n      if (result.status === \"fulfilled\") {\n        fulfilledValues.push(result.value);\n      }\n    });\n\n    if (fulfilledValues.length === 0) {\n      const message = (auth === null || auth === void 0 ? void 0 : auth.roles[0]) === \"SL\" ? \"请到我的->同步界面上，点最右上角的同步按钮同步数据\" : \"未发现该用户的订单信息\";\n      return Promise.reject({\n        message: message\n      });\n    } else {\n      for (let i = 0; i < fulfilledValues.length; i++) {\n        _.mergeWith(result, fulfilledValues[i].data, customizer);\n      }\n\n      return Promise.resolve(result);\n    }\n  });\n};\nexport const updateOrderInstallationsMethod = data => {\n  return post(\"/app/orderInstallationMethod\", data);\n};\nexport const updateOrderActivityStatus = data => {\n  return post(\"/app/activityStatusSet\", data);\n};\nexport const getInstMethods = () => {\n  return get(\"/app/instMethods\");\n};\nexport const updateLocalInstallationStepConfirmDate = data => {\n  return post(\"/app/convertStepsConfirmedDate\", data);\n};\nexport const getLocalInstallationStepConfirmDate = data => {\n  return get(\"/app/convertStepsConfirmedDate\", data);\n};\nexport const checkFileIsExisting = data => {\n  return post(\"/app/CheckFileExisting\", data);\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/api/orders.js"],"names":["get","post","store","_","fetchMasterData","data","fetchOrdersData","fetchOrdersDataByProjects","customizer","objValue","srcValue","isArray","concat","fetchOrdersDataByProjectsAndMerge","projects","step","userInfo","auth","getState","promises","splitCount","Math","ceil","length","i","ps","projectNos","slice","pNumber","push","message","roles","Promise","reject","result","fulfilledValues","allSettled","then","results","forEach","status","value","mergeWith","resolve","updateOrderInstallationsMethod","updateOrderActivityStatus","getInstMethods","updateLocalInstallationStepConfirmDate","getLocalInstallationStepConfirmDate","checkFileIsExisting"],"mappings":"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","sourcesContent":["import { get, post } from \"./base\";\r\nimport store from \"js/store\";\r\nimport _ from \"lodash\";\r\n\r\nexport const fetchMasterData = (data) => {\r\n  return get(\"/app/orderMDGet\", data);\r\n};\r\n\r\nexport const fetchOrdersData = (data) => {\r\n  return get(\"/app/ordersGet\", data);\r\n};\r\n\r\nexport const fetchOrdersDataByProjects = (data) => {\r\n  return get(\"/app/ordersGet/ByProjects\", data);\r\n};\r\n\r\nfunction customizer(objValue, srcValue) {\r\n  if (_.isArray(objValue)) {\r\n    return objValue.concat(srcValue);\r\n  }\r\n}\r\n\r\nexport const fetchOrdersDataByProjectsAndMerge = (projects, step, userInfo) => {\r\n  const auth = store.getState().auth;\r\n  let promises = [];\r\n\r\n  let splitCount = Math.ceil(projects.length / step);\r\n  for (let i = 0; i < splitCount; i++) {\r\n    let ps = { projectNos: projects.slice(i * step, (i + 1) * step) };\r\n    if (userInfo?.pNumber) {\r\n      ps[\"pNumber\"] = userInfo.pNumber;\r\n    }\r\n    promises.push(fetchOrdersDataByProjects(ps));\r\n  }\r\n\r\n  if (promises.length === 0) {\r\n    // Just get the error message through call api\r\n    const message = auth?.roles[0] === \"SL\" ? \"请到我的->同步界面上，点最右上角的同步按钮同步数据\" : \"未发现该用户的订单信息\";\r\n\r\n    return Promise.reject({ message: message });\r\n  }\r\n\r\n  let result = {};\r\n  let fulfilledValues = [];\r\n\r\n  return Promise.allSettled(promises).then((results) => {\r\n    results.forEach((result) => {\r\n      if (result.status === \"fulfilled\") {\r\n        fulfilledValues.push(result.value);\r\n      }\r\n    });\r\n\r\n    if (fulfilledValues.length === 0) {\r\n      const message = auth?.roles[0] === \"SL\" ? \"请到我的->同步界面上，点最右上角的同步按钮同步数据\" : \"未发现该用户的订单信息\";\r\n\r\n      return Promise.reject({ message: message });\r\n    } else {\r\n      for (let i = 0; i < fulfilledValues.length; i++) {\r\n        _.mergeWith(result, fulfilledValues[i].data, customizer);\r\n      }\r\n\r\n      return Promise.resolve(result);\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateOrderInstallationsMethod = (data) => {\r\n  return post(\"/app/orderInstallationMethod\", data);\r\n};\r\n\r\nexport const updateOrderActivityStatus = (data) => {\r\n  return post(\"/app/activityStatusSet\", data);\r\n};\r\n\r\nexport const getInstMethods = () => {\r\n  return get(\"/app/instMethods\");\r\n};\r\n\r\nexport const updateLocalInstallationStepConfirmDate = (data) => {\r\n  return post(\"/app/convertStepsConfirmedDate\", data);\r\n};\r\n\r\nexport const getLocalInstallationStepConfirmDate = (data) => {\r\n  return get(\"/app/convertStepsConfirmedDate\", data);\r\n};\r\n\r\nexport const checkFileIsExisting = (data) => {\r\n  return post(\"/app/CheckFileExisting\", data);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
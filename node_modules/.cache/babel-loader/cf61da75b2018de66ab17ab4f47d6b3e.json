{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\NewUserResetPasswordPage\\\\index.js\";\nimport { Box, Button, makeStyles, Typography } from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport * as action from \"actions\";\nimport { LocalizeContext } from \"i18n\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nconst useStyles = makeStyles(({\n  spacing\n}) => ({\n  main: {\n    margin: spacing(1, 2)\n  },\n  formControl: {\n    marginBottom: spacing(2)\n  },\n  submit: {\n    position: \"fixed\",\n    bottom: spacing(4),\n    width: \"90%\"\n  },\n  reset: {\n    position: \"fixed\",\n    bottom: spacing(4),\n    width: \"90%\"\n  },\n  descript: {\n    marginTop: spacing(1)\n  }\n}));\n\nconst NewUserResetPasswordPage = ({\n  submit,\n  firstLogin,\n  firstLoginPassword\n}) => {\n  const classes = useStyles();\n  const i18n = React.useContext(LocalizeContext);\n  const [values, setValues] = React.useState({\n    oldPassword: firstLogin === \"true\" ? firstLoginPassword : \"\",\n    newPassword: \"\",\n    confrimNewPassword: \"\"\n  });\n  const [isShowPassword, setShowPassword] = React.useState({\n    oldPassword: false,\n    newPassword: false,\n    confrimNewPassword: false\n  });\n  const fields = [{\n    name: \"oldPassword\",\n    label: i18n.ISNTAPP_OLD_PASSWORD,\n    showPassword: firstLoginPassword,\n    firstLogin: firstLogin\n  }, {\n    name: \"newPassword\",\n    label: i18n.ISNTAPP_NEW_PASSWORD,\n    showPassword: isShowPassword.newPassword\n  }, {\n    name: \"confrimNewPassword\",\n    label: i18n.ISNTAPP_CONFIRME_CHANGE_PASSWORD,\n    showPassword: isShowPassword.confrimNewPassword,\n    descript: \"密码必须是由6-16位的数字、大写字母、小写字母、特殊字符组成。\"\n  }];\n\n  const handleChange = prop => event => {\n    setValues({ ...values,\n      [prop]: event.target.value.trim()\n    });\n  };\n\n  const handleClickShowPassword = name => event => {\n    setShowPassword({ ...isShowPassword,\n      [name]: !isShowPassword[name]\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const verificationSubmit = () => {\n    if (!values.oldPassword) {\n      alert(\"请输入旧密码\");\n    } else if (!values.newPassword) {\n      alert(\"请输入新密码\");\n    } else if (checkoutPassword(values.newPassword)) {\n      return true;\n    } else if (!values.confrimNewPassword) {\n      alert(\"请输入确认新密码\");\n    } else if (values.oldPassword === values.confrimNewPassword) {\n      alert(\"新密码与初始密码不能相同\");\n    } else if (checkoutPassword(values.confrimNewPassword)) {\n      return true;\n    } else if (values.newPassword !== values.confrimNewPassword) {\n      alert(\"两次新密码不一致\");\n    } else {\n      submit({\n        currentPassword: values.oldPassword,\n        newPassword: values.newPassword\n      }, firstLogin);\n    }\n  };\n\n  const checkoutPassword = password => {\n    var hasUpperCase = /[A-Z]/.test(password);\n    var hasLowerCase = /[a-z]/.test(password);\n    var hasNumbers = /\\d/.test(password);\n    var hasNonalphas = /\\W/.test(password);\n\n    if (password.length < 6) {\n      alert(\"请至少输入6位密码\");\n      return true;\n    } else if (password.length > 16) {\n      alert(\"密码长度不能大于16位\");\n      return true;\n    } else if (!hasUpperCase) {\n      alert(\"请至少输入一个大写字母\");\n      return true;\n    } else if (!hasLowerCase) {\n      alert(\"请至少输入一个小写字母\");\n      return true;\n    } else if (!hasNumbers) {\n      alert(\"请至少输入一个数字\");\n      return true;\n    } else if (!hasNonalphas) {\n      alert(\"请至少输入一个特殊字符\");\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"error\",\n    style: {\n      marginTop: \"16px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, \"\\u65B0\\u7528\\u6237\\u9996\\u6B21\\u767B\\u5F55\\u987B\\u91CD\\u7F6E\\u5BC6\\u7801*\"), fields.map((item, index) => {\n    return item.firstLogin !== \"true\" && /*#__PURE__*/React.createElement(FormControl, {\n      fullWidth: true,\n      required: true,\n      key: index,\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, item.label), /*#__PURE__*/React.createElement(Input, {\n      maxLength: \"8\",\n      type: item.showPassword ? \"text\" : \"password\",\n      value: item.password,\n      onChange: handleChange(item.name),\n      endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: handleClickShowPassword(item.name),\n        onMouseDown: handleMouseDownPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }\n      }, item.showPassword ? /*#__PURE__*/React.createElement(Visibility, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 44\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 61\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      className: classes.descript,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, item.descript));\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"rgb(220,2,2)\",\n      color: \"white\",\n      textTransform: \"capitalize\"\n    },\n    fullWidth: true,\n    onClick: () => verificationSubmit(),\n    size: \"large\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, i18n.ISNTAPP_CHANGE_PASSWORD)));\n};\n\nconst mapStateToPops = (state, {\n  match: {\n    params: {\n      firstLogin,\n      firstLoginPassword\n    }\n  }\n}) => {\n  return {\n    firstLogin,\n    firstLoginPassword\n  };\n};\n\nconst mapDispatchToState = dispatch => {\n  return {\n    submit: values => {\n      dispatch(action.firstLoginRestPassword(values));\n    }\n  };\n};\n\nexport default connect(mapStateToPops, mapDispatchToState)(NewUserResetPasswordPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/NewUserResetPasswordPage/index.js"],"names":["Box","Button","makeStyles","Typography","FormControl","IconButton","Input","InputAdornment","InputLabel","Visibility","VisibilityOff","action","LocalizeContext","React","connect","useStyles","spacing","main","margin","formControl","marginBottom","submit","position","bottom","width","reset","descript","marginTop","NewUserResetPasswordPage","firstLogin","firstLoginPassword","classes","i18n","useContext","values","setValues","useState","oldPassword","newPassword","confrimNewPassword","isShowPassword","setShowPassword","fields","name","label","ISNTAPP_OLD_PASSWORD","showPassword","ISNTAPP_NEW_PASSWORD","ISNTAPP_CONFIRME_CHANGE_PASSWORD","handleChange","prop","event","target","value","trim","handleClickShowPassword","handleMouseDownPassword","preventDefault","verificationSubmit","alert","checkoutPassword","currentPassword","password","hasUpperCase","test","hasLowerCase","hasNumbers","hasNonalphas","length","map","item","index","backgroundColor","color","textTransform","ISNTAPP_CHANGE_PASSWORD","mapStateToPops","state","match","params","mapDispatchToState","dispatch","firstLoginRestPassword"],"mappings":"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","sourcesContent":["import { Box, Button, makeStyles, Typography } from \"@material-ui/core\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport * as action from \"actions\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nconst useStyles = makeStyles(({ spacing }) => ({\r\n  main: {\r\n    margin: spacing(1, 2),\r\n  },\r\n  formControl: {\r\n    marginBottom: spacing(2),\r\n  },\r\n  submit: {\r\n    position: \"fixed\",\r\n    bottom: spacing(4),\r\n    width: \"90%\",\r\n  },\r\n  reset: {\r\n    position: \"fixed\",\r\n    bottom: spacing(4),\r\n    width: \"90%\",\r\n  },\r\n  descript: {\r\n    marginTop: spacing(1),\r\n  },\r\n}));\r\n\r\nconst NewUserResetPasswordPage = ({\r\n  submit,\r\n  firstLogin,\r\n  firstLoginPassword,\r\n}) => {\r\n  const classes = useStyles();\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  const [values, setValues] = React.useState({\r\n    oldPassword: firstLogin === \"true\" ? firstLoginPassword : \"\",\r\n    newPassword: \"\",\r\n    confrimNewPassword: \"\",\r\n  });\r\n\r\n  const [isShowPassword, setShowPassword] = React.useState({\r\n    oldPassword: false,\r\n    newPassword: false,\r\n    confrimNewPassword: false,\r\n  });\r\n\r\n  const fields = [\r\n    {\r\n      name: \"oldPassword\",\r\n      label: i18n.ISNTAPP_OLD_PASSWORD,\r\n      showPassword: firstLoginPassword,\r\n      firstLogin: firstLogin,\r\n    },\r\n    {\r\n      name: \"newPassword\",\r\n      label: i18n.ISNTAPP_NEW_PASSWORD,\r\n      showPassword: isShowPassword.newPassword,\r\n    },\r\n    {\r\n      name: \"confrimNewPassword\",\r\n      label: i18n.ISNTAPP_CONFIRME_CHANGE_PASSWORD,\r\n      showPassword: isShowPassword.confrimNewPassword,\r\n      descript: \"密码必须是由6-16位的数字、大写字母、小写字母、特殊字符组成。\",\r\n    },\r\n  ];\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value.trim() });\r\n  };\r\n\r\n  const handleClickShowPassword = (name) => (event) => {\r\n    setShowPassword({ ...isShowPassword, [name]: !isShowPassword[name] });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const verificationSubmit = () => {\r\n    if (!values.oldPassword) {\r\n      alert(\"请输入旧密码\");\r\n    } else if (!values.newPassword) {\r\n      alert(\"请输入新密码\");\r\n    } else if (checkoutPassword(values.newPassword)) {\r\n      return true;\r\n    } else if (!values.confrimNewPassword) {\r\n      alert(\"请输入确认新密码\");\r\n    } else if (values.oldPassword === values.confrimNewPassword) {\r\n      alert(\"新密码与初始密码不能相同\");\r\n    } else if (checkoutPassword(values.confrimNewPassword)) {\r\n      return true;\r\n    } else if (values.newPassword !== values.confrimNewPassword) {\r\n      alert(\"两次新密码不一致\");\r\n    } else {\r\n      submit(\r\n        {\r\n          currentPassword: values.oldPassword,\r\n          newPassword: values.newPassword,\r\n        },\r\n        firstLogin\r\n      );\r\n    }\r\n  };\r\n\r\n  const checkoutPassword = (password) => {\r\n    var hasUpperCase = /[A-Z]/.test(password);\r\n    var hasLowerCase = /[a-z]/.test(password);\r\n    var hasNumbers = /\\d/.test(password);\r\n    var hasNonalphas = /\\W/.test(password);\r\n\r\n    if (password.length < 6) {\r\n      alert(\"请至少输入6位密码\");\r\n      return true;\r\n    } else if (password.length > 16) {\r\n      alert(\"密码长度不能大于16位\");\r\n      return true;\r\n    } else if (!hasUpperCase) {\r\n      alert(\"请至少输入一个大写字母\");\r\n      return true;\r\n    } else if (!hasLowerCase) {\r\n      alert(\"请至少输入一个小写字母\");\r\n      return true;\r\n    } else if (!hasNumbers) {\r\n      alert(\"请至少输入一个数字\");\r\n      return true;\r\n    } else if (!hasNonalphas) {\r\n      alert(\"请至少输入一个特殊字符\");\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.main}>\r\n      <Typography variant=\"body2\" color=\"error\" style={{ marginTop: \"16px\" }}>\r\n        新用户首次登录须重置密码*\r\n      </Typography>\r\n      {fields.map((item, index) => {\r\n        return (\r\n          item.firstLogin !== \"true\" && (\r\n            <FormControl\r\n              fullWidth\r\n              required\r\n              key={index}\r\n              className={classes.formControl}\r\n            >\r\n              <InputLabel>{item.label}</InputLabel>\r\n              <Input\r\n                maxLength=\"8\"\r\n                type={item.showPassword ? \"text\" : \"password\"}\r\n                value={item.password}\r\n                onChange={handleChange(item.name)}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword(item.name)}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {item.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                className={classes.descript}\r\n              >\r\n                {item.descript}\r\n              </Typography>\r\n            </FormControl>\r\n          )\r\n        );\r\n      })}\r\n      <Box className={classes.submit}>\r\n        <Button\r\n          style={{\r\n            backgroundColor: \"rgb(220,2,2)\",\r\n            color: \"white\",\r\n            textTransform: \"capitalize\",\r\n          }}\r\n          fullWidth\r\n          onClick={() => verificationSubmit()}\r\n          size=\"large\"\r\n          variant=\"contained\"\r\n        >\r\n          {i18n.ISNTAPP_CHANGE_PASSWORD}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst mapStateToPops = (\r\n  state,\r\n  {\r\n    match: {\r\n      params: { firstLogin, firstLoginPassword },\r\n    },\r\n  }\r\n) => {\r\n  return { firstLogin, firstLoginPassword };\r\n};\r\n\r\nconst mapDispatchToState = (dispatch) => {\r\n  return {\r\n    submit: (values) => {\r\n      dispatch(action.firstLoginRestPassword(values));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToPops,\r\n  mapDispatchToState\r\n)(NewUserResetPasswordPage);\r\n"]},"metadata":{},"sourceType":"module"}
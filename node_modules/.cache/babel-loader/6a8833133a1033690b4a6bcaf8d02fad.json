{"ast":null,"code":"import{Box,Button,Card,CardActions,CardContent,Grid,Typography,withStyles}from\"@material-ui/core\";import{CheckCircleOutlineOutlined,DescriptionOutlined}from\"@material-ui/icons\";import HourglassEmptySharpIcon from'@material-ui/icons/HourglassEmptySharp';import{useHistory}from\"react-router-dom\";import{LocalizeContext}from\"i18n\";import React from\"react\";var TaskListCard=withStyles(function(_ref){var spacing=_ref.spacing;return{button:{borderRadius:spacing(2.5),lineHeight:\"unset\",fontSize:\"2.5rem\",padding:\"2px 14px\"},card:{marginTop:spacing(2)},cardActions:{marginLeft:\"0px\"},contentColor:{color:\"#999999\",wordBreak:\"break-word\"},fontColor:{color:\"#e54141\"// color: \"rgba(0, 0, 0, 0.54)\",\n},iconColor:{color:\"rgba(0, 0, 0, 0.54)\"}};})(function(_ref2){var classes=_ref2.classes,data=_ref2.data,submit=_ref2.submit;var i18n=React.useContext(LocalizeContext);var history=useHistory();var document=data.documentStatus===\"Done\"?i18n.ISNTAPP_UPLOADED:data.documentStatus===\"ToDo\"?i18n.ISNTAPP_JOBLIST_DOC_TODO:i18n.ISNTAPP_WITHOUT_TEMPLATES;return/*#__PURE__*/React.createElement(Card,{className:classes.card},/*#__PURE__*/React.createElement(CardContent,{onClick:function onClick(){return history.push(\"/order/\".concat(data.orderNo));}},/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Box,{mt:1,style:{display:\"inline-flex\"}},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",style:{marginRight:\"4px\"}},i18n.JOBLIST_ORDER,\":\"),/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},data.orderNo))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12},/*#__PURE__*/React.createElement(Box,{mt:1,style:{display:\"inline-flex\"}},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",style:{marginRight:\"4px\"}},i18n.PROJECTLIST_PROJECT,\":\"),/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},data.projectName))),/*#__PURE__*/React.createElement(Grid,{item:true,style:{display:\"flex\",justifyContent:'space-between',marginTop:6},xs:12},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},i18n.ISNTAPP_PLAN_START_DATE,\":\",data.planStartDate)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},i18n.ISNTAPP_ACTUAL_START_DATE,\":\",data.actualStartDate))),/*#__PURE__*/React.createElement(Grid,{item:true,style:{display:\"flex\",justifyContent:'space-between',marginTop:6},xs:12},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},i18n.ISNTAPP_PLAN_END_DATE,\":\",data.planEndDate)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},i18n.ISNTAPP_ACTUAL_END_DATE,\":\",data.actualEndDate))),/*#__PURE__*/React.createElement(Grid,{item:true,style:{display:\"flex\",justifyContent:'space-between',marginTop:6},xs:12},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6}),data.status==='closed'&&/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},i18n.ISNTAPP_ACTUAL_CLOSED_DATE,\":\",data.actualCloseDate))))),/*#__PURE__*/React.createElement(CardActions,{style:{backgroundColor:\"#f5f5f5\",padding:\"2px\",justifyContent:\"space-around\"}},/*#__PURE__*/React.createElement(Button,{size:\"small\",disabled:!data.actualStartDate?false:true,style:{display:data.status===\"awaitComplate\"||data.status===\"awaitStart\"?\"inline-grid\":\"none\"},onClick:function onClick(){submit(\"start\",data);}},/*#__PURE__*/React.createElement(HourglassEmptySharpIcon,{color:!data.actualStartDate?'action':'disabled'}),/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},i18n.ISNTAPP_START)),/*#__PURE__*/React.createElement(Button,{size:\"small\",style:{display:\"inline-grid\",textAlign:\"center\"},onClick:function onClick(){history.push(\"/documents/\".concat(data.activityNo,\"/\").concat(data.orderNo,\"/\").concat(data===null||data===void 0?void 0:data.productFamily,\"/listCard\"));}},/*#__PURE__*/React.createElement(DescriptionOutlined,{style:{margin:\"auto\"},classes:{root:classes.iconColor}}),/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},document)),/*#__PURE__*/React.createElement(Button,{disabled:data.status===\"awaitComplate\"?data.actualStartDate&&!data.actualEndDate?false:true:data.status===\"awaitClose\"?false:true,size:\"small\",style:{display:data.status===\"closed\"?\"none\":\"inline-grid\"},onClick:function onClick(){submit(data.status===\"awaitComplate\"?\"finish\":\"close\",data);}},/*#__PURE__*/React.createElement(CheckCircleOutlineOutlined,{color:data.status===\"awaitComplate\"?data.actualStartDate&&!data.actualEndDate?'action':'disabled':data.status===\"awaitClose\"?'action':'disabled'}),/*#__PURE__*/React.createElement(Typography,{variant:\"caption\"},data.status===\"awaitComplate\"||data.status===\"awaitStart\"?i18n.ISNTAPP_COMPLETE:i18n.ISNTAPP_CLOSE))));});export default TaskListCard;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TaskItemCard/index.js"],"names":["Box","Button","Card","CardActions","CardContent","Grid","Typography","withStyles","CheckCircleOutlineOutlined","DescriptionOutlined","HourglassEmptySharpIcon","useHistory","LocalizeContext","React","TaskListCard","spacing","button","borderRadius","lineHeight","fontSize","padding","card","marginTop","cardActions","marginLeft","contentColor","color","wordBreak","fontColor","iconColor","classes","data","submit","i18n","useContext","history","document","documentStatus","ISNTAPP_UPLOADED","ISNTAPP_JOBLIST_DOC_TODO","ISNTAPP_WITHOUT_TEMPLATES","push","orderNo","display","marginRight","JOBLIST_ORDER","PROJECTLIST_PROJECT","projectName","justifyContent","ISNTAPP_PLAN_START_DATE","planStartDate","ISNTAPP_ACTUAL_START_DATE","actualStartDate","ISNTAPP_PLAN_END_DATE","planEndDate","ISNTAPP_ACTUAL_END_DATE","actualEndDate","status","ISNTAPP_ACTUAL_CLOSED_DATE","actualCloseDate","backgroundColor","ISNTAPP_START","textAlign","activityNo","productFamily","margin","root","ISNTAPP_COMPLETE","ISNTAPP_CLOSE"],"mappings":"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","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  CheckCircleOutlineOutlined,\r\n  DescriptionOutlined\r\n} from \"@material-ui/icons\";\r\nimport HourglassEmptySharpIcon from '@material-ui/icons/HourglassEmptySharp';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport React from \"react\";\r\n\r\nconst TaskListCard = withStyles(({ spacing }) => {\r\n  return {\r\n    button: {\r\n      borderRadius: spacing(2.5),\r\n      lineHeight: \"unset\",\r\n      fontSize: \"2.5rem\",\r\n      padding: \"2px 14px\",\r\n    },\r\n    card: {\r\n      marginTop: spacing(2),\r\n    },\r\n    cardActions: {\r\n      marginLeft: \"0px\",\r\n    },\r\n    contentColor: {\r\n      color: \"#999999\",\r\n      wordBreak: \"break-word\",\r\n    },\r\n    fontColor: {\r\n      color: \"#e54141\",\r\n      // color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    iconColor: {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n  };\r\n})(\r\n  ({\r\n    classes,\r\n    data,\r\n    submit,\r\n  }) => {\r\n    const i18n = React.useContext(LocalizeContext);\r\n    const history = useHistory();\r\n\r\n    const document = data.documentStatus === \"Done\"\r\n      ? i18n.ISNTAPP_UPLOADED\r\n      : data.documentStatus === \"ToDo\"\r\n        ? i18n.ISNTAPP_JOBLIST_DOC_TODO\r\n        : i18n.ISNTAPP_WITHOUT_TEMPLATES;\r\n\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardContent onClick={() => history.push(`/order/${data.orderNo}`)}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Box mt={1} style={{ display: \"inline-flex\" }}>\r\n                <Typography variant=\"body2\" style={{ marginRight: \"4px\" }}>\r\n                  {i18n.JOBLIST_ORDER}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                >\r\n                  {data.orderNo}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box mt={1} style={{ display: \"inline-flex\" }}>\r\n                <Typography variant=\"body2\" style={{ marginRight: \"4px\" }}>\r\n                  {i18n.PROJECTLIST_PROJECT}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                >\r\n                  {data.projectName}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item style={{ display: \"flex\", justifyContent: 'space-between', marginTop: 6 }} xs={12}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"caption\">\r\n                  {i18n.ISNTAPP_PLAN_START_DATE}:\r\n                  {data.planStartDate}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"caption\">\r\n                  {i18n.ISNTAPP_ACTUAL_START_DATE}:\r\n                  {data.actualStartDate}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item style={{ display: \"flex\", justifyContent: 'space-between',marginTop:6 }} xs={12}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"caption\">\r\n                  {i18n.ISNTAPP_PLAN_END_DATE}:\r\n                  {data.planEndDate}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"caption\">\r\n                  {i18n.ISNTAPP_ACTUAL_END_DATE}:\r\n                  {data.actualEndDate}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item style={{ display: \"flex\", justifyContent: 'space-between', marginTop: 6 }} xs={12}>\r\n              <Grid item xs={6}>\r\n              </Grid>\r\n              {data.status === 'closed' &&\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"caption\">\r\n                    {i18n.ISNTAPP_ACTUAL_CLOSED_DATE}:{data.actualCloseDate}\r\n                  </Typography>\r\n                </Grid>\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions\r\n          style={{\r\n            backgroundColor: \"#f5f5f5\",\r\n            padding: \"2px\",\r\n            justifyContent: \"space-around\"\r\n          }}\r\n        >\r\n          <Button\r\n            size=\"small\"\r\n            disabled={!data.actualStartDate?false:true}\r\n            style={{\r\n              display:\r\n                data.status === \"awaitComplate\" || data.status === \"awaitStart\" ? \"inline-grid\" : \"none\",\r\n            }}\r\n            onClick={() => {\r\n              submit(\"start\", data);\r\n            }}\r\n          >\r\n            <HourglassEmptySharpIcon\r\n              color={!data.actualStartDate ? 'action' : 'disabled' }\r\n            />\r\n            <Typography variant=\"caption\">{i18n.ISNTAPP_START}</Typography>\r\n          </Button>\r\n\r\n          <Button\r\n            size=\"small\"\r\n            style={{\r\n              display: \"inline-grid\",\r\n              textAlign: \"center\"\r\n            }}\r\n            onClick={() => {\r\n              history.push(\r\n                `/documents/${data.activityNo}/${data.orderNo}/${data?.productFamily}/listCard`\r\n              );\r\n            }}\r\n          >\r\n            <DescriptionOutlined style={{ margin: \"auto\" }} classes={{ root: classes.iconColor }} />\r\n            <Typography variant=\"caption\">{document}</Typography>\r\n          </Button>\r\n          <Button\r\n            disabled={\r\n              data.status === \"awaitComplate\" ? (data.actualStartDate && !data.actualEndDate ? false : true) :\r\n                data.status === \"awaitClose\"? false: true\r\n            }\r\n            size=\"small\"\r\n            style={{\r\n              display: data.status === \"closed\" ? \"none\" : \"inline-grid\",\r\n            }}\r\n            onClick={() => {\r\n              submit(data.status === \"awaitComplate\" ? \"finish\" : \"close\", data);\r\n            }}\r\n          >\r\n            <CheckCircleOutlineOutlined\r\n              color={data.status === \"awaitComplate\" ?\r\n                (data.actualStartDate && !data.actualEndDate ? 'action' : 'disabled') :\r\n                data.status === \"awaitClose\" ? 'action' : 'disabled'\r\n              }\r\n            />\r\n            <Typography variant=\"caption\">{data.status === \"awaitComplate\" || data.status === \"awaitStart\" ? i18n.ISNTAPP_COMPLETE : i18n.ISNTAPP_CLOSE}</Typography>\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n);\r\nexport default TaskListCard;\r\n"]},"metadata":{},"sourceType":"module"}
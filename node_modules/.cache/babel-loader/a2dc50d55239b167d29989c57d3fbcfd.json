{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TaskItemCard\\\\index.js\";\nimport { Box, Button, Card, CardActions, CardContent, Grid, Typography, withStyles } from \"@material-ui/core\";\nimport { CheckCircleOutlineOutlined, DescriptionOutlined } from \"@material-ui/icons\";\nimport HourglassEmptySharpIcon from '@material-ui/icons/HourglassEmptySharp';\nimport { useHistory } from \"react-router-dom\";\nimport { LocalizeContext } from \"i18n\";\nimport React from \"react\";\nimport store from \"js/store\";\nconst TaskListCard = withStyles(({\n  spacing\n}) => {\n  return {\n    button: {\n      borderRadius: spacing(2.5),\n      lineHeight: \"unset\",\n      fontSize: \"0.5rem\",\n      padding: \"2px 14px\"\n    },\n    card: {\n      marginTop: spacing(2)\n    },\n    cardActions: {\n      marginLeft: \"0px\"\n    },\n    contentColor: {\n      color: \"#999999\",\n      wordBreak: \"break-word\"\n    },\n    fontColor: {\n      color: \"#e54141\" // color: \"rgba(0, 0, 0, 0.54)\",\n\n    },\n    iconColor: {\n      color: \"rgba(0, 0, 0, 0.54)\"\n    }\n  };\n})(({\n  classes,\n  data,\n  submit,\n  status\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  const history = useHistory();\n  const document = data.documentStatus === \"Done\" ? i18n.ISNTAPP_UPLOADED : data.documentStatus === \"ToDo\" ? i18n.ISNTAPP_JOBLIST_DOC_TODO : i18n.ISNTAPP_WITHOUT_TEMPLATES;\n  store.dispatch(action.setOrderDetailPageDefaultTab(status));\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    onClick: () => history.push(`/order/${data.orderNo}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    style: {\n      display: \"inline-flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, i18n.JOBLIST_ORDER, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, data.orderNo))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      display: \"inline-flex\",\n      marginTop: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    style: {\n      marginRight: \"4px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, i18n.PROJECTLIST_PROJECT, \":\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, data.projectName))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      display: \"flex\",\n      justifyContent: 'space-between'\n    },\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, i18n.ISNTAPP_PLAN_START_DATE, \":\", data.planStartDate)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, i18n.ISNTAPP_ACTUAL_START_DATE, \":\", data.actualStartDate))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      display: \"flex\",\n      justifyContent: 'space-between'\n    },\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, i18n.ISNTAPP_PLAN_END_DATE, \":\", data.planEndDate)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, i18n.ISNTAPP_ACTUAL_END_DATE, \":\", data.actualEndDate))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    style: {\n      display: \"flex\",\n      justifyContent: 'space-between'\n    },\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }), data.status === 'closed' && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 19\n    }\n  }, i18n.ISNTAPP_ACTUAL_CLOSED_DATE, \":\", data.actualCloseDate))))), /*#__PURE__*/React.createElement(CardActions, {\n    style: {\n      backgroundColor: \"#f5f5f5\",\n      padding: \"2px\",\n      justifyContent: \"space-around\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"small\",\n    disabled: !data.actualStartDate ? false : true,\n    style: {\n      display: data.status === \"awaitComplate\" || data.status === \"awaitStart\" ? \"inline-grid\" : \"none\"\n    },\n    onClick: () => {\n      submit(\"start\", data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HourglassEmptySharpIcon, {\n    color: !data.actualStartDate ? 'action' : 'disabled',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, i18n.ISNTAPP_START)), /*#__PURE__*/React.createElement(Button, {\n    disabled: !data.actualStartDate,\n    size: \"small\",\n    style: {\n      display: \"inline-grid\",\n      textAlign: \"center\"\n    },\n    onClick: () => {\n      history.push(`/documents/${data.activityNo}/${data.orderNo}/${data === null || data === void 0 ? void 0 : data.productFamily}/listCard`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DescriptionOutlined, {\n    style: {\n      margin: \"auto\"\n    },\n    color: data.actualStartDate ? 'action' : 'disabled',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, document)), /*#__PURE__*/React.createElement(Button, {\n    disabled: data.status === \"awaitComplate\" ? data.actualStartDate && !data.actualEndDate ? false : true : data.status === \"awaitClose\" ? false : true,\n    size: \"small\",\n    style: {\n      display: data.status === \"closed\" ? \"none\" : \"inline-grid\"\n    },\n    onClick: () => {\n      submit(data.status === \"awaitComplate\" ? \"finish\" : \"close\", data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircleOutlineOutlined, {\n    color: data.status === \"awaitComplate\" ? data.actualStartDate && !data.actualEndDate ? 'action' : 'disabled' : data.status === \"awaitClose\" ? 'action' : 'disabled',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, data.status === \"awaitComplate\" || data.status === \"awaitStart\" ? i18n.ISNTAPP_COMPLETE : i18n.ISNTAPP_CLOSE))));\n});\nexport default TaskListCard;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TaskItemCard/index.js"],"names":["Box","Button","Card","CardActions","CardContent","Grid","Typography","withStyles","CheckCircleOutlineOutlined","DescriptionOutlined","HourglassEmptySharpIcon","useHistory","LocalizeContext","React","store","TaskListCard","spacing","button","borderRadius","lineHeight","fontSize","padding","card","marginTop","cardActions","marginLeft","contentColor","color","wordBreak","fontColor","iconColor","classes","data","submit","status","i18n","useContext","history","document","documentStatus","ISNTAPP_UPLOADED","ISNTAPP_JOBLIST_DOC_TODO","ISNTAPP_WITHOUT_TEMPLATES","dispatch","action","setOrderDetailPageDefaultTab","push","orderNo","display","marginRight","JOBLIST_ORDER","PROJECTLIST_PROJECT","projectName","justifyContent","ISNTAPP_PLAN_START_DATE","planStartDate","ISNTAPP_ACTUAL_START_DATE","actualStartDate","ISNTAPP_PLAN_END_DATE","planEndDate","ISNTAPP_ACTUAL_END_DATE","actualEndDate","ISNTAPP_ACTUAL_CLOSED_DATE","actualCloseDate","backgroundColor","ISNTAPP_START","textAlign","activityNo","productFamily","margin","ISNTAPP_COMPLETE","ISNTAPP_CLOSE"],"mappings":"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","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  CheckCircleOutlineOutlined,\r\n  DescriptionOutlined\r\n} from \"@material-ui/icons\";\r\nimport HourglassEmptySharpIcon from '@material-ui/icons/HourglassEmptySharp';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport React from \"react\";\r\nimport store from \"js/store\";\r\n\r\nconst TaskListCard = withStyles(({ spacing }) => {\r\n  return {\r\n    button: {\r\n      borderRadius: spacing(2.5),\r\n      lineHeight: \"unset\",\r\n      fontSize: \"0.5rem\",\r\n      padding: \"2px 14px\",\r\n    },\r\n    card: {\r\n      marginTop: spacing(2),\r\n    },\r\n    cardActions: {\r\n      marginLeft: \"0px\",\r\n    },\r\n    contentColor: {\r\n      color: \"#999999\",\r\n      wordBreak: \"break-word\",\r\n    },\r\n    fontColor: {\r\n      color: \"#e54141\",\r\n      // color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n    iconColor: {\r\n      color: \"rgba(0, 0, 0, 0.54)\",\r\n    },\r\n  };\r\n})(\r\n  ({\r\n    classes,\r\n    data,\r\n    submit,\r\n    status\r\n  }) => {\r\n    const i18n = React.useContext(LocalizeContext);\r\n    const history = useHistory();\r\n\r\n    const document = data.documentStatus === \"Done\"\r\n      ? i18n.ISNTAPP_UPLOADED\r\n      : data.documentStatus === \"ToDo\"\r\n        ? i18n.ISNTAPP_JOBLIST_DOC_TODO\r\n        : i18n.ISNTAPP_WITHOUT_TEMPLATES;\r\n    \r\n    store.dispatch(action.setOrderDetailPageDefaultTab(status));\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardContent onClick={() => history.push(`/order/${data.orderNo}`)}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Box mt={1} style={{ display: \"inline-flex\" }}>\r\n                <Typography variant=\"body2\" style={{ marginRight: \"4px\" }}>\r\n                  {i18n.JOBLIST_ORDER}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                >\r\n                  {data.orderNo}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box style={{ display: \"inline-flex\",marginTop:2 }}>\r\n                <Typography variant=\"body2\" style={{ marginRight: \"4px\" }}>\r\n                  {i18n.PROJECTLIST_PROJECT}:\r\n                </Typography>\r\n                <Typography\r\n                  variant=\"caption\"\r\n                >\r\n                  {data.projectName}\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item style={{ display: \"flex\", justifyContent: 'space-between'}} xs={12}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"caption\">\r\n                  {i18n.ISNTAPP_PLAN_START_DATE}:\r\n                  {data.planStartDate}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"caption\">\r\n                  {i18n.ISNTAPP_ACTUAL_START_DATE}:\r\n                  {data.actualStartDate}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item style={{ display: \"flex\", justifyContent: 'space-between'}} xs={12}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"caption\">\r\n                  {i18n.ISNTAPP_PLAN_END_DATE}:\r\n                  {data.planEndDate}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"caption\">\r\n                  {i18n.ISNTAPP_ACTUAL_END_DATE}:\r\n                  {data.actualEndDate}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item style={{ display: \"flex\", justifyContent: 'space-between'}} xs={12}>\r\n              <Grid item xs={6}>\r\n              </Grid>\r\n              {data.status === 'closed' &&\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"caption\">\r\n                    {i18n.ISNTAPP_ACTUAL_CLOSED_DATE}:{data.actualCloseDate}\r\n                  </Typography>\r\n                </Grid>\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <CardActions\r\n          style={{\r\n            backgroundColor: \"#f5f5f5\",\r\n            padding: \"2px\",\r\n            justifyContent: \"space-around\"\r\n          }}\r\n        >\r\n          <Button\r\n            size=\"small\"\r\n            disabled={!data.actualStartDate?false:true}\r\n            style={{\r\n              display:\r\n                data.status === \"awaitComplate\" || data.status === \"awaitStart\" ? \"inline-grid\" : \"none\",\r\n            }}\r\n            onClick={() => {\r\n              submit(\"start\", data);\r\n            }}\r\n          >\r\n            <HourglassEmptySharpIcon\r\n              color={!data.actualStartDate ? 'action' : 'disabled' }\r\n            />\r\n            <Typography variant=\"caption\">{i18n.ISNTAPP_START}</Typography>\r\n          </Button>\r\n\r\n          <Button\r\n            disabled={!data.actualStartDate}\r\n            size=\"small\"\r\n            style={{\r\n              display: \"inline-grid\",\r\n              textAlign: \"center\"\r\n            }}\r\n            onClick={() => {\r\n              history.push(\r\n                `/documents/${data.activityNo}/${data.orderNo}/${data?.productFamily}/listCard`\r\n              );\r\n            }}\r\n          >\r\n            <DescriptionOutlined style={{ margin: \"auto\" }} color={data.actualStartDate ? 'action' : 'disabled'} />\r\n            <Typography variant=\"caption\">{document}</Typography>\r\n          </Button>\r\n          <Button\r\n            disabled={\r\n              data.status === \"awaitComplate\" ? (data.actualStartDate && !data.actualEndDate ? false : true) :\r\n                data.status === \"awaitClose\"? false: true\r\n            }\r\n            size=\"small\"\r\n            style={{\r\n              display: data.status === \"closed\" ? \"none\" : \"inline-grid\",\r\n            }}\r\n            onClick={() => {\r\n              submit(data.status === \"awaitComplate\" ? \"finish\" : \"close\", data);\r\n            }}\r\n          >\r\n            <CheckCircleOutlineOutlined\r\n              color={data.status === \"awaitComplate\" ?\r\n                (data.actualStartDate && !data.actualEndDate ? 'action' : 'disabled') :\r\n                data.status === \"awaitClose\" ? 'action' : 'disabled'\r\n              }\r\n            />\r\n            <Typography variant=\"caption\">{data.status === \"awaitComplate\" || data.status === \"awaitStart\" ? i18n.ISNTAPP_COMPLETE : i18n.ISNTAPP_CLOSE}</Typography>\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    );\r\n  }\r\n);\r\nexport default TaskListCard;\r\n"]},"metadata":{},"sourceType":"module"}
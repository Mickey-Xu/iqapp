{"ast":null,"code":"import axios from \"axios\";\nimport { axiosConfig, blobResponseURLs, formDataURLs, axiosIDPTConfig } from \"config\";\n\nconst getPostData = (data, useFormData = false) => {\n  if (useFormData) {\n    const formData = new FormData();\n    Object.keys(data).forEach(key => {\n      if (Array.isArray(data[key])) {\n        data[key].forEach(item => formData.append(key, item));\n      } else {\n        formData.append(key, data[key]);\n      }\n    });\n    return formData;\n  } else {\n    return JSON.stringify(data);\n  }\n};\n\nconst getQueryString = data => {\n  let queryString = \"\";\n\n  if (data) {\n    queryString = Object.keys(data).map(key => {\n      let result = `${encodeURIComponent(key)}=`;\n\n      if (Array.isArray(data[key])) {\n        result += data[key].map(v => {\n          return `${encodeURIComponent(v)}`;\n        }).join(`${\"&\" + key + \"=\"}`);\n      } else {\n        result += `${encodeURIComponent(data[key])}`;\n      }\n\n      return result;\n    }).join(\"&\");\n  }\n\n  if (queryString) {\n    return `?${queryString}`;\n  }\n\n  return queryString;\n};\n\nexport const get = (url, data, type) => {\n  return axios.get(url + getQueryString(data), { ...(!type ? axiosConfig : axiosIDPTConfig),\n    responseType: blobResponseURLs.some(element => url.startsWith(element)) ? \"blob\" : \"json\"\n  }).catch(({\n    message,\n    response\n  }) => {\n    if (response.status === 400 || response.status === 403) {\n      return Promise.reject({\n        code: response.status,\n        message: response.data.error.message\n      });\n    }\n\n    if (response.status === 401) {\n      return Promise.reject({\n        code: response.status,\n        message: \"用户凭证已过期，请重新登录\"\n      });\n    }\n\n    return Promise.reject({\n      code: response.status,\n      message\n    });\n  });\n};\nexport const post = (url, data) => {\n  const useFormData = formDataURLs.some(element => url.startsWith(element));\n  const postData = getPostData(data, useFormData);\n  return axios.post(url, postData, { ...axiosConfig,\n    headers: !useFormData ? {\n      \"Content-Type\": \"application/json\"\n    } : {}\n  }).catch(({\n    message,\n    response\n  }) => {\n    if (response.status === 400 || response.status === 403) {\n      return Promise.reject({\n        code: response.status,\n        message: response.data.error.message\n      });\n    }\n\n    if (response.status === 401) {\n      return Promise.reject({\n        code: response.status,\n        message: \"用户凭证已过期，请重新登录\"\n      });\n    }\n\n    return Promise.reject({\n      code: response.status,\n      message\n    });\n  });\n};\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_IDPT_API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const put = (url, data) => {\n  return api.put(url, data).then(response => {\n    return {\n      status: response.status,\n      data: response.data,\n      message: 'Update successful'\n    };\n  }).catch(error => {\n    if (error.response) {\n      console.error('Server responded with error:', error.response.data);\n    } else if (error.request) {\n      // 请求已发出，但没有收到响应\n      console.error('No response received:', error.request);\n    } else {\n      // 其他错误\n      console.error('Error setting up the request:', error.message);\n    }\n\n    throw error; // 继续抛出错误，供调用者处理\n  });\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/api/base.js"],"names":["axios","axiosConfig","blobResponseURLs","formDataURLs","axiosIDPTConfig","getPostData","data","useFormData","formData","FormData","Object","keys","forEach","key","Array","isArray","item","append","JSON","stringify","getQueryString","queryString","map","result","encodeURIComponent","v","join","get","url","type","responseType","some","element","startsWith","catch","message","response","status","Promise","reject","code","error","post","postData","headers","api","create","baseURL","process","env","REACT_APP_IDPT_API_BASE_URL","put","then","console","request"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { axiosConfig, blobResponseURLs, formDataURLs, axiosIDPTConfig } from \"config\";\r\n\r\nconst getPostData = (data, useFormData = false) => {\r\n  if (useFormData) {\r\n    const formData = new FormData();\r\n    Object.keys(data).forEach((key) => {\r\n      if (Array.isArray(data[key])) {\r\n        data[key].forEach((item) => formData.append(key, item));\r\n      } else {\r\n        formData.append(key, data[key]);\r\n      }\r\n    });\r\n    return formData;\r\n  } else {\r\n    return JSON.stringify(data);\r\n  }\r\n};\r\n\r\nconst getQueryString = (data) => {\r\n  let queryString = \"\";\r\n\r\n  if (data) {\r\n    queryString = Object.keys(data)\r\n      .map((key) => {\r\n        let result = `${encodeURIComponent(key)}=`;\r\n        if (Array.isArray(data[key])) {\r\n          result += data[key]\r\n            .map((v) => {\r\n              return `${encodeURIComponent(v)}`;\r\n            })\r\n            .join(`${\"&\" + key + \"=\"}`);\r\n        } else {\r\n          result += `${encodeURIComponent(data[key])}`;\r\n        }\r\n        return result;\r\n      })\r\n      .join(\"&\");\r\n  }\r\n\r\n  if (queryString) {\r\n    return `?${queryString}`;\r\n  }\r\n\r\n  return queryString;\r\n};\r\n\r\nexport const get = (url, data, type) => {\r\n  return axios\r\n    .get(url + getQueryString(data), {\r\n      ...(!type ? axiosConfig : axiosIDPTConfig),\r\n      responseType: blobResponseURLs.some((element) => url.startsWith(element))\r\n        ? \"blob\"\r\n        : \"json\",\r\n    })\r\n    .catch(({ message, response }) => {\r\n      if (response.status === 400 || response.status === 403) {\r\n        return Promise.reject({\r\n          code: response.status,\r\n          message: response.data.error.message,\r\n        });\r\n      }\r\n\r\n      if (response.status === 401) {\r\n        return Promise.reject({\r\n          code: response.status,\r\n          message: \"用户凭证已过期，请重新登录\",\r\n        });\r\n      }\r\n\r\n      return Promise.reject({ code: response.status, message });\r\n    });\r\n};\r\n\r\nexport const post = (url, data) => {\r\n  const useFormData = formDataURLs.some((element) => url.startsWith(element));\r\n  const postData = getPostData(data, useFormData);\r\n\r\n  return axios\r\n    .post(url, postData, {\r\n      ...axiosConfig,\r\n      headers: !useFormData ? { \"Content-Type\": \"application/json\" } : {},\r\n    })\r\n    .catch(({ message, response }) => {\r\n      if (response.status === 400 || response.status === 403) {\r\n        return Promise.reject({\r\n          code: response.status,\r\n          message: response.data.error.message,\r\n        });\r\n      }\r\n\r\n      if (response.status === 401) {\r\n        return Promise.reject({\r\n          code: response.status,\r\n          message: \"用户凭证已过期，请重新登录\",\r\n        });\r\n      }\r\n\r\n      return Promise.reject({ code: response.status, message });\r\n    });\r\n};\r\n\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_IDPT_API_BASE_URL,\r\n  headers: { 'Content-Type': 'application/json' }\r\n});\r\n\r\nexport const  put = (url,data) => {\r\n  return api.put(url, data)\r\n    .then(response => {\r\n      return {\r\n        status: response.status,\r\n        data: response.data,\r\n        message: 'Update successful'\r\n      };\r\n    })\r\n    .catch(error => {\r\n      if (error.response) {\r\n        console.error('Server responded with error:', error.response.data);\r\n      } else if (error.request) {\r\n        // 请求已发出，但没有收到响应\r\n        console.error('No response received:', error.request);\r\n      } else {\r\n        // 其他错误\r\n        console.error('Error setting up the request:', error.message);\r\n      }\r\n      throw error;  // 继续抛出错误，供调用者处理\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}
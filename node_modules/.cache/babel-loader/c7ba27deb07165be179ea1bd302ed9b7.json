{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\Camera\\\\index.js\";\n// import AppBar from '@material-ui/core/AppBar';\n// import Dialog from '@material-ui/core/Dialog';\n// import { IconButton,Button, Box } from '@material-ui/core';\n// import List from '@material-ui/core/List';\n// import Slide from '@material-ui/core/Slide';\n// import { makeStyles } from '@material-ui/core/styles';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Typography from '@material-ui/core/Typography';\n// import CloseIcon from '@material-ui/icons/Close';\n// import React, { useRef, useState } from 'react';\n// const useStyles = makeStyles((theme) => ({\n//   appBar: {\n//     position: 'fixed',\n//   },\n//   title: {\n//     marginLeft: theme.spacing(2),\n//     flex: 1,\n//   },\n// }));\n// const Transition = React.forwardRef(function Transition(props, ref) {\n//   return <Slide direction=\"up\" ref={ref} {...props} />;\n// });\n// export default function FullScreenDialog(props) {\n//     const classes = useStyles();\n//     const [open, setOpen] = React.useState(false);\n//     const videoRef = useRef(null);\n//     const canvasRef = useRef(null);\n//     const [isCameraOn, setIsCameraOn] = useState(false);\n//     const [photo, setPhoto] = useState(null);\n//     const handleClickOpen = () => {\n//         setOpen(true);\n//         toggleCamera();\n//     };\n//     const handleClose = async () => {\n//         setOpen(false);\n//         setPhoto(null);\n//         const stream = videoRef.current.srcObject;\n//         if (stream) {\n//             stream.getTracks().forEach(track => track.stop());\n//             videoRef.current.srcObject = null;\n//         }\n//         setIsCameraOn(false);\n//     };\n//         const toggleCamera = async () => {\n//             if (isCameraOn) {\n//                 // 停止相机\n//                 const stream = videoRef.current.srcObject;\n//                 if (stream) {\n//                     stream.getTracks().forEach(track => track.stop());\n//                     videoRef.current.srcObject = null;\n//                 }\n//                 setIsCameraOn(false);\n//             } else {\n//                 // 开启相机\n//                 try {\n//                     const stream = await navigator.mediaDevices.getUserMedia({\n//                         video: { facingMode: { exact: 'environment' } }\n//                     });\n//                     videoRef.current.srcObject = stream;\n//                     setIsCameraOn(true);\n//                 } catch (error) {\n//                     console.error(\"Error accessing the camera:\", error);\n//                 }\n//             }\n//         };\n//     const takePhoto = () => {\n//             const canvas = canvasRef.current;\n//             const video = videoRef.current;\n//             if (video && canvas) {\n//                 const context = canvas.getContext('2d');\n//                 canvas.width = video.videoWidth;\n//                 canvas.height = video.videoHeight;\n//                 context.drawImage(video, 0, 0, canvas.width, canvas.height);\n//                 // 获取图像的 base64 编码\n//                 const base64Image = canvas.toDataURL('image/png');\n//                 setPhoto(base64Image);\n//                 console.log(base64Image); // 或者根据需要处理\n//                 setIsCameraOn(false)\n//                 toggleCamera()\n//             }\n//         };\n//   return (\n//     <div>\n//     <Typography onClick={handleClickOpen} color=\"secondary\" variant=\"body2\">\n//         拍照\n//     </Typography>\n//       <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n//         <AppBar className={classes.appBar}>\n//           <Toolbar>\n//             <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n//               <CloseIcon />\n//             </IconButton>\n//           </Toolbar>\n//         </AppBar>\n//         <List style={{backgroundColor:\"black\",padding:0,margin:0}}>\n//                   <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh', }}>\n//                       <div style={{ width: '100%', height: '100%', position: 'relative', top: 0, left: 0 }}>\n//                           <video\n//                               ref={videoRef}\n//                               autoPlay\n//                               style={{ display: isCameraOn ? 'block' : 'none', width: '100%', height: '100%',zIndex:1 }}\n//                           />\n//                           <img src={photo} alt=\"\" style={{ maxWidth: '100%', height: 'auto', display: photo ? 'block' : 'none' }} />\n//                           <canvas ref={canvasRef} style={{ display: 'none' }} />\n//                           {isCameraOn && (\n//                               <div style={{\n//                                   position: \"absolute\",\n//                                   width: \"30%\",\n//                                   height: \"5%\",\n//                                   border: \"1px dashed red\",\n//                                   top: \"40%\",\n//                                   left: \"5%\",\n//                                   borderRadius: \"10%\",\n//                                   pointerEvents: 'none',\n//                                   zIndex: 100\n//                               }}></div>\n//                           )}\n//                           {isCameraOn && (\n//                               <div style={{\n//                                   position: \"absolute\",\n//                                   width: \"40%\",\n//                                   height: \"30%\",\n//                                   border: \"1px dashed red\",\n//                                   top: \"35%\",\n//                                   right: \"15%\",\n//                                   borderRadius: \"5%\",\n//                                   pointerEvents: 'none',\n//                                   zIndex: '1000 !important'\n//                               }}></div>\n//                           )}\n//                           <Box style={{\n//                               position: \"absolute\",\n//                               bottom: 30,\n//                               left: 0,\n//                               right: 0,\n//                               fontWeight: 600,\n//                               display: \"flex\",\n//                               justifyContent: \"space-around\",\n//                               zIndex:100\n//                           }}>\n//                               <Button\n//                                   onClick={() => {\n//                                       toggleCamera();\n//                                       setIsCameraOn(true)\n//                                       setPhoto(null)\n//                                   }}\n//                                   disabled={isCameraOn}\n//                                   style={{\n//                                       color: 'white',\n//                                   }}>\n//                                   重拍\n//                               </Button>\n//                               <Box style={{\n//                                   border: \" 5px solid white\",\n//                                   borderRadius: \"50%\",\n//                                   padding: \"2px\"\n//                               }}>\n//                                   <Button\n//                                       onClick={() => takePhoto()}\n//                                       disabled={!isCameraOn}\n//                                       style={{\n//                                           color: 'black',\n//                                           width: \"60px\",\n//                                           height: \"60px\",\n//                                           backgroundColor: \"white\",\n//                                           borderRadius: \" 50%\",\n//                                       }}>\n//                                       拍照\n//                                   </Button>\n//                               </Box>\n//                               <Button\n//                                   onClick={() => {\n//                                       props.onChange(photo);\n//                                       setOpen(false);\n//                                       setPhoto(null);\n//                                   }}\n//                                   disabled={isCameraOn}\n//                                   style={{\n//                                       color: 'white',\n//                                   }}>\n//                                   使用照片\n//                               </Button>\n//                           </Box>\n//                       </div>\n//                   </div>\n//         </List>\n//       </Dialog>\n//     </div>\n//   );\n// }\nimport React, { useRef, useEffect } from 'react';\n\nconst CameraComponent = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const photoRef = useRef(null);\n  useEffect(() => {\n    const getUserMedia = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: false\n        });\n\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n        }\n      } catch (error) {\n        console.error(\"获取摄像头权限失败:\", error);\n      }\n    };\n\n    getUserMedia();\n    return () => {\n      var _videoRef$current;\n\n      const stream = (_videoRef$current = videoRef.current) === null || _videoRef$current === void 0 ? void 0 : _videoRef$current.srcObject;\n\n      if (stream) {\n        const tracks = stream.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  const capturePhoto = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const video = videoRef.current; // 设置画布尺寸与视频相同\n\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight; // 将视频绘制到画布上\n\n    context.drawImage(video, 0, 0); // 将画布内容转为图片并显示\n\n    const photo = photoRef.current;\n    photo.src = canvas.toDataURL();\n    photo.style.display = 'block';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"cameraContainer\",\n    style: {\n      position: 'relative',\n      width: '345px',\n      height: '210px',\n      overflow: 'hidden'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    width: \"345\",\n    height: \"210\",\n    autoPlay: true,\n    style: {\n      objectFit: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"frame-container\",\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mask\",\n    style: {\n      position: 'absolute',\n      width: '100%',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"frame\",\n    style: {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      width: '200px',\n      height: '90px',\n      zIndex: 10,\n      backgroundColor: 'transparent'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"corner topLeft\",\n    style: {\n      position: 'absolute',\n      borderColor: 'red',\n      borderStyle: 'solid',\n      padding: '6px',\n      top: '1px',\n      left: '1px',\n      borderWidth: '2px 0 0 2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"corner topRight\",\n    style: {\n      position: 'absolute',\n      borderColor: 'red',\n      borderStyle: 'solid',\n      padding: '6px',\n      top: '1px',\n      right: '1px',\n      borderWidth: '2px 2px 0 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"corner bottomLeft\",\n    style: {\n      position: 'absolute',\n      borderColor: 'red',\n      borderStyle: 'solid',\n      padding: '6px',\n      bottom: '1px',\n      left: '1px',\n      borderWidth: '0 0 2px 2px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"corner bottomRight\",\n    style: {\n      position: 'absolute',\n      borderColor: 'red',\n      borderStyle: 'solid',\n      padding: '6px',\n      bottom: '1px',\n      right: '1px',\n      borderWidth: '0 2px 2px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '6px',\n      textAlign: 'center',\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 21\n    }\n  }, \"Please put your ID in the box\"))), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"captureButton\",\n    onClick: capturePhoto,\n    style: {\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }\n  }, \"\\u62CD\\u7167\"), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    ref: photoRef,\n    id: \"photo\",\n    alt: \"Captured Photo\",\n    style: {\n      display: 'none',\n      width: '345px',\n      height: '210px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default CameraComponent;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/Camera/index.js"],"names":["React","useRef","useEffect","CameraComponent","videoRef","canvasRef","photoRef","getUserMedia","stream","navigator","mediaDevices","video","audio","current","srcObject","error","console","tracks","getTracks","forEach","track","stop","capturePhoto","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","photo","src","toDataURL","style","display","position","overflow","objectFit","top","left","transform","zIndex","backgroundColor","borderColor","borderStyle","padding","borderWidth","right","bottom","marginTop","textAlign","color"],"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","sourcesContent":["// import AppBar from '@material-ui/core/AppBar';\r\n// import Dialog from '@material-ui/core/Dialog';\r\n// import { IconButton,Button, Box } from '@material-ui/core';\r\n// import List from '@material-ui/core/List';\r\n// import Slide from '@material-ui/core/Slide';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import CloseIcon from '@material-ui/icons/Close';\r\n// import React, { useRef, useState } from 'react';\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   appBar: {\r\n//     position: 'fixed',\r\n//   },\r\n//   title: {\r\n//     marginLeft: theme.spacing(2),\r\n//     flex: 1,\r\n//   },\r\n// }));\r\n\r\n// const Transition = React.forwardRef(function Transition(props, ref) {\r\n//   return <Slide direction=\"up\" ref={ref} {...props} />;\r\n// });\r\n\r\n// export default function FullScreenDialog(props) {\r\n//     const classes = useStyles();\r\n//     const [open, setOpen] = React.useState(false);\r\n//     const videoRef = useRef(null);\r\n//     const canvasRef = useRef(null);\r\n//     const [isCameraOn, setIsCameraOn] = useState(false);\r\n//     const [photo, setPhoto] = useState(null);\r\n\r\n\r\n//     const handleClickOpen = () => {\r\n//         setOpen(true);\r\n//         toggleCamera();\r\n//     };\r\n\r\n//     const handleClose = async () => {\r\n//         setOpen(false);\r\n//         setPhoto(null);\r\n//         const stream = videoRef.current.srcObject;\r\n//         if (stream) {\r\n//             stream.getTracks().forEach(track => track.stop());\r\n//             videoRef.current.srcObject = null;\r\n//         }\r\n//         setIsCameraOn(false);\r\n//     };\r\n\r\n//         const toggleCamera = async () => {\r\n//             if (isCameraOn) {\r\n//                 // 停止相机\r\n//                 const stream = videoRef.current.srcObject;\r\n//                 if (stream) {\r\n//                     stream.getTracks().forEach(track => track.stop());\r\n//                     videoRef.current.srcObject = null;\r\n//                 }\r\n//                 setIsCameraOn(false);\r\n//             } else {\r\n//                 // 开启相机\r\n//                 try {\r\n//                     const stream = await navigator.mediaDevices.getUserMedia({\r\n//                         video: { facingMode: { exact: 'environment' } }\r\n//                     });\r\n//                     videoRef.current.srcObject = stream;\r\n//                     setIsCameraOn(true);\r\n//                 } catch (error) {\r\n//                     console.error(\"Error accessing the camera:\", error);\r\n//                 }\r\n//             }\r\n//         };\r\n\r\n//     const takePhoto = () => {\r\n//             const canvas = canvasRef.current;\r\n//             const video = videoRef.current;\r\n\r\n//             if (video && canvas) {\r\n//                 const context = canvas.getContext('2d');\r\n//                 canvas.width = video.videoWidth;\r\n//                 canvas.height = video.videoHeight;\r\n//                 context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n//                 // 获取图像的 base64 编码\r\n//                 const base64Image = canvas.toDataURL('image/png');\r\n//                 setPhoto(base64Image);\r\n//                 console.log(base64Image); // 或者根据需要处理\r\n//                 setIsCameraOn(false)\r\n//                 toggleCamera()\r\n//             }\r\n//         };\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//     <Typography onClick={handleClickOpen} color=\"secondary\" variant=\"body2\">\r\n//         拍照\r\n//     </Typography>\r\n//       <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n//         <AppBar className={classes.appBar}>\r\n//           <Toolbar>\r\n//             <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n//               <CloseIcon />\r\n//             </IconButton>\r\n//           </Toolbar>\r\n//         </AppBar>\r\n//         <List style={{backgroundColor:\"black\",padding:0,margin:0}}>\r\n//                   <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh', }}>\r\n//                       <div style={{ width: '100%', height: '100%', position: 'relative', top: 0, left: 0 }}>\r\n//                           <video\r\n//                               ref={videoRef}\r\n//                               autoPlay\r\n//                               style={{ display: isCameraOn ? 'block' : 'none', width: '100%', height: '100%',zIndex:1 }}\r\n//                           />\r\n//                           <img src={photo} alt=\"\" style={{ maxWidth: '100%', height: 'auto', display: photo ? 'block' : 'none' }} />\r\n//                           <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n//                           {isCameraOn && (\r\n//                               <div style={{\r\n//                                   position: \"absolute\",\r\n//                                   width: \"30%\",\r\n//                                   height: \"5%\",\r\n//                                   border: \"1px dashed red\",\r\n//                                   top: \"40%\",\r\n//                                   left: \"5%\",\r\n//                                   borderRadius: \"10%\",\r\n//                                   pointerEvents: 'none',\r\n//                                   zIndex: 100\r\n//                               }}></div>\r\n//                           )}\r\n//                           {isCameraOn && (\r\n//                               <div style={{\r\n//                                   position: \"absolute\",\r\n//                                   width: \"40%\",\r\n//                                   height: \"30%\",\r\n//                                   border: \"1px dashed red\",\r\n//                                   top: \"35%\",\r\n//                                   right: \"15%\",\r\n//                                   borderRadius: \"5%\",\r\n//                                   pointerEvents: 'none',\r\n//                                   zIndex: '1000 !important'\r\n//                               }}></div>\r\n//                           )}\r\n//                           <Box style={{\r\n//                               position: \"absolute\",\r\n//                               bottom: 30,\r\n//                               left: 0,\r\n//                               right: 0,\r\n//                               fontWeight: 600,\r\n//                               display: \"flex\",\r\n//                               justifyContent: \"space-around\",\r\n//                               zIndex:100\r\n                              \r\n//                           }}>\r\n//                               <Button\r\n//                                   onClick={() => {\r\n//                                       toggleCamera();\r\n//                                       setIsCameraOn(true)\r\n//                                       setPhoto(null)\r\n//                                   }}\r\n//                                   disabled={isCameraOn}\r\n//                                   style={{\r\n//                                       color: 'white',\r\n//                                   }}>\r\n//                                   重拍\r\n//                               </Button>\r\n//                               <Box style={{\r\n//                                   border: \" 5px solid white\",\r\n//                                   borderRadius: \"50%\",\r\n//                                   padding: \"2px\"\r\n//                               }}>\r\n//                                   <Button\r\n//                                       onClick={() => takePhoto()}\r\n//                                       disabled={!isCameraOn}\r\n//                                       style={{\r\n//                                           color: 'black',\r\n//                                           width: \"60px\",\r\n//                                           height: \"60px\",\r\n//                                           backgroundColor: \"white\",\r\n//                                           borderRadius: \" 50%\",\r\n\r\n//                                       }}>\r\n//                                       拍照\r\n//                                   </Button>\r\n//                               </Box>\r\n\r\n//                               <Button\r\n//                                   onClick={() => {\r\n//                                       props.onChange(photo);\r\n//                                       setOpen(false);\r\n//                                       setPhoto(null);\r\n//                                   }}\r\n//                                   disabled={isCameraOn}\r\n//                                   style={{\r\n//                                       color: 'white',\r\n//                                   }}>\r\n//                                   使用照片\r\n//                               </Button>\r\n//                           </Box>\r\n\r\n//                       </div>\r\n//                   </div>\r\n              \r\n//         </List>\r\n//       </Dialog>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nconst CameraComponent = () => {\r\n    const videoRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n    const photoRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const getUserMedia = async () => {\r\n            try {\r\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\r\n                if (videoRef.current) {\r\n                    videoRef.current.srcObject = stream;\r\n                }\r\n            } catch (error) {\r\n                console.error(\"获取摄像头权限失败:\", error);\r\n            }\r\n        };\r\n\r\n        getUserMedia();\r\n\r\n        return () => {\r\n            const stream = videoRef.current?.srcObject;\r\n            if (stream) {\r\n                const tracks = stream.getTracks();\r\n                tracks.forEach(track => track.stop());\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const capturePhoto = () => {\r\n        const canvas = canvasRef.current;\r\n        const context = canvas.getContext('2d');\r\n        const video = videoRef.current;\r\n\r\n        // 设置画布尺寸与视频相同\r\n        canvas.width = video.videoWidth;\r\n        canvas.height = video.videoHeight;\r\n\r\n        // 将视频绘制到画布上\r\n        context.drawImage(video, 0, 0);\r\n\r\n        // 将画布内容转为图片并显示\r\n        const photo = photoRef.current;\r\n        photo.src = canvas.toDataURL();\r\n        photo.style.display = 'block';\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"cameraContainer\" style={{\r\n                position: 'relative',\r\n                width: '345px',\r\n                height: '210px',\r\n                overflow: 'hidden'\r\n            }}>\r\n                <video ref={videoRef} width=\"345\" height=\"210\" autoPlay style={{ objectFit: 'cover' }}></video>\r\n                <div className=\"frame-container\" style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%'\r\n                }}>\r\n                    <div className=\"mask\" style={{\r\n                        position: 'absolute',\r\n                        width: '100%',\r\n                        height: '100%'\r\n                    }}></div>\r\n                    <div id=\"frame\" style={{\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        width: '200px',\r\n                        height: '90px',\r\n                        zIndex: 10,\r\n                        backgroundColor: 'transparent'\r\n                    }}>\r\n                        <div className=\"corner topLeft\" style={{\r\n                            position: 'absolute',\r\n                            borderColor: 'red',\r\n                            borderStyle: 'solid',\r\n                            padding: '6px',\r\n                            top: '1px',\r\n                            left: '1px',\r\n                            borderWidth: '2px 0 0 2px'\r\n                        }}></div>\r\n                        <div className=\"corner topRight\" style={{\r\n                            position: 'absolute',\r\n                            borderColor: 'red',\r\n                            borderStyle: 'solid',\r\n                            padding: '6px',\r\n                            top: '1px',\r\n                            right: '1px',\r\n                            borderWidth: '2px 2px 0 0'\r\n                        }}></div>\r\n                        <div className=\"corner bottomLeft\" style={{\r\n                            position: 'absolute',\r\n                            borderColor: 'red',\r\n                            borderStyle: 'solid',\r\n                            padding: '6px',\r\n                            bottom: '1px',\r\n                            left: '1px',\r\n                            borderWidth: '0 0 2px 2px'\r\n                        }}></div>\r\n                        <div className=\"corner bottomRight\" style={{\r\n                            position: 'absolute',\r\n                            borderColor: 'red',\r\n                            borderStyle: 'solid',\r\n                            padding: '6px',\r\n                            bottom: '1px',\r\n                            right: '1px',\r\n                            borderWidth: '0 2px 2px 0'\r\n                        }}></div>\r\n                    </div>\r\n                    <div style={{ marginTop: '6px', textAlign: 'center', color: 'red' }}>\r\n                        Please put your ID in the box\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button id=\"captureButton\" onClick={capturePhoto} style={{ marginTop: '10px' }}>\r\n                拍照\r\n            </button>\r\n            <canvas ref={canvasRef} style={{ display: 'none' }}></canvas>\r\n            <img ref={photoRef} id=\"photo\" alt=\"Captured Photo\" style={{ display: 'none', width: '345px', height: '210px' }} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CameraComponent;\r\n"]},"metadata":{},"sourceType":"module"}
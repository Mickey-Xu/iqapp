{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\OrderInfo\\\\index.js\";\nimport { Divider, FormControl, Grid, MenuItem, Select, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as action from \"actions\";\nimport React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nconst OrderInfo = withStyles(({\n  spacing\n}) => {\n  return {\n    box: {\n      padding: spacing(1.25)\n    },\n    progress: {\n      backgroundColor: \"red\",\n      padding: spacing(0, 0.5)\n    },\n    label: {\n      paddingLeft: spacing(1.25),\n      color: \"#747474\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    },\n    icon: {\n      paddingLeft: spacing(1.25),\n      paddingTop: spacing(0.65)\n    },\n    btn: {\n      paddingLeft: spacing(1)\n    },\n    navIcon: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    select: {\n      display: \"flex\"\n    },\n    content: {\n      display: \"flex\"\n    }\n  };\n})(({\n  classes,\n  fields,\n  data,\n  updateOrderInstallationsMethod,\n  auth\n}) => {\n  const [currency, setCurrency] = React.useState();\n  useEffect(() => {\n    var _data$defaultselectVa;\n\n    setCurrency(data === null || data === void 0 ? void 0 : (_data$defaultselectVa = data.defaultselectValue) === null || _data$defaultselectVa === void 0 ? void 0 : _data$defaultselectVa.toString());\n  }, [data]);\n\n  const handleSubmit = event => {\n    setCurrency(event.target.value);\n    updateOrderInstallationsMethod({\n      orderNumbers: [data.orderNumber],\n      installationMethod: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, fields.map((item, index) => {\n    var _data$installMethods;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      alignItems: \"center\",\n      className: classes.box,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(item.icon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      className: classes.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      style: {\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, item.label), item.name === \"installMethod\" ? /*#__PURE__*/React.createElement(FormControl, {\n      disabled: auth.roles[0] !== \"PE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: currency || \"\",\n      onChange: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, (_data$installMethods = data.installMethods) === null || _data$installMethods === void 0 ? void 0 : _data$installMethods.map((item, index) => {\n      return /*#__PURE__*/React.createElement(MenuItem, {\n        value: item.value,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        align: \"center\",\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      }, item.label));\n    }))) : /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"span\",\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, item.component !== undefined ? /*#__PURE__*/React.createElement(item.component, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }, data[item.name])))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }));\n  }));\n});\n\nconst mapStateToProps = ({\n  auth\n}) => {\n  return {\n    auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateOrderInstallationsMethod: data => {\n      dispatch(action.updateOrderInstallationsMethod(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderInfo);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/OrderInfo/index.js"],"names":["Divider","FormControl","Grid","MenuItem","Select","Typography","withStyles","action","React","useEffect","connect","OrderInfo","spacing","box","padding","progress","backgroundColor","label","paddingLeft","color","display","alignItems","justifyContent","icon","paddingTop","btn","navIcon","select","content","classes","fields","data","updateOrderInstallationsMethod","auth","currency","setCurrency","useState","defaultselectValue","toString","handleSubmit","event","target","value","orderNumbers","orderNumber","installationMethod","map","item","index","width","name","roles","installMethods","component","undefined","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import {\r\n  Divider,\r\n  FormControl,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as action from \"actions\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst OrderInfo = withStyles(({ spacing }) => {\r\n  return {\r\n    box: {\r\n      padding: spacing(1.25),\r\n    },\r\n    progress: {\r\n      backgroundColor: \"red\",\r\n      padding: spacing(0, 0.5),\r\n    },\r\n    label: {\r\n      paddingLeft: spacing(1.25),\r\n      color: \"#747474\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    icon: {\r\n      paddingLeft: spacing(1.25),\r\n      paddingTop: spacing(0.65),\r\n    },\r\n    btn: {\r\n      paddingLeft: spacing(1),\r\n    },\r\n    navIcon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    },\r\n    select: {\r\n      display: \"flex\",\r\n    },\r\n    content: {\r\n      display: \"flex\",\r\n    },\r\n  };\r\n})(({ classes, fields, data, updateOrderInstallationsMethod, auth }) => {\r\n  const [currency, setCurrency] = React.useState();\r\n\r\n  useEffect(() => {\r\n    setCurrency(data?.defaultselectValue?.toString());\r\n  }, [data]);\r\n\r\n  const handleSubmit = (event) => {\r\n    setCurrency(event.target.value);\r\n    updateOrderInstallationsMethod({\r\n      orderNumbers: [data.orderNumber],\r\n      installationMethod: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {fields.map((item, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <Grid container alignItems=\"center\" className={classes.box}>\r\n              <Grid item className={classes.icon}>\r\n                {<item.icon />}\r\n              </Grid>\r\n              <Grid item xs className={classes.label}>\r\n                <Typography variant=\"body2\" style={{ width: \"40%\" }}>\r\n                  {item.label}\r\n                </Typography>\r\n                {item.name === \"installMethod\" ? (\r\n                  <FormControl disabled={auth.roles[0] !== \"PE\"}>\r\n                    <Select value={currency || \"\"} onChange={handleSubmit}>\r\n                      {data.installMethods?.map((item, index) => {\r\n                        return (\r\n                          <MenuItem value={item.value} key={index}>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              align=\"center\"\r\n                              color=\"textSecondary\"\r\n                            >\r\n                              {item.label}\r\n                            </Typography>\r\n                          </MenuItem>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                ) : (\r\n                  <Typography variant=\"body2\" component=\"span\" align=\"right\">\r\n                    {item.component !== undefined ? (\r\n                      <item.component />\r\n                    ) : (\r\n                      <span>{data[item.name]}</span>\r\n                    )}\r\n                  </Typography>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <Divider />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n});\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  return {\r\n    auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateOrderInstallationsMethod: (data) => {\r\n      dispatch(action.updateOrderInstallationsMethod(data));\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderInfo);\r\n"]},"metadata":{},"sourceType":"module"}
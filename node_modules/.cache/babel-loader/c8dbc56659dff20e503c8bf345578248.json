{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\TaskCreatePage\\\\index.js\";\nimport { Box, Button, MenuItem, TextField, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { DatePicker } from \"@material-ui/pickers\";\nimport * as action from \"actions\";\nimport { LocalizeContext } from \"i18n\";\nimport * as repo from \"js/fetch\";\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\nimport lodash from \"lodash\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nconst TaskCreatePage = withStyles(({\n  spacing\n}) => {\n  return {\n    root: {\n      width: `calc(100% - 16px)`,\n      height: `calc(100% - 16px)`,\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin: \"8px\",\n      color: \"rgb(220,0,0)\"\n    },\n    itemBox: {\n      width: \"100%\",\n      padding: \"4px\",\n      margin: \"4px\",\n      display: \"flex\",\n      alignItems: \"center\" // backgroundColor: \"white\",\n\n    },\n    projectNo: {\n      // marginLeft: spacing(6),\n      display: \"flex\",\n      justifyContent: \"space-between\"\n    }\n  };\n})(({\n  classes,\n  assignerList,\n  orderList,\n  projectList,\n  partnerNo,\n  fetchCreateTask,\n  orders\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  const [description, setDescription] = useState(\"\");\n  const [details, setDetails] = useState(\"\");\n  const [projectNo, setProjectNo] = useState(\"\");\n  const [orderNo, setOrderNo] = useState(\"\");\n  const [dueDate, setDueDate] = useState(moment(new Date()).format(\"YYYY-MM-DD\"));\n  const [assigneeID, setAssigneeID] = useState(\"\");\n\n  const createTaskFn = () => {\n    if (description.length === 0) {\n      alert(\"任务简介是必填字段\");\n      return;\n    } else if (details.length === 0) {\n      alert(\"任务明细是必填字段\");\n      return;\n    } else if (projectNo.length === 0 && (orderNo === null || orderNo === void 0 ? void 0 : orderNo.length) === 0) {\n      alert(\"订单号是必填字段\");\n      return;\n    } else if ((orderNo === null || orderNo === void 0 ? void 0 : orderNo.length) === 0 && projectNo.length === 0) {\n      alert(\"项目编号是必填字段\");\n      return;\n    } else if (dueDate.length === 0) {\n      alert(\"到期日是必填字段\");\n      return;\n    } else if (assigneeID.length === 0) {\n      alert(\"被分配人是必填字段\");\n      return;\n    }\n\n    const data = [{\n      partnerNo: partnerNo,\n      projectNo: projectNo,\n      orderNo: orderNo,\n      dueDate: dueDate,\n      status: \"A\",\n      description: description,\n      details: details,\n      assigneeID: assigneeID,\n      cplDate: \"\",\n      assigneeCMNT: \"\"\n    }];\n    fetchCreateTask(data);\n    repo.fetchTasks();\n    window.history.back(-1);\n  };\n\n  return /*#__PURE__*/React.createElement(PrimaryLayout, {\n    name: \"task\",\n    title: i18n.ISNTAPP_TASK_CREATED,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.itemBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    required: true,\n    color: \"secondary\",\n    label: i18n.ISNTAPP_TASK,\n    value: description,\n    onChange: e => {\n      setDescription(e.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    className: classes.itemBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    multiline: true,\n    required: true,\n    color: \"secondary\",\n    label: i18n.ISNTAPP_TASK_DESCRIPTION,\n    value: details,\n    onChange: e => {\n      setDetails(e.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  })), !orderNo && /*#__PURE__*/React.createElement(Box, {\n    className: classes.itemBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    required: orderNo ? false : true,\n    color: \"secondary\",\n    label: i18n.PROJECTLIST_PROJECT_NO,\n    value: projectNo,\n    onChange: e => {\n      setProjectNo(e.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, projectList.map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: option.label,\n    className: classes.projectNo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, option.projectName), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, option.value))))), !projectNo && /*#__PURE__*/React.createElement(Box, {\n    className: classes.itemBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    select: true,\n    required: projectNo ? false : true,\n    color: \"secondary\",\n    label: i18n.JOBLIST_ORDER_NUMBER,\n    value: orderNo,\n    onChange: e => {\n      setOrderNo(e.target.value);\n      setAssigneeID(\"\");\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, orderList.map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: option.value,\n    className: classes.projectNo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 21\n    }\n  }, option.unitDesignation), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }, option.label))))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.itemBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    autoOk: true,\n    fullWidth: true,\n    required: true,\n    label: i18n.ISNTAPP_DUE_DATE,\n    disableToolbar: true,\n    variant: \"inline\",\n    value: dueDate ? new Date(dueDate) : null,\n    minDate: new Date(),\n    format: \"YYYY/MM/DD\",\n    onChange: d => {\n      setDueDate(moment(d).format(\"YYYY-MM-DD\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    className: classes.itemBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    select: true,\n    color: \"secondary\",\n    label: i18n.ISNTAPP_ASSIGNEE,\n    value: assigneeID,\n    onChange: e => {\n      setAssigneeID(e.target.value);\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, projectNo ? lodash.unionBy(assignerList.filter(item => {\n    return Object.keys(orders).filter(item => {\n      return orders[item].projectNumber === projectNo;\n    }).indexOf(item.orderNum) > -1;\n  }), \"label\").map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 23\n    }\n  }, option.label)) : assignerList.filter(item => {\n    return item.orderNum === orderNo;\n  }).map((option, index) => /*#__PURE__*/React.createElement(MenuItem, {\n    key: index,\n    value: option.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 23\n    }\n  }, option.label)))), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      backgroundColor: \"rgb(220,0,0)\",\n      color: \"white\",\n      marginTop: \"20px\"\n    },\n    onClick: () => {\n      createTaskFn();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 11\n    }\n  }, i18n.ISNTAPP_SUBMIT)));\n});\n\nconst mapStateToProps = ({\n  partners,\n  orders,\n  projects,\n  auth\n}) => {\n  // const filterList = new Set();\n  const orderList = Object.keys(orders).map(order => {\n    return {\n      label: order,\n      value: order,\n      unitDesignation: orders[order].unitDesignation\n    };\n  }).sort((a, b) => a.label ? a.label > b.label ? 1 : -1 : 1);\n  orderList.unshift({\n    label: \"\",\n    value: \"\",\n    unitDesignation: \"\"\n  });\n  const projectList = Object.keys(projects).map(project => {\n    return {\n      label: project,\n      value: project,\n      projectName: projects[project].description\n    };\n  }).sort((a, b) => a.label ? a.label > b.label ? 1 : -1 : 1);\n  projectList.unshift({\n    label: \"\",\n    value: \"\",\n    projectName: \"\"\n  });\n  return {\n    assignerList: Array.from(new Set(Object.keys(partners).filter(partner => {\n      return partners[partner].functionNumber === \"Z(\" || partners[partner].functionNumber === \"VW\" || partners[partner].functionNumber === \"YI\";\n    }).map(item => {\n      let lable;\n\n      if (partners[item].functionNumber === \"Z(\") {\n        lable = `PE-${partners[item].name1}`;\n      } else if (partners[item].functionNumber === \"VW\") {\n        lable = `TL-${partners[item].name1}`;\n      } else {\n        lable = `PM-${partners[item].name1}`;\n      }\n\n      return {\n        label: lable,\n        value: partners[item].number,\n        orderNum: partners[item].orderNumber\n      };\n    }))).sort((a, b) => a.label ? a.label > b.label ? 1 : -1 : 1).filter(items => {\n      return items;\n    }),\n    orderList: orderList,\n    projectList: projectList,\n    partnerNo: auth.personalNumber,\n    orders\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCreateTask: data => {\n      dispatch(action.fetchCreateTask(data)).then(response => {\n        repo.fetchTasks().then(data => {\n          dispatch(action.setTasks(data));\n        });\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskCreatePage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/TaskCreatePage/index.js"],"names":["Box","Button","MenuItem","TextField","Typography","withStyles","DatePicker","action","LocalizeContext","repo","PrimaryLayout","lodash","moment","React","useState","connect","TaskCreatePage","spacing","root","width","height","display","flexDirection","margin","color","itemBox","padding","alignItems","projectNo","justifyContent","classes","assignerList","orderList","projectList","partnerNo","fetchCreateTask","orders","i18n","useContext","description","setDescription","details","setDetails","setProjectNo","orderNo","setOrderNo","dueDate","setDueDate","Date","format","assigneeID","setAssigneeID","createTaskFn","length","alert","data","status","cplDate","assigneeCMNT","fetchTasks","window","history","back","ISNTAPP_TASK_CREATED","ISNTAPP_TASK","e","target","value","shrink","ISNTAPP_TASK_DESCRIPTION","PROJECTLIST_PROJECT_NO","map","option","index","label","projectName","JOBLIST_ORDER_NUMBER","unitDesignation","ISNTAPP_DUE_DATE","d","ISNTAPP_ASSIGNEE","unionBy","filter","item","Object","keys","projectNumber","indexOf","orderNum","backgroundColor","marginTop","ISNTAPP_SUBMIT","mapStateToProps","partners","projects","auth","order","sort","a","b","unshift","project","Array","from","Set","partner","functionNumber","lable","name1","number","orderNumber","items","personalNumber","mapDispatchToProps","dispatch","then","response","setTasks"],"mappings":"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","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  MenuItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport * as action from \"actions\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport * as repo from \"js/fetch\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport lodash from \"lodash\";\r\nimport moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst TaskCreatePage = withStyles(({ spacing }) => {\r\n  return {\r\n    root: {\r\n      width: `calc(100% - 16px)`,\r\n      height: `calc(100% - 16px)`,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      margin: \"8px\",\r\n      color: \"rgb(220,0,0)\",\r\n    },\r\n    itemBox: {\r\n      width: \"100%\",\r\n      padding: \"4px\",\r\n      margin: \"4px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      // backgroundColor: \"white\",\r\n    },\r\n    projectNo: {\r\n      // marginLeft: spacing(6),\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n  };\r\n})(\r\n  ({\r\n    classes,\r\n    assignerList,\r\n    orderList,\r\n    projectList,\r\n    partnerNo,\r\n    fetchCreateTask,\r\n    orders,\r\n  }) => {\r\n    const i18n = React.useContext(LocalizeContext);\r\n\r\n    const [description, setDescription] = useState(\"\");\r\n    const [details, setDetails] = useState(\"\");\r\n    const [projectNo, setProjectNo] = useState(\"\");\r\n    const [orderNo, setOrderNo] = useState(\"\");\r\n    const [dueDate, setDueDate] = useState(\r\n      moment(new Date()).format(\"YYYY-MM-DD\")\r\n    );\r\n    const [assigneeID, setAssigneeID] = useState(\"\");\r\n\r\n    const createTaskFn = () => {\r\n      if (description.length === 0) {\r\n        alert(\"任务简介是必填字段\");\r\n        return;\r\n      } else if (details.length === 0) {\r\n        alert(\"任务明细是必填字段\");\r\n        return;\r\n      } else if (projectNo.length === 0 && orderNo?.length === 0) {\r\n        alert(\"订单号是必填字段\");\r\n        return;\r\n      } else if (orderNo?.length === 0 && projectNo.length === 0) {\r\n        alert(\"项目编号是必填字段\");\r\n        return;\r\n      } else if (dueDate.length === 0) {\r\n        alert(\"到期日是必填字段\");\r\n        return;\r\n      } else if (assigneeID.length === 0) {\r\n        alert(\"被分配人是必填字段\");\r\n        return;\r\n      }\r\n      const data = [\r\n        {\r\n          partnerNo: partnerNo,\r\n          projectNo: projectNo,\r\n          orderNo: orderNo,\r\n          dueDate: dueDate,\r\n          status: \"A\",\r\n          description: description,\r\n          details: details,\r\n          assigneeID: assigneeID,\r\n          cplDate: \"\",\r\n          assigneeCMNT: \"\",\r\n        },\r\n      ];\r\n      fetchCreateTask(data);\r\n      repo.fetchTasks();\r\n      window.history.back(-1);\r\n    };\r\n    return (\r\n      <PrimaryLayout name=\"task\" title={i18n.ISNTAPP_TASK_CREATED}>\r\n        <form className={classes.root} autoComplete=\"off\">\r\n          <Box className={classes.itemBox}>\r\n            <TextField\r\n              fullWidth\r\n              required={true}\r\n              color={\"secondary\"}\r\n              label={i18n.ISNTAPP_TASK}\r\n              value={description}\r\n              onChange={(e) => {\r\n                setDescription(e.target.value);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box className={classes.itemBox}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              required={true}\r\n              color={\"secondary\"}\r\n              label={i18n.ISNTAPP_TASK_DESCRIPTION}\r\n              value={details}\r\n              onChange={(e) => {\r\n                setDetails(e.target.value);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          </Box>\r\n          {!orderNo && (\r\n            <Box className={classes.itemBox}>\r\n              <TextField\r\n                fullWidth\r\n                select\r\n                required={orderNo ? false : true}\r\n                color={\"secondary\"}\r\n                label={i18n.PROJECTLIST_PROJECT_NO}\r\n                value={projectNo}\r\n                onChange={(e) => {\r\n                  setProjectNo(e.target.value);\r\n                }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              >\r\n                {projectList.map((option, index) => (\r\n                  <MenuItem\r\n                    key={index}\r\n                    value={option.label}\r\n                    className={classes.projectNo}\r\n                  >\r\n                    <Typography variant=\"body2\">\r\n                      {option.projectName}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">{option.value}</Typography>\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Box>\r\n          )}\r\n          {!projectNo && (\r\n            <Box className={classes.itemBox}>\r\n              <TextField\r\n                fullWidth\r\n                select\r\n                required={projectNo ? false : true}\r\n                color={\"secondary\"}\r\n                label={i18n.JOBLIST_ORDER_NUMBER}\r\n                value={orderNo}\r\n                onChange={(e) => {\r\n                  setOrderNo(e.target.value);\r\n                  setAssigneeID(\"\");\r\n                }}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              >\r\n                {orderList.map((option, index) => (\r\n                  <MenuItem\r\n                    key={index}\r\n                    value={option.value}\r\n                    className={classes.projectNo}\r\n                  >\r\n                    <Typography variant=\"body2\">\r\n                      {option.unitDesignation}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">{option.label}</Typography>\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </Box>\r\n          )}\r\n          <Box className={classes.itemBox}>\r\n            {/* <TextField\r\n              required\r\n              fullWidth\r\n              color={\"secondary\"}\r\n              label={i18n.ISNTAPP_DUE_DATE}\r\n              type={\"date\"}\r\n              value={dueDate}\r\n              onChange={(e) => {\r\n                setDueDate(e.target.value);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                inputProps: { min: moment().format(\"YYYY-MM-DD\") },\r\n              }}\r\n            /> */}\r\n            <DatePicker\r\n              autoOk\r\n              fullWidth\r\n              required\r\n              label={i18n.ISNTAPP_DUE_DATE}\r\n              disableToolbar={true}\r\n              variant=\"inline\"\r\n              value={dueDate ? new Date(dueDate) : null}\r\n              minDate={new Date()}\r\n              format=\"YYYY/MM/DD\"\r\n              onChange={(d) => {\r\n                setDueDate(moment(d).format(\"YYYY-MM-DD\"));\r\n              }}\r\n            />\r\n          </Box>\r\n          <Box className={classes.itemBox}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              select\r\n              color={\"secondary\"}\r\n              label={i18n.ISNTAPP_ASSIGNEE}\r\n              value={assigneeID}\r\n              onChange={(e) => {\r\n                setAssigneeID(e.target.value);\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            >\r\n              {projectNo\r\n                ? lodash\r\n                    .unionBy(\r\n                      assignerList.filter((item) => {\r\n                        return (\r\n                          Object.keys(orders)\r\n                            .filter((item) => {\r\n                              return orders[item].projectNumber === projectNo;\r\n                            })\r\n                            .indexOf(item.orderNum) > -1\r\n                        );\r\n                      }),\r\n                      \"label\"\r\n                    )\r\n                    .map((option, index) => (\r\n                      <MenuItem key={index} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))\r\n                : assignerList\r\n                    .filter((item) => {\r\n                      return item.orderNum === orderNo;\r\n                    })\r\n                    .map((option, index) => (\r\n                      <MenuItem key={index} value={option.value}>\r\n                        {option.label}\r\n                      </MenuItem>\r\n                    ))}\r\n            </TextField>\r\n          </Box>\r\n          <Button\r\n            style={{\r\n              backgroundColor: \"rgb(220,0,0)\",\r\n              color: \"white\",\r\n              marginTop: \"20px\",\r\n            }}\r\n            onClick={() => {\r\n              createTaskFn();\r\n            }}\r\n          >\r\n            {i18n.ISNTAPP_SUBMIT}\r\n          </Button>\r\n        </form>\r\n      </PrimaryLayout>\r\n    );\r\n  }\r\n);\r\n\r\nconst mapStateToProps = ({ partners, orders, projects, auth }) => {\r\n  // const filterList = new Set();\r\n  const orderList = Object.keys(orders)\r\n    .map((order) => {\r\n      return {\r\n        label: order,\r\n        value: order,\r\n        unitDesignation: orders[order].unitDesignation,\r\n      };\r\n    })\r\n    .sort((a, b) => (a.label ? (a.label > b.label ? 1 : -1) : 1));\r\n  orderList.unshift({ label: \"\", value: \"\", unitDesignation: \"\" });\r\n  const projectList = Object.keys(projects)\r\n    .map((project) => {\r\n      return {\r\n        label: project,\r\n        value: project,\r\n        projectName: projects[project].description,\r\n      };\r\n    })\r\n    .sort((a, b) => (a.label ? (a.label > b.label ? 1 : -1) : 1));\r\n  projectList.unshift({ label: \"\", value: \"\", projectName: \"\" });\r\n\r\n  return {\r\n    assignerList: Array.from(\r\n      new Set(\r\n        Object.keys(partners)\r\n          .filter((partner) => {\r\n            return (\r\n              partners[partner].functionNumber === \"Z(\" ||\r\n              partners[partner].functionNumber === \"VW\" ||\r\n              partners[partner].functionNumber === \"YI\"\r\n            );\r\n          })\r\n          .map((item) => {\r\n            let lable;\r\n            if (partners[item].functionNumber === \"Z(\") {\r\n              lable = `PE-${partners[item].name1}`;\r\n            } else if (partners[item].functionNumber === \"VW\") {\r\n              lable = `TL-${partners[item].name1}`;\r\n            } else {\r\n              lable = `PM-${partners[item].name1}`;\r\n            }\r\n\r\n            return {\r\n              label: lable,\r\n              value: partners[item].number,\r\n              orderNum: partners[item].orderNumber,\r\n            };\r\n          })\r\n      )\r\n    )\r\n      .sort((a, b) => (a.label ? (a.label > b.label ? 1 : -1) : 1))\r\n      .filter((items) => {\r\n        return items;\r\n      }),\r\n    orderList: orderList,\r\n    projectList: projectList,\r\n    partnerNo: auth.personalNumber,\r\n    orders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchCreateTask: (data) => {\r\n      dispatch(action.fetchCreateTask(data)).then((response) => {\r\n        repo.fetchTasks().then((data) => {\r\n          dispatch(action.setTasks(data));\r\n        });\r\n      });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskCreatePage);\r\n"]},"metadata":{},"sourceType":"module"}
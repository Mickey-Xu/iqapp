{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\nimport isValidIdentifier from \"../expr/isValidIdentifier\";\nimport assert from \"assert\";\nexport function isDuplicateValue(options, value) {\n  return options.filter(o => o.value === value).length >= 2;\n}\nexport function generateUniqueOptionValue(options) {\n  for (let i = 1;; i += 1) {\n    const value = `value${i}`;\n\n    if (options.every(o => o.value !== value)) {\n      return value;\n    }\n  }\n}\nexport function ensureOptionValues(options) {\n  options.forEach(option => {\n    if (!option.value) {\n      option.value = generateUniqueOptionValue(options);\n    }\n  });\n}\nexport const FREE_TEXT_VALUE = \"free_text_option_value\";\nassert(isValidIdentifier(FREE_TEXT_VALUE));","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/utils/options.js"],"names":["isValidIdentifier","assert","isDuplicateValue","options","value","filter","o","length","generateUniqueOptionValue","i","every","ensureOptionValues","forEach","option","FREE_TEXT_VALUE"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,OAA1B,EAAmCC,KAAnC,EAA0C;AAC/C,SAAOD,OAAO,CAACE,MAAR,CAAgBC,CAAD,IAAOA,CAAC,CAACF,KAAF,KAAYA,KAAlC,EAAyCG,MAAzC,IAAmD,CAA1D;AACD;AAED,OAAO,SAASC,yBAAT,CAAmCL,OAAnC,EAA4C;AACjD,OAAK,IAAIM,CAAC,GAAG,CAAb,GAAkBA,CAAC,IAAI,CAAvB,EAA0B;AACxB,UAAML,KAAK,GAAI,QAAOK,CAAE,EAAxB;;AACA,QAAIN,OAAO,CAACO,KAAR,CAAeJ,CAAD,IAAOA,CAAC,CAACF,KAAF,KAAYA,KAAjC,CAAJ,EAA6C;AAC3C,aAAOA,KAAP;AACD;AACF;AACF;AAED,OAAO,SAASO,kBAAT,CAA4BR,OAA5B,EAAqC;AAC1CA,EAAAA,OAAO,CAACS,OAAR,CAAiBC,MAAD,IAAY;AAC1B,QAAI,CAACA,MAAM,CAACT,KAAZ,EAAmB;AACjBS,MAAAA,MAAM,CAACT,KAAP,GAAeI,yBAAyB,CAACL,OAAD,CAAxC;AACD;AACF,GAJD;AAKD;AAED,OAAO,MAAMW,eAAe,GAAG,wBAAxB;AACPb,MAAM,CAACD,iBAAiB,CAACc,eAAD,CAAlB,CAAN","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport isValidIdentifier from \"../expr/isValidIdentifier\";\r\nimport assert from \"assert\";\r\n\r\nexport function isDuplicateValue(options, value) {\r\n  return options.filter((o) => o.value === value).length >= 2;\r\n}\r\n\r\nexport function generateUniqueOptionValue(options) {\r\n  for (let i = 1; ; i += 1) {\r\n    const value = `value${i}`;\r\n    if (options.every((o) => o.value !== value)) {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nexport function ensureOptionValues(options) {\r\n  options.forEach((option) => {\r\n    if (!option.value) {\r\n      option.value = generateUniqueOptionValue(options);\r\n    }\r\n  });\r\n}\r\n\r\nexport const FREE_TEXT_VALUE = \"free_text_option_value\";\r\nassert(isValidIdentifier(FREE_TEXT_VALUE));\r\n"]},"metadata":{},"sourceType":"module"}
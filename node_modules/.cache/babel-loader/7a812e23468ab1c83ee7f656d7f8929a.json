{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\OrderInstallationListPage\\\\index.js\";\nimport * as action from \"actions\";\nimport OrderActivityList from \"components/OrderActivityList\";\nimport OrderActivityListCard from \"components/OrderActivityListCard\";\nimport { LocalizeContext } from \"i18n\";\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as publicFn from \"../../js/publicFn/index\";\n\nconst OrderInstallationListPage = ({\n  data,\n  orderNumber,\n  submit\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  return /*#__PURE__*/React.createElement(PrimaryLayout, {\n    title: i18n.ISNTAPP_JOBLIST_INST_STEPS + \": \" + orderNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OrderActivityList, {\n    data: data,\n    component: OrderActivityListCard,\n    tabType: \"\",\n    submit: (activityNumber, date, type) => {\n      submit(activityNumber, orderNumber, date, type);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToState = dispatch => {\n  return {\n    submit: (activityNumber, orderNumber, date, type) => {\n      let data = {\n        activityNo: activityNumber,\n        date: date ? date : \"\",\n        orderNo: orderNumber,\n        type: type\n      };\n      dispatch(action.updateOrderActivityStatus(data));\n    }\n  };\n};\n\nexport default connect(({\n  auth,\n  installations,\n  orderActivities,\n  orders\n}, {\n  match: {\n    params: {\n      number: orderNumber\n    }\n  }\n}) => {\n  const {\n    productFamily\n  } = orders[orderNumber] || {};\n  return {\n    data: Object.keys(installations).filter(key => {\n      return installations[key].orderNumber === orderNumber;\n    }).map(key => {\n      const stepNumber = installations[key].stepNumber;\n      const description = installations[key].description;\n      const {\n        confirmedDate,\n        leadingDate,\n        leadingEndDate,\n        leadingStartDate,\n        info,\n        originalStep,\n        activityNumber,\n        editable\n      } = orderActivities[key] || {};\n      let authOrderActivities = {\n        auth,\n        orderActivities\n      };\n      let ownprops = {\n        activityNumber,\n        orderNumber\n      };\n      const isExecutable = publicFn.DatePermissionControl(authOrderActivities, ownprops);\n      return {\n        activityNumber: activityNumber,\n        confirmedDate: confirmedDate ? new Date(confirmedDate).toLocaleDateString() : \"-\",\n        descriptionShort: description,\n        leadingDate: leadingDate ? new Date(leadingDate).toLocaleDateString() : leadingStartDate && leadingEndDate ? new Date(leadingEndDate).toLocaleDateString() : \"-\",\n        info: info || \"-\",\n        orderNumber: orderNumber,\n        stepNumber: stepNumber,\n        productFamily,\n        originalStep,\n        editable,\n        isExecutable\n      };\n    }),\n    orderNumber: orderNumber\n  };\n}, mapDispatchToState)(OrderInstallationListPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/OrderInstallationListPage/index.js"],"names":["action","OrderActivityList","OrderActivityListCard","LocalizeContext","PrimaryLayout","React","connect","publicFn","OrderInstallationListPage","data","orderNumber","submit","i18n","useContext","ISNTAPP_JOBLIST_INST_STEPS","activityNumber","date","type","mapDispatchToState","dispatch","activityNo","orderNo","updateOrderActivityStatus","auth","installations","orderActivities","orders","match","params","number","productFamily","Object","keys","filter","key","map","stepNumber","description","confirmedDate","leadingDate","leadingEndDate","leadingStartDate","info","originalStep","editable","authOrderActivities","ownprops","isExecutable","DatePermissionControl","Date","toLocaleDateString","descriptionShort"],"mappings":"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","sourcesContent":["import * as action from \"actions\";\r\nimport OrderActivityList from \"components/OrderActivityList\";\r\nimport OrderActivityListCard from \"components/OrderActivityListCard\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as publicFn from \"../../js/publicFn/index\";\r\n\r\nconst OrderInstallationListPage = ({ data, orderNumber, submit }) => {\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  return (\r\n    <PrimaryLayout title={i18n.ISNTAPP_JOBLIST_INST_STEPS + \": \" + orderNumber}>\r\n      <OrderActivityList\r\n        data={data}\r\n        component={OrderActivityListCard}\r\n        tabType=\"\"\r\n        submit={(activityNumber, date, type) => {\r\n          submit(activityNumber, orderNumber, date, type);\r\n        }}\r\n      ></OrderActivityList>\r\n    </PrimaryLayout>\r\n  );\r\n};\r\n\r\nconst mapDispatchToState = (dispatch) => {\r\n  return {\r\n    submit: (activityNumber, orderNumber, date, type) => {\r\n      let data = {\r\n        activityNo: activityNumber,\r\n        date: date ? date : \"\",\r\n        orderNo: orderNumber,\r\n        type: type,\r\n      };\r\n      dispatch(action.updateOrderActivityStatus(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  (\r\n    { auth, installations, orderActivities, orders },\r\n    {\r\n      match: {\r\n        params: { number: orderNumber },\r\n      },\r\n    }\r\n  ) => {\r\n    const { productFamily } = orders[orderNumber] || {};\r\n\r\n    return {\r\n      data: Object.keys(installations)\r\n        .filter((key) => {\r\n          return installations[key].orderNumber === orderNumber;\r\n        })\r\n        .map((key) => {\r\n          const stepNumber = installations[key].stepNumber;\r\n          const description = installations[key].description;\r\n          const {\r\n            confirmedDate,\r\n            leadingDate,\r\n            leadingEndDate,\r\n            leadingStartDate,\r\n            info,\r\n            originalStep,\r\n            activityNumber,\r\n            editable,\r\n          } = orderActivities[key] || {};\r\n\r\n          let authOrderActivities = {\r\n            auth,\r\n            orderActivities,\r\n          };\r\n\r\n          let ownprops = {\r\n            activityNumber,\r\n            orderNumber,\r\n          };\r\n\r\n          const isExecutable = publicFn.DatePermissionControl(\r\n            authOrderActivities,\r\n            ownprops\r\n          );\r\n          return {\r\n            activityNumber: activityNumber,\r\n            confirmedDate: confirmedDate\r\n              ? new Date(confirmedDate).toLocaleDateString()\r\n              : \"-\",\r\n            descriptionShort: description,\r\n            leadingDate: leadingDate\r\n              ? new Date(leadingDate).toLocaleDateString()\r\n              : leadingStartDate && leadingEndDate\r\n              ? new Date(leadingEndDate).toLocaleDateString()\r\n              : \"-\",\r\n            info: info || \"-\",\r\n            orderNumber: orderNumber,\r\n            stepNumber: stepNumber,\r\n            productFamily,\r\n            originalStep,\r\n            editable,\r\n            isExecutable,\r\n          };\r\n        }),\r\n      orderNumber: orderNumber,\r\n    };\r\n  },\r\n  mapDispatchToState\r\n)(OrderInstallationListPage);\r\n"]},"metadata":{},"sourceType":"module"}
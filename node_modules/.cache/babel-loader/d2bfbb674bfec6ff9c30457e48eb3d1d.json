{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\TaskGroupPage\\\\index.js\";\nimport { Box } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { AssignmentOutlined, ChevronRight } from \"@material-ui/icons\";\nimport { LocalizeContext } from \"i18n\";\nimport { getAwaitComplateAwaitCloseCount } from \"js/util\";\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nconst TaskManagermentPage = withStyles(({\n  spacing\n}) => {\n  return {\n    root: {\n      width: `calc(100% - 16px)`,\n      height: `calc(100% - 16px)`,\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin: \"8px\"\n    },\n    itemBox: {\n      width: \"100%\",\n      padding: \"4px\",\n      margin: \"4px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      borderBottom: \"1px solid darkgray\"\n    },\n    itemIcon: {\n      width: `24px`,\n      color: \"rgb(220,0,0)\",\n      paddingTop: \"4px\",\n      margin: \"0 4px\"\n    },\n    discriptionBox: {\n      width: `calc(100% - 54px)`\n    },\n    iconBox: {\n      paddingTop: \"6px\",\n      width: \"6px\",\n      color: \"rgb(220,0,0)\"\n    },\n    discription: {\n      padding: spacing(0.5, 1),\n      backgroundColor: \"red\",\n      borderRadius: \"30px\",\n      color: \"white\",\n      marginLeft: spacing(1)\n    }\n  };\n})(({\n  classes,\n  taskDataGroup\n}) => {\n  const history = useHistory();\n  const i18n = React.useContext(LocalizeContext);\n  const tasks = taskDataGroup.filter((task, index, self) => index === self.findIndex(t => t.taskType === task.taskType));\n\n  const getToken = () => {\n    //     const data = {\n    //       \"AppId\": \"SCF.IQAPP\",\n    //       \"UserName\": \"IQAPP\",\n    //       \"Password\": \"YtLPPMGa9YUkGsJZNYJA8\"\n    //     }\n    // axios({\n    //   method: 'post',  // 使用 POST 请求\n    //   url: \"https://ldp.sodec.cn/user/login\",      \n    //   data: data,  \n    //   headers: {\n    //     'Content-Type': 'application/json',  \n    //   }\n    // })\n    //   .then(response => {\n    //     console.log('Response:', response.data);  \n    //   })\n    //   .catch(error => {\n    //     console.error('Error:', error);\n    //   });\n    const data = {\n      \"token_type\": \"Bearer\",\n      \"expires_in\": 3600,\n      \"not_before\": null,\n      \"expires_on\": \"2024-11-26T04:09:34\",\n      \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjBzTkoxc3d1bm5wdXJSdXltOFViaWciLCJ0eXAiOiJhdCtqd3QifQ.eyJuYmYiOjE3MzI1OTA1NzQsImV4cCI6MTczMjU5NDE3NCwiaXNzIjoiaHR0cHM6Ly9wcm94eS5zY2hpbmRsZXIuY29tL2lkZW50aXR5c3RzIiwiYXVkIjoiTkkuT0kuU2lnbmFsUi5Qcm94eS5BcGkiLCJjbGllbnRfaWQiOiJBUFAuU0NOLlNpZ25hbFIuUmV2ZXJzZS5Qcm94eSIsInNjb3BlIjpbIk5JLk9JLlNpZ25hbFIuUHJveHkuQXBpIl19.1tnLZRo4zhv-XthG_DE8WFeRaNld2RgNRgae5fxqYgUJ_1seceWwOX4TOThhDg69hm1q_-bNX6IsrlDyin1BeVdAmXWjLWjC7Du0twZCelJlz7Ycpr7g36uiUSR--pGb8oNyjBZt8-s67l49dYSXs4L7BqfPkdEucKUHWx4Hka1SMNIrC7gVO-3LpohJ8J7rrgsWPW0T4HLF8NSy_M6Lusew0mG-Y4z-OqTQ1B-f0Wv1dPz2-mS6JvZG8PEWbqbN_TDb85vYhcAPOBbF77I90w9fUqvEkm-Yr80p0n0hRBlsiOc-rafzDIShYpkyJ7HWDpPmXH4MrsOn483u3Uc-IA\"\n    };\n    window.localStorage.setItem(\"idptAuth\", JSON.stringify(data));\n  };\n\n  return /*#__PURE__*/React.createElement(PrimaryLayout, {\n    name: \"TasksGroupPage\",\n    title: i18n.INSTAPP_JOBLIST_TASKS,\n    pageLevel: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, tasks.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: index,\n      className: classes.itemBox,\n      onClick: () => {\n        // history.push(`/taskList/${item.taskType}`);\n        getToken();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      className: classes.itemIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AssignmentOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Box, {\n      className: classes.discriptionBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, item.taskType, item.awaitStartNum + item.awaitCloseNum + item.awaitComplateNum > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.discription,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, item.awaitStartNum + item.awaitCloseNum + item.awaitComplateNum)), /*#__PURE__*/React.createElement(Box, {\n      className: classes.iconBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ChevronRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    })));\n  })));\n});\nexport default connect((state, props) => {\n  let tasks = Object.keys(state === null || state === void 0 ? void 0 : state.tasks).length > 0 ? state === null || state === void 0 ? void 0 : state.tasks : [];\n  const taskList = getAwaitComplateAwaitCloseCount(tasks);\n  return {\n    taskDataGroup: taskList\n  };\n})(TaskManagermentPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/TaskGroupPage/index.js"],"names":["Box","withStyles","AssignmentOutlined","ChevronRight","LocalizeContext","getAwaitComplateAwaitCloseCount","PrimaryLayout","React","connect","useHistory","axios","TaskManagermentPage","spacing","root","width","height","display","flexDirection","margin","itemBox","padding","alignItems","borderBottom","itemIcon","color","paddingTop","discriptionBox","iconBox","discription","backgroundColor","borderRadius","marginLeft","classes","taskDataGroup","history","i18n","useContext","tasks","filter","task","index","self","findIndex","t","taskType","getToken","data","window","localStorage","setItem","JSON","stringify","INSTAPP_JOBLIST_TASKS","map","item","awaitStartNum","awaitCloseNum","awaitComplateNum","state","props","Object","keys","length","taskList"],"mappings":"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","sourcesContent":["import { Box } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { AssignmentOutlined, ChevronRight } from \"@material-ui/icons\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport { getAwaitComplateAwaitCloseCount } from \"js/util\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst TaskManagermentPage = withStyles(({ spacing }) => {\r\n  return {\r\n    root: {\r\n      width: `calc(100% - 16px)`,\r\n      height: `calc(100% - 16px)`,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      margin: \"8px\",\r\n    },\r\n    itemBox: {\r\n      width: \"100%\",\r\n      padding: \"4px\",\r\n      margin: \"4px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      borderBottom: \"1px solid darkgray\",\r\n    },\r\n    itemIcon: {\r\n      width: `24px`,\r\n      color: \"rgb(220,0,0)\",\r\n      paddingTop: \"4px\",\r\n      margin: \"0 4px\",\r\n    },\r\n    discriptionBox: {\r\n      width: `calc(100% - 54px)`,\r\n    },\r\n    iconBox: {\r\n      paddingTop: \"6px\",\r\n      width: \"6px\",\r\n      color: \"rgb(220,0,0)\",\r\n    },\r\n    discription: {\r\n      padding: spacing(0.5, 1),\r\n      backgroundColor: \"red\",\r\n      borderRadius: \"30px\",\r\n      color: \"white\",\r\n      marginLeft: spacing(1),\r\n    },\r\n  };\r\n})(({ classes, taskDataGroup }) => {\r\n  const history = useHistory();\r\n  const i18n = React.useContext(LocalizeContext);\r\n  const tasks = taskDataGroup.filter((task, index, self) =>\r\n    index === self.findIndex(t => t.taskType === task.taskType)\r\n  );\r\n\r\n\r\n  const getToken= () => {\r\n    //     const data = {\r\n    //       \"AppId\": \"SCF.IQAPP\",\r\n    //       \"UserName\": \"IQAPP\",\r\n    //       \"Password\": \"YtLPPMGa9YUkGsJZNYJA8\"\r\n    //     }\r\n\r\n    // axios({\r\n    //   method: 'post',  // 使用 POST 请求\r\n    //   url: \"https://ldp.sodec.cn/user/login\",      \r\n    //   data: data,  \r\n    //   headers: {\r\n    //     'Content-Type': 'application/json',  \r\n    //   }\r\n    // })\r\n    //   .then(response => {\r\n    //     console.log('Response:', response.data);  \r\n    //   })\r\n    //   .catch(error => {\r\n    //     console.error('Error:', error);\r\n    //   });\r\n    const data = {\r\n      \"token_type\": \"Bearer\",\r\n      \"expires_in\": 3600,\r\n      \"not_before\": null,\r\n      \"expires_on\": \"2024-11-26T04:09:34\",\r\n      \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjBzTkoxc3d1bm5wdXJSdXltOFViaWciLCJ0eXAiOiJhdCtqd3QifQ.eyJuYmYiOjE3MzI1OTA1NzQsImV4cCI6MTczMjU5NDE3NCwiaXNzIjoiaHR0cHM6Ly9wcm94eS5zY2hpbmRsZXIuY29tL2lkZW50aXR5c3RzIiwiYXVkIjoiTkkuT0kuU2lnbmFsUi5Qcm94eS5BcGkiLCJjbGllbnRfaWQiOiJBUFAuU0NOLlNpZ25hbFIuUmV2ZXJzZS5Qcm94eSIsInNjb3BlIjpbIk5JLk9JLlNpZ25hbFIuUHJveHkuQXBpIl19.1tnLZRo4zhv-XthG_DE8WFeRaNld2RgNRgae5fxqYgUJ_1seceWwOX4TOThhDg69hm1q_-bNX6IsrlDyin1BeVdAmXWjLWjC7Du0twZCelJlz7Ycpr7g36uiUSR--pGb8oNyjBZt8-s67l49dYSXs4L7BqfPkdEucKUHWx4Hka1SMNIrC7gVO-3LpohJ8J7rrgsWPW0T4HLF8NSy_M6Lusew0mG-Y4z-OqTQ1B-f0Wv1dPz2-mS6JvZG8PEWbqbN_TDb85vYhcAPOBbF77I90w9fUqvEkm-Yr80p0n0hRBlsiOc-rafzDIShYpkyJ7HWDpPmXH4MrsOn483u3Uc-IA\"\r\n    };\r\n    window.localStorage.setItem(\"idptAuth\", JSON.stringify(data));\r\n\r\n}\r\n\r\n  return (\r\n    <PrimaryLayout\r\n      name=\"TasksGroupPage\"\r\n      title={i18n.INSTAPP_JOBLIST_TASKS}\r\n      pageLevel={1}\r\n    >\r\n      <Box className={classes.root}>\r\n        {tasks.map((item,index) => {\r\n          return <Box\r\n            key={index}\r\n            className={classes.itemBox}\r\n            onClick={() => {\r\n              // history.push(`/taskList/${item.taskType}`);\r\n              getToken()\r\n            }}\r\n          >\r\n            <Box className={classes.itemIcon}>\r\n              <AssignmentOutlined />\r\n            </Box>\r\n            <Box className={classes.discriptionBox}>\r\n              {item.taskType}\r\n              {(item.awaitStartNum +item.awaitCloseNum + item.awaitComplateNum) > 0 && (\r\n                <span className={classes.discription}>{item.awaitStartNum +item.awaitCloseNum + item.awaitComplateNum}</span>\r\n              )}\r\n            </Box>\r\n            <Box className={classes.iconBox}>\r\n              <ChevronRight />\r\n            </Box>\r\n          </Box>\r\n        })}\r\n      \r\n      </Box>\r\n    </PrimaryLayout>\r\n  );\r\n});\r\nexport default connect((state, props) => {\r\n  let tasks = Object.keys(state?.tasks).length > 0 ? state?.tasks : [];\r\n  const taskList = getAwaitComplateAwaitCloseCount(tasks);\r\n  return {\r\n    taskDataGroup: taskList\r\n  };\r\n})(TaskManagermentPage);\r\n"]},"metadata":{},"sourceType":"module"}
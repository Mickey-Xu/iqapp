{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\UserManualPage\\\\index.js\";\nimport { Accordion, AccordionSummary, Box, Button, Typography, withStyles } from \"@material-ui/core\";\nimport * as action from \"actions\";\nimport Model from \"components/Model\";\nimport Pdf from \"components/Pdf\";\nimport { LocalizeContext } from \"i18n\";\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\nimport { default as React, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport FFTab from \"components/FFTab\";\nconst Template = withStyles(({\n  spacing\n}) => ({\n  root: {\n    padding: 0\n  },\n  box: {\n    width: \"90%\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    margin: \"0 auto\"\n  }\n}))(({\n  classes,\n  preview,\n  name,\n  id\n}) => {\n  const [expanded] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [pdfurl, setPdfurl] = React.useState(null);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleClickOpen = id => {\n    preview(id).then(url => {\n      setPdfurl(url);\n      setOpen(true);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Accordion, {\n    expanded: expanded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AccordionSummary, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      lineHeight: \"36px\"\n    },\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      height: \"fit-content\"\n    },\n    onClick: () => handleClickOpen(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"\\u9884\\u89C8\"))), /*#__PURE__*/React.createElement(Model, {\n    open: open,\n    title: name,\n    handleClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pdf, {\n    filePath: pdfurl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  })));\n});\nconst UserManualPage = withStyles(({\n  spacing\n}) => ({\n  root: {\n    width: \"90%\",\n    fontWeight: \"500\",\n    margin: spacing(2, \"auto\")\n  },\n  list: {\n    padding: 0\n  },\n  listItem: {\n    marginBottom: spacing(3),\n    backgroundColor: \"#fff\"\n  }\n}))(({\n  preview,\n  classes,\n  getUserManual\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  const [data, setData] = React.useState([]);\n  const [tabs, setTabs] = React.useState([]);\n  const [tabItem, setTabItem] = React.useState();\n\n  const getData = () => {\n    getUserManual().then(res => {\n      var _tabName$;\n\n      const tabName = [...new Set(res.map(item => {\n        return item.type;\n      }))].map(item => {\n        return {\n          title: item,\n          value: item\n        };\n      });\n      setTabItem(tabName === null || tabName === void 0 ? void 0 : (_tabName$ = tabName[0]) === null || _tabName$ === void 0 ? void 0 : _tabName$.title);\n      setTabs(tabName);\n      setData(res);\n    });\n  };\n\n  useEffect(() => {\n    getData(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(PrimaryLayout, {\n    name: \"activity Document\",\n    title: i18n.INSTALLATION_USER_MANUAL,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, tabItem && /*#__PURE__*/React.createElement(FFTab, {\n    tabs: tabs,\n    selectedTabValue: tabItem,\n    onTabChange: value => {\n      setTabItem(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, (data === null || data === void 0 ? void 0 : data.length) > 0 && data.filter(item => item.type === tabItem).map((item, index) => {\n    return /*#__PURE__*/React.createElement(Template, {\n      key: index,\n      preview: preview,\n      name: item.name,\n      id: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    });\n  })));\n});\nexport default connect(({\n  state\n}, {\n  ownProps\n}) => {\n  return {};\n}, dispatch => {\n  return {\n    getUserManual: () => {\n      return dispatch(action.getUserManual());\n    },\n    preview: id => {\n      return dispatch(action.getPdfData(id));\n    }\n  };\n})(UserManualPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/UserManualPage/index.js"],"names":["Accordion","AccordionSummary","Box","Button","Typography","withStyles","action","Model","Pdf","LocalizeContext","PrimaryLayout","default","React","useEffect","connect","FFTab","Template","spacing","root","padding","box","width","display","justifyContent","margin","classes","preview","name","id","expanded","useState","open","setOpen","pdfurl","setPdfurl","handleClose","handleClickOpen","then","url","lineHeight","height","UserManualPage","fontWeight","list","listItem","marginBottom","backgroundColor","getUserManual","i18n","useContext","data","setData","tabs","setTabs","tabItem","setTabItem","getData","res","tabName","Set","map","item","type","title","value","INSTALLATION_USER_MANUAL","length","filter","index","state","ownProps","dispatch","getPdfData"],"mappings":"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","sourcesContent":["import {\r\n  Accordion,\r\n  AccordionSummary,\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport * as action from \"actions\";\r\nimport Model from \"components/Model\";\r\nimport Pdf from \"components/Pdf\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport { default as React, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport FFTab from \"components/FFTab\";\r\n\r\nconst Template = withStyles(({ spacing }) => ({\r\n  root: {\r\n    padding: 0,\r\n  },\r\n  box: {\r\n    width: \"90%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"0 auto\",\r\n  },\r\n}))(({ classes, preview, name, id }) => {\r\n  const [expanded] = React.useState(true);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [pdfurl, setPdfurl] = React.useState(null);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpen = (id) => {\r\n    preview(id).then((url) => {\r\n      setPdfurl(url);\r\n      setOpen(true);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Accordion expanded={expanded}>\r\n      <AccordionSummary className={classes.root}>\r\n        <Box className={classes.box}>\r\n          <Typography style={{ lineHeight: \"36px\" }} color=\"error\">\r\n            {name}\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            style={{ height: \"fit-content\" }}\r\n            onClick={() => handleClickOpen(id)}\r\n          >\r\n            预览\r\n          </Button>\r\n        </Box>\r\n      </AccordionSummary>\r\n      <Model open={open} title={name} handleClose={handleClose}>\r\n        <Pdf filePath={pdfurl} />\r\n      </Model>\r\n    </Accordion>\r\n  );\r\n});\r\n\r\nconst UserManualPage = withStyles(({ spacing }) => ({\r\n  root: {\r\n    width: \"90%\",\r\n    fontWeight: \"500\",\r\n    margin: spacing(2, \"auto\"),\r\n  },\r\n  list: {\r\n    padding: 0,\r\n  },\r\n  listItem: {\r\n    marginBottom: spacing(3),\r\n    backgroundColor: \"#fff\",\r\n  },\r\n}))(({ preview, classes, getUserManual }) => {\r\n  const i18n = React.useContext(LocalizeContext);\r\n  const [data, setData] = React.useState([]);\r\n  const [tabs, setTabs] = React.useState([]);\r\n  const [tabItem, setTabItem] = React.useState();\r\n\r\n  const getData = () => {\r\n    getUserManual().then((res) => {\r\n      const tabName = [\r\n        ...new Set(\r\n          res.map((item) => {\r\n            return item.type;\r\n          })\r\n        ),\r\n      ].map((item) => {\r\n        return { title: item, value: item };\r\n      });\r\n\r\n      setTabItem(tabName?.[0]?.title);\r\n      setTabs(tabName);\r\n      setData(res);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <PrimaryLayout\r\n      name=\"activity Document\"\r\n      title={i18n.INSTALLATION_USER_MANUAL}\r\n    >\r\n      {tabItem && (\r\n        <FFTab\r\n          tabs={tabs}\r\n          selectedTabValue={tabItem}\r\n          onTabChange={(value) => {\r\n            setTabItem(value);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <Box className={classes.root}>\r\n        {data?.length > 0 &&\r\n          data\r\n            .filter((item) => item.type === tabItem)\r\n            .map((item, index) => {\r\n              return (\r\n                <Template\r\n                  key={index}\r\n                  preview={preview}\r\n                  name={item.name}\r\n                  id={item.id}\r\n                />\r\n              );\r\n            })}\r\n      </Box>\r\n    </PrimaryLayout>\r\n  );\r\n});\r\n\r\nexport default connect(\r\n  ({ state }, { ownProps }) => {\r\n    return {};\r\n  },\r\n  (dispatch) => {\r\n    return {\r\n      getUserManual: () => {\r\n        return dispatch(action.getUserManual());\r\n      },\r\n      preview: (id) => {\r\n        return dispatch(action.getPdfData(id));\r\n      },\r\n    };\r\n  }\r\n)(UserManualPage);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */import{appendChild,appendQuestionBlock,hasChildNode,readQuestionBlock,getRequiredAttr,getChildNode,getAttrWithDefault}from\"./utils/xml\";export default{serialize:function serialize(doc,findField,parentNode,field){var _field$settings=field.settings,min=_field$settings.min,max=_field$settings.max,step=_field$settings.step,initialValue=_field$settings.initialValue,value=_field$settings.value;var questionBlock=appendQuestionBlock(doc,findField,parentNode,\"decimal\",field);questionBlock.setAttribute(\"value\",initialValue);appendChild(doc,questionBlock,\"range\",null,{from:min,to:max,step:step,value:value});},canDeserialize:function canDeserialize(node){return node.nodeName===\"question_block\"&&hasChildNode(node,\"range\");},deserialize:function deserialize(node){var field=readQuestionBlock(node,\"slider\",\"decimal\");// eslint-disable-line prefer-const\nvar rangeNode=getChildNode(node,\"range\");field.settings.min=Number(getRequiredAttr(rangeNode,\"from\"));field.settings.max=Number(getRequiredAttr(rangeNode,\"to\"));field.settings.step=Number(getRequiredAttr(rangeNode,\"step\"));field.settings.initialValue=Number(getRequiredAttr(rangeNode,\"value\"));var value=Number(getAttrWithDefault(node,\"value\",\"x\"));if(!Number.isNaN(value)){field.settings.value=value;}return field;}};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/SliderIO.js"],"names":["appendChild","appendQuestionBlock","hasChildNode","readQuestionBlock","getRequiredAttr","getChildNode","getAttrWithDefault","serialize","doc","findField","parentNode","field","settings","min","max","step","initialValue","value","questionBlock","setAttribute","from","to","canDeserialize","node","nodeName","deserialize","rangeNode","Number","isNaN"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,OACEA,WADF,CAEEC,mBAFF,CAGEC,YAHF,CAIEC,iBAJF,CAKEC,eALF,CAMEC,YANF,CAOEC,kBAPF,KAQO,aARP,CAUA,cAAe,CACbC,SADa,oBACHC,GADG,CACEC,SADF,CACaC,UADb,CACyBC,KADzB,CACgC,qBACKA,KAAK,CAACC,QADX,CACnCC,GADmC,iBACnCA,GADmC,CAC9BC,GAD8B,iBAC9BA,GAD8B,CACzBC,IADyB,iBACzBA,IADyB,CACnBC,YADmB,iBACnBA,YADmB,CACLC,KADK,iBACLA,KADK,CAG3C,GAAMC,CAAAA,aAAa,CAAGjB,mBAAmB,CACvCO,GADuC,CAEvCC,SAFuC,CAGvCC,UAHuC,CAIvC,SAJuC,CAKvCC,KALuC,CAAzC,CAOAO,aAAa,CAACC,YAAd,CAA2B,OAA3B,CAAoCH,YAApC,EAEAhB,WAAW,CAACQ,GAAD,CAAMU,aAAN,CAAqB,OAArB,CAA8B,IAA9B,CAAoC,CAC7CE,IAAI,CAAEP,GADuC,CAE7CQ,EAAE,CAAEP,GAFyC,CAG7CC,IAAI,CAAEA,IAHuC,CAI7CE,KAAK,CAALA,KAJ6C,CAApC,CAAX,CAMD,CAnBY,CAqBbK,cArBa,yBAqBEC,IArBF,CAqBQ,CACnB,MAAOA,CAAAA,IAAI,CAACC,QAAL,GAAkB,gBAAlB,EAAsCtB,YAAY,CAACqB,IAAD,CAAO,OAAP,CAAzD,CACD,CAvBY,CAyBbE,WAzBa,sBAyBDF,IAzBC,CAyBK,CAChB,GAAIZ,CAAAA,KAAK,CAAGR,iBAAiB,CAACoB,IAAD,CAAO,QAAP,CAAiB,SAAjB,CAA7B,CAA0D;AAE1D,GAAMG,CAAAA,SAAS,CAAGrB,YAAY,CAACkB,IAAD,CAAO,OAAP,CAA9B,CACAZ,KAAK,CAACC,QAAN,CAAeC,GAAf,CAAqBc,MAAM,CAACvB,eAAe,CAACsB,SAAD,CAAY,MAAZ,CAAhB,CAA3B,CACAf,KAAK,CAACC,QAAN,CAAeE,GAAf,CAAqBa,MAAM,CAACvB,eAAe,CAACsB,SAAD,CAAY,IAAZ,CAAhB,CAA3B,CACAf,KAAK,CAACC,QAAN,CAAeG,IAAf,CAAsBY,MAAM,CAACvB,eAAe,CAACsB,SAAD,CAAY,MAAZ,CAAhB,CAA5B,CACAf,KAAK,CAACC,QAAN,CAAeI,YAAf,CAA8BW,MAAM,CAACvB,eAAe,CAACsB,SAAD,CAAY,OAAZ,CAAhB,CAApC,CAEA,GAAMT,CAAAA,KAAK,CAAGU,MAAM,CAACrB,kBAAkB,CAACiB,IAAD,CAAO,OAAP,CAAgB,GAAhB,CAAnB,CAApB,CACA,GAAI,CAACI,MAAM,CAACC,KAAP,CAAaX,KAAb,CAAL,CAA0B,CACxBN,KAAK,CAACC,QAAN,CAAeK,KAAf,CAAuBA,KAAvB,CACD,CAED,MAAON,CAAAA,KAAP,CACD,CAxCY,CAAf","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport {\r\n  appendChild,\r\n  appendQuestionBlock,\r\n  hasChildNode,\r\n  readQuestionBlock,\r\n  getRequiredAttr,\r\n  getChildNode,\r\n  getAttrWithDefault,\r\n} from \"./utils/xml\";\r\n\r\nexport default {\r\n  serialize(doc, findField, parentNode, field) {\r\n    const { min, max, step, initialValue, value } = field.settings;\r\n\r\n    const questionBlock = appendQuestionBlock(\r\n      doc,\r\n      findField,\r\n      parentNode,\r\n      \"decimal\",\r\n      field\r\n    );\r\n    questionBlock.setAttribute(\"value\", initialValue);\r\n\r\n    appendChild(doc, questionBlock, \"range\", null, {\r\n      from: min,\r\n      to: max,\r\n      step: step,\r\n      value,\r\n    });\r\n  },\r\n\r\n  canDeserialize(node) {\r\n    return node.nodeName === \"question_block\" && hasChildNode(node, \"range\");\r\n  },\r\n\r\n  deserialize(node) {\r\n    let field = readQuestionBlock(node, \"slider\", \"decimal\"); // eslint-disable-line prefer-const\r\n\r\n    const rangeNode = getChildNode(node, \"range\");\r\n    field.settings.min = Number(getRequiredAttr(rangeNode, \"from\"));\r\n    field.settings.max = Number(getRequiredAttr(rangeNode, \"to\"));\r\n    field.settings.step = Number(getRequiredAttr(rangeNode, \"step\"));\r\n    field.settings.initialValue = Number(getRequiredAttr(rangeNode, \"value\"));\r\n\r\n    const value = Number(getAttrWithDefault(node, \"value\", \"x\"));\r\n    if (!Number.isNaN(value)) {\r\n      field.settings.value = value;\r\n    }\r\n\r\n    return field;\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
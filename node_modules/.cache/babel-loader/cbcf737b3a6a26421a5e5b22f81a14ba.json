{"ast":null,"code":"import{MenuItem,Select,Typography}from\"@material-ui/core\";import{withStyles}from\"@material-ui/core/styles\";import*as action from\"actions\";import{db}from\"js/db\";import React from\"react\";import{connect}from\"react-redux\";var SwitchLanguage=withStyles(function(){return{root:{minWidth:\"120px\"}};})(function(_ref){var classes=_ref.classes,setLanguage=_ref.setLanguage,language=_ref.language,menuItemData=_ref.menuItemData;return/*#__PURE__*/React.createElement(Select,{className:classes.root,onChange:function onChange(e){return setLanguage(e.target.value);},value:language},menuItemData.map(function(item,index){return/*#__PURE__*/React.createElement(MenuItem,{value:item.value,key:index},/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",align:\"center\"},item.label));}));});export default connect(function(_ref2){var language=_ref2.settings.language;return{language:language};},function(dispatch){return{setLanguage:function setLanguage(languageType){db.cache.put({id:\"settings\",data:{language:languageType}}).then(function(){dispatch(action.setLanguage(languageType));});}};})(SwitchLanguage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/SwitchLanguage/index.js"],"names":["MenuItem","Select","Typography","withStyles","action","db","React","connect","SwitchLanguage","root","minWidth","classes","setLanguage","language","menuItemData","e","target","value","map","item","index","label","settings","dispatch","languageType","cache","put","id","data","then"],"mappings":"AAAA,OAASA,QAAT,CAAmBC,MAAnB,CAA2BC,UAA3B,KAA6C,mBAA7C,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,SAAxB,CACA,OAASC,EAAT,KAAmB,OAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAAC,UAAM,CACtC,MAAO,CACLM,IAAI,CAAE,CACJC,QAAQ,CAAE,OADN,CADD,CAAP,CAKD,CANgC,CAAV,CAMpB,cAAsD,IAAnDC,CAAAA,OAAmD,MAAnDA,OAAmD,CAA1CC,WAA0C,MAA1CA,WAA0C,CAA7BC,QAA6B,MAA7BA,QAA6B,CAAnBC,YAAmB,MAAnBA,YAAmB,CACvD,mBACE,oBAAC,MAAD,EACE,SAAS,CAAEH,OAAO,CAACF,IADrB,CAEE,QAAQ,CAAE,kBAACM,CAAD,QAAOH,CAAAA,WAAW,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB,EAFZ,CAGE,KAAK,CAAEJ,QAHT,EAKGC,YAAY,CAACI,GAAb,CAAiB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CACjC,mBACE,oBAAC,QAAD,EAAU,KAAK,CAAED,IAAI,CAACF,KAAtB,CAA6B,GAAG,CAAEG,KAAlC,eACE,oBAAC,UAAD,EAAY,OAAO,CAAC,WAApB,CAAgC,KAAK,CAAC,QAAtC,EACGD,IAAI,CAACE,KADR,CADF,CADF,CAOD,CARA,CALH,CADF,CAiBD,CAxBsB,CAAvB,CA0BA,cAAed,CAAAA,OAAO,CACpB,eAAgC,IAAjBM,CAAAA,QAAiB,OAA7BS,QAA6B,CAAjBT,QAAiB,CAC9B,MAAO,CACLA,QAAQ,CAARA,QADK,CAAP,CAGD,CALmB,CAMpB,SAACU,QAAD,CAAc,CACZ,MAAO,CACLX,WAAW,CAAE,qBAACY,YAAD,CAAkB,CAC7BnB,EAAE,CAACoB,KAAH,CACGC,GADH,CACO,CACHC,EAAE,CAAE,UADD,CAEHC,IAAI,CAAE,CAAEf,QAAQ,CAAEW,YAAZ,CAFH,CADP,EAKGK,IALH,CAKQ,UAAM,CACVN,QAAQ,CAACnB,MAAM,CAACQ,WAAP,CAAmBY,YAAnB,CAAD,CAAR,CACD,CAPH,EAQD,CAVI,CAAP,CAYD,CAnBmB,CAAP,CAoBbhB,cApBa,CAAf","sourcesContent":["import { MenuItem, Select, Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as action from \"actions\";\r\nimport { db } from \"js/db\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst SwitchLanguage = withStyles(() => {\r\n  return {\r\n    root: {\r\n      minWidth: \"120px\",\r\n    },\r\n  };\r\n})(({ classes, setLanguage, language, menuItemData }) => {\r\n  return (\r\n    <Select\r\n      className={classes.root}\r\n      onChange={(e) => setLanguage(e.target.value)}\r\n      value={language}\r\n    >\r\n      {menuItemData.map((item, index) => {\r\n        return (\r\n          <MenuItem value={item.value} key={index}>\r\n            <Typography variant=\"subtitle1\" align=\"center\">\r\n              {item.label}\r\n            </Typography>\r\n          </MenuItem>\r\n        );\r\n      })}\r\n    </Select>\r\n  );\r\n});\r\n\r\nexport default connect(\r\n  ({ settings: { language } }) => {\r\n    return {\r\n      language,\r\n    };\r\n  },\r\n  (dispatch) => {\r\n    return {\r\n      setLanguage: (languageType) => {\r\n        db.cache\r\n          .put({\r\n            id: \"settings\",\r\n            data: { language: languageType },\r\n          })\r\n          .then(() => {\r\n            dispatch(action.setLanguage(languageType));\r\n          });\r\n      },\r\n    };\r\n  }\r\n)(SwitchLanguage);\r\n"]},"metadata":{},"sourceType":"module"}
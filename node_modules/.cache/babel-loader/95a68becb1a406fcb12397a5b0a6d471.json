{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TemplateForm\\\\StaticText\\\\index.js\";\nimport { Box, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nconst useStyles = makeStyles(({\n  spacing\n}) => ({\n  value: {\n    padding: spacing(1, 0),\n    borderTop: \" 1px solid #e0e0e0\",\n    borderBottom: \" 1px solid #e0e0e0\",\n    margin: \"0\"\n  }\n}));\nexport const StaticText = props => {\n  var _props$value;\n\n  const classes = useStyles();\n  const formattedText = (_props$value = props.value) === null || _props$value === void 0 ? void 0 : _props$value.replace(/\\n/g, '<br />');\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    className: classes.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: formattedText\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })), props.images.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.url,\n      alt: \"\",\n      style: {\n        maxWidth: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }), \";\");\n  }));\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TemplateForm/StaticText/index.js"],"names":["Box","makeStyles","Typography","React","useStyles","spacing","value","padding","borderTop","borderBottom","margin","StaticText","props","classes","formattedText","replace","__html","images","map","item","index","url","maxWidth"],"mappings":";AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,QAA4C,mBAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC,CAAC;AAAEI,EAAAA;AAAF,CAAD,MAAkB;AAC7CC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEF,OAAO,CAAC,CAAD,EAAI,CAAJ,CADX;AAELG,IAAAA,SAAS,EAAE,oBAFN;AAGLC,IAAAA,YAAY,EAAE,oBAHT;AAILC,IAAAA,MAAM,EAAE;AAJH;AADsC,CAAlB,CAAD,CAA5B;AASA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AACA,QAAMU,aAAa,mBAAGF,KAAK,CAACN,KAAT,iDAAG,aAAaS,OAAb,CAAqB,KAArB,EAA4B,QAA5B,CAAtB;AACA,sBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,WAApB;AAAgC,IAAA,SAAS,EAAEF,OAAO,CAACP,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,uBAAuB,EAAE;AAAEU,MAAAA,MAAM,EAAEF;AAAV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKGF,KAAK,CAACK,MAAN,CAAaC,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,wBACE;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAED,IAAI,CAACE,GAAf;AAAoB,MAAA,GAAG,EAAC,EAAxB;AAA2B,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,MADF;AAKD,GANA,CALH,CADF;AAeD,CAlBM","sourcesContent":["import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(({ spacing }) => ({\r\n  value: {\r\n    padding: spacing(1, 0),\r\n    borderTop: \" 1px solid #e0e0e0\",\r\n    borderBottom: \" 1px solid #e0e0e0\",\r\n    margin: \"0\",\r\n  },\r\n}));\r\n\r\nexport const StaticText = (props) => {\r\n  const classes = useStyles();\r\n  const formattedText = props.value?.replace(/\\n/g, '<br />'); \r\n  return (\r\n    <Box>\r\n      <Typography variant=\"subtitle2\" className={classes.value}>\r\n        {/* {props.value} */}\r\n        <div dangerouslySetInnerHTML={{ __html: formattedText }}></div>\r\n      </Typography>\r\n      {props.images.map((item, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <img src={item.url} alt=\"\" style={{ maxWidth: \"100%\" }} />;\r\n          </div>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as action from \"actions\";\nimport * as repo from \"js/fetch\";\nimport * as installationStep from \"js/installationStep\";\nimport { getDocumentListParmas } from \"js/util\";\nimport { db } from \"js/db\";\nlet projectNos = [];\nexport const fetchAll = type => dispatch => {\n  dispatch(action.showLoading());\n  return repo.fetchMasterData(type).then(data => {\n    let projects = data.workCenters ? Object.keys(data.workCenters) : [];\n    data = installationStep.updateInstallationStepDesc(data);\n    dispatch(action.setEntities(data));\n    return repo.fetchOrdersDataByProjects(type, projects, 1); // return repo.fetchOrdersData(type);\n  }).then(data => {\n    data = installationStep.addActivityStepEditable(data);\n    data = installationStep.nineStepsToFourteen(data);\n    dispatch(action.setEntities(data));\n    projectNos = Object.keys(data.projects);\n    return repo.fetchLocalInstallationStepsConfirmDate({\n      projectNos\n    }, type);\n  }).then(data => {\n    dispatch(action.setAllLocalInstallationStepConfirmDate(data));\n    const result = getDocumentListParmas(projectNos);\n    return repo.fetchDocumentList(result, type);\n  }).then(data => {\n    dispatch(action.setDocuments(data));\n    return repo.fetchTemplatesData(type);\n  }).then(data => {\n    dispatch(action.setTemplates(data));\n    return repo.fetchTasks(type);\n  }).then(data => {\n    alert(111);\n    dispatch(action.setTasks(data));\n  }).then(() => {\n    return repo.fetchInstMethods(type);\n  }).then(data => {\n    dispatch(action.setMethods(data));\n  }).catch(error => {\n    if (error.code === 401) {\n      window.localStorage.removeItem(\"auth\");\n      dispatch(action.setAuth(null));\n    }\n\n    dispatch(action.setError(error.message));\n  }).finally(() => {\n    db.cache.get(\"dataVersion\").then(cache => {\n      if ((cache === null || cache === void 0 ? void 0 : cache.data) === \"lastVersion\") {\n        db.cache.put({\n          id: \"dataVersion\",\n          data: \"initVersion\"\n        });\n        window.location.reload();\n      }\n\n      dispatch(action.hideLoading());\n    });\n  });\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/actions/initialization.js"],"names":["action","repo","installationStep","getDocumentListParmas","db","projectNos","fetchAll","type","dispatch","showLoading","fetchMasterData","then","data","projects","workCenters","Object","keys","updateInstallationStepDesc","setEntities","fetchOrdersDataByProjects","addActivityStepEditable","nineStepsToFourteen","fetchLocalInstallationStepsConfirmDate","setAllLocalInstallationStepConfirmDate","result","fetchDocumentList","setDocuments","fetchTemplatesData","setTemplates","fetchTasks","alert","setTasks","fetchInstMethods","setMethods","catch","error","code","window","localStorage","removeItem","setAuth","setError","message","finally","cache","get","put","id","location","reload","hideLoading"],"mappings":"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","sourcesContent":["import * as action from \"actions\";\r\nimport * as repo from \"js/fetch\";\r\nimport * as installationStep from \"js/installationStep\";\r\nimport { getDocumentListParmas } from \"js/util\";\r\nimport { db } from \"js/db\";\r\n\r\nlet projectNos = [];\r\n\r\nexport const fetchAll = (type) => (dispatch) => {\r\n  dispatch(action.showLoading());\r\n  return repo\r\n    .fetchMasterData(type)\r\n    .then((data) => {\r\n      let projects = data.workCenters ? Object.keys(data.workCenters) : [];\r\n      data = installationStep.updateInstallationStepDesc(data);\r\n      dispatch(action.setEntities(data));\r\n\r\n      return repo.fetchOrdersDataByProjects(type, projects, 1);\r\n      // return repo.fetchOrdersData(type);\r\n    })\r\n    .then((data) => {\r\n      data = installationStep.addActivityStepEditable(data);\r\n      data = installationStep.nineStepsToFourteen(data);\r\n      dispatch(action.setEntities(data));\r\n\r\n      projectNos = Object.keys(data.projects);\r\n\r\n      return repo.fetchLocalInstallationStepsConfirmDate({ projectNos }, type);\r\n    })\r\n    .then((data) => {\r\n      dispatch(action.setAllLocalInstallationStepConfirmDate(data));\r\n      const result = getDocumentListParmas(projectNos);\r\n      return repo.fetchDocumentList(result, type);\r\n    })\r\n    .then((data) => {\r\n      dispatch(action.setDocuments(data));\r\n      return repo.fetchTemplatesData(type);\r\n    })\r\n    .then((data) => {\r\n      dispatch(action.setTemplates(data));\r\n      return repo.fetchTasks(type);\r\n    })\r\n    .then((data) => {\r\n      alert(111);      dispatch(action.setTasks(data));\r\n    })\r\n    .then(() => {\r\n      return repo.fetchInstMethods(type);\r\n    })\r\n    .then((data) => {\r\n      dispatch(action.setMethods(data));\r\n    })\r\n    .catch((error) => {\r\n      if (error.code === 401) {\r\n        window.localStorage.removeItem(\"auth\");\r\n        dispatch(action.setAuth(null));\r\n      }\r\n      dispatch(action.setError(error.message));\r\n    })\r\n    .finally(() => {\r\n      db.cache.get(\"dataVersion\").then(cache => {\r\n        if (cache?.data === \"lastVersion\") {\r\n          db.cache.put({ id: \"dataVersion\", data: \"initVersion\" })\r\n          window.location.reload()\r\n        }\r\n        dispatch(action.hideLoading());\r\n      })\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
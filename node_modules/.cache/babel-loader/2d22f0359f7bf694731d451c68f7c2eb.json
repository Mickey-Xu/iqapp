{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */import{appendChild,appendQuestionBlock,hasChildNode,getChildNode,getRequiredAttr,getAttrWithDefault,readQuestionBlock}from\"./utils/xml\";import moment from\"moment\";export default{serialize:function serialize(doc,findField,parentNode,field){var questionBlock=appendQuestionBlock(doc,findField,parentNode,\"date\",field);var _field$settings=field.settings,includeTime=_field$settings.includeTime,pastDateNotAllowed=_field$settings.pastDateNotAllowed,futureDateNotAllowed=_field$settings.futureDateNotAllowed,changeNotAllowed=_field$settings.changeNotAllowed,hasDefaultValue=_field$settings.hasDefaultValue,value=_field$settings.value;var attr={\"past-date-not-allowed\":pastDateNotAllowed,\"future-date-not-allowed\":futureDateNotAllowed,\"change-not-allowed\":changeNotAllowed,\"has-default-value\":hasDefaultValue,value:value};if(hasDefaultValue){attr[\"default-value\"]=\"filleddate\";}appendChild(doc,questionBlock,includeTime?\"datetime\":\"date\",\"\",attr);},canDeserialize:function canDeserialize(node){return node.nodeName===\"question_block\"&&(hasChildNode(node,\"date\")||hasChildNode(node,\"datetime\"));},deserialize:function deserialize(node){var field=readQuestionBlock(node,\"date\",\"date\");// eslint-disable-line prefer-const\nfield.settings.required=getRequiredAttr(node,\"required\")===\"true\";var includeTime=hasChildNode(node,\"datetime\");field.settings.includeTime=includeTime;var dateNode=getChildNode(node,includeTime?\"datetime\":\"date\");var dateString=dateNode.textContent;if(dateString&&dateString.trim()!==\"\"){if(includeTime){field.settings.value=moment(new Date(dateString));}else{field.settings.value=moment(dateString,\"YYYY-MM-DD\");}}field.settings.pastDateNotAllowed=getAttrWithDefault(dateNode,\"past-date-not-allowed\",\"false\")===\"true\";field.settings.futureDateNotAllowed=getAttrWithDefault(dateNode,\"future-date-not-allowed\",\"false\")===\"true\";field.settings.changeNotAllowed=getAttrWithDefault(dateNode,\"change-not-allowed\",\"false\")===\"true\";field.settings.hasDefaultValue=getAttrWithDefault(dateNode,\"has-default-value\",\"false\")===\"true\";field.settings.value=getAttrWithDefault(dateNode,\"value\",\"\");return field;}};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/DateIO.js"],"names":["appendChild","appendQuestionBlock","hasChildNode","getChildNode","getRequiredAttr","getAttrWithDefault","readQuestionBlock","moment","serialize","doc","findField","parentNode","field","questionBlock","settings","includeTime","pastDateNotAllowed","futureDateNotAllowed","changeNotAllowed","hasDefaultValue","value","attr","canDeserialize","node","nodeName","deserialize","required","dateNode","dateString","textContent","trim","Date"],"mappings":"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","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport {\r\n  appendChild,\r\n  appendQuestionBlock,\r\n  hasChildNode,\r\n  getChildNode,\r\n  getRequiredAttr,\r\n  getAttrWithDefault,\r\n  readQuestionBlock,\r\n} from \"./utils/xml\";\r\nimport moment from \"moment\";\r\n\r\nexport default {\r\n  serialize(doc, findField, parentNode, field) {\r\n    const questionBlock = appendQuestionBlock(\r\n      doc,\r\n      findField,\r\n      parentNode,\r\n      \"date\",\r\n      field\r\n    );\r\n    const {\r\n      includeTime,\r\n      pastDateNotAllowed,\r\n      futureDateNotAllowed,\r\n      changeNotAllowed,\r\n      hasDefaultValue,\r\n      //   defaultValue,\r\n      value,\r\n    } = field.settings;\r\n\r\n    var attr = {\r\n      \"past-date-not-allowed\": pastDateNotAllowed,\r\n      \"future-date-not-allowed\": futureDateNotAllowed,\r\n      \"change-not-allowed\": changeNotAllowed,\r\n      \"has-default-value\": hasDefaultValue,\r\n      value: value,\r\n    };\r\n\r\n    if (hasDefaultValue) {\r\n      attr[\"default-value\"] = \"filleddate\";\r\n    }\r\n\r\n    appendChild(\r\n      doc,\r\n      questionBlock,\r\n      includeTime ? \"datetime\" : \"date\",\r\n      \"\",\r\n      attr\r\n    );\r\n  },\r\n\r\n  canDeserialize(node) {\r\n    return (\r\n      node.nodeName === \"question_block\" &&\r\n      (hasChildNode(node, \"date\") || hasChildNode(node, \"datetime\"))\r\n    );\r\n  },\r\n\r\n  deserialize(node) {\r\n    let field = readQuestionBlock(node, \"date\", \"date\"); // eslint-disable-line prefer-const\r\n    field.settings.required = getRequiredAttr(node, \"required\") === \"true\";\r\n\r\n    const includeTime = hasChildNode(node, \"datetime\");\r\n    field.settings.includeTime = includeTime;\r\n\r\n    const dateNode = getChildNode(node, includeTime ? \"datetime\" : \"date\");\r\n\r\n    const dateString = dateNode.textContent;\r\n    if (dateString && dateString.trim() !== \"\") {\r\n      if (includeTime) {\r\n        field.settings.value = moment(new Date(dateString));\r\n      } else {\r\n        field.settings.value = moment(dateString, \"YYYY-MM-DD\");\r\n      }\r\n    }\r\n\r\n    field.settings.pastDateNotAllowed =\r\n      getAttrWithDefault(dateNode, \"past-date-not-allowed\", \"false\") === \"true\";\r\n    field.settings.futureDateNotAllowed =\r\n      getAttrWithDefault(dateNode, \"future-date-not-allowed\", \"false\") ===\r\n      \"true\";\r\n    field.settings.changeNotAllowed =\r\n      getAttrWithDefault(dateNode, \"change-not-allowed\", \"false\") === \"true\";\r\n    field.settings.hasDefaultValue =\r\n      getAttrWithDefault(dateNode, \"has-default-value\", \"false\") === \"true\";\r\n\r\n    field.settings.value = getAttrWithDefault(dateNode, \"value\", \"\");\r\n\r\n    return field;\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
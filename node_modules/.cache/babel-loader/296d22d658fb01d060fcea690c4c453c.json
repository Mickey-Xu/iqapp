{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\ProjectDetailPage\\\\index.js\";\n// import ProjectCard from \"components/ProjectCard\";\n// import ProjectOrderList from \"components/ProjectOrderList\";\n// import ProjectSearchBar from \"components/ProjectSearchBar\";\nimport ProjectSiteAddress from \"components/ProjectSiteAddress\";\nimport UnitDetail from \"components/UnitDetail\";\nimport { LocalizeContext } from \"i18n\"; // import InstallMethodSelectDialog from \"components/InstallMethodSelectDialog\";\n\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst ProjectDetailPage = ({\n  data,\n  projectNumber\n}) => {\n  // const [searchCriteria, setSearchCriteria] = useState(null);\n  // const [installationMethod, setInstallationMethod] = useState(null);\n  const i18n = React.useContext(LocalizeContext);\n  const fields = [{\n    label: i18n.PROJECTLIST_PROJECT_NO,\n    name: \"projectNumber\"\n  }, {\n    label: i18n.PROJECTLIST_PROJECT_DESCRIPTION,\n    name: \"projectName\"\n  }, {\n    label: i18n.PROJECTLIST_SITE_ADDRESS,\n    name: \"projectSite\",\n    component: () => /*#__PURE__*/React.createElement(ProjectSiteAddress, {\n      projectNumber: projectNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }\n    })\n  }, {\n    label: i18n.JOBLIST_SUBCON_TL,\n    name: \"teamLeader\"\n  }, {\n    label: i18n.INSTAPP_PROJECTLIST_UnitCount,\n    name: \"orderQuantity\"\n  }, {\n    label: i18n.INSTAPP_PROJECTLIST_FitterCount,\n    name: \"fitterQuantity\",\n    muito: `/fitters/${projectNumber}`\n  }, // {\n  //   label: i18n.ISNTAPP_PROJECTLIST_PROJECT_PROGRESS,\n  //   to: `/projectprogress/${projectNumber}`,\n  // },\n  // {\n  //   label: i18n.ISNTAPP_PROJECTLIST_PROJECT_INSTALLATIONSTEPS,\n  //   to: `/projectInstallationSteps/${projectNumber}`,\n  // },\n  {\n    label: i18n.ISNTAPP_PROJECTLIST_PROJECT_PROGRESS,\n    to: `/projectProgressPage/${projectNumber}`,\n    description: \"ACTIVITY\"\n  }, {\n    label: i18n.ISNTAPP_PROJECTLIST_PROJECT_INSTALLATIONSTEPS,\n    to: `/projectInstallationSteps/${projectNumber}`,\n    description: \"STEPS\"\n  }]; // const handleClick = (method) => {\n  //   setInstallationMethod(method);\n  // };\n\n  return /*#__PURE__*/React.createElement(PrimaryLayout, {\n    title: i18n.PROJECTLIST_DETAILS,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(UnitDetail, {\n    fields: fields,\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapStateToProps = ({\n  fittersAssignmentTransfer,\n  orders,\n  projects,\n  partners\n}, ownProps) => {\n  var _fittersAssignmentTra;\n\n  const {\n    projectNumber\n  } = ownProps.match.params;\n  const {\n    description: projectName\n  } = projects[projectNumber] || {}; //teamLeader\n\n  const OrderNos = Object.keys(orders).filter(item => orders[item].projectNumber === projectNumber);\n  const teamLeader = OrderNos.map(item => {\n    var _partners$;\n\n    return (_partners$ = partners[`${item}-VW`]) === null || _partners$ === void 0 ? void 0 : _partners$.name1;\n  });\n  return {\n    projectNumber: projectNumber,\n    data: {\n      projectNumber,\n      fitterQuantity: (_fittersAssignmentTra = fittersAssignmentTransfer[projectNumber]) === null || _fittersAssignmentTra === void 0 ? void 0 : _fittersAssignmentTra.length,\n      orderQuantity: Object.keys(orders).filter(key => {\n        return orders[key].projectNumber === projectNumber;\n      }).length,\n      projectName,\n      teamLeader: [...new Set(teamLeader)].join(\"/\")\n    }\n  };\n};\n\nexport default connect(mapStateToProps)(ProjectDetailPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/ProjectDetailPage/index.js"],"names":["ProjectSiteAddress","UnitDetail","LocalizeContext","PrimaryLayout","React","connect","ProjectDetailPage","data","projectNumber","i18n","useContext","fields","label","PROJECTLIST_PROJECT_NO","name","PROJECTLIST_PROJECT_DESCRIPTION","PROJECTLIST_SITE_ADDRESS","component","JOBLIST_SUBCON_TL","INSTAPP_PROJECTLIST_UnitCount","INSTAPP_PROJECTLIST_FitterCount","muito","ISNTAPP_PROJECTLIST_PROJECT_PROGRESS","to","description","ISNTAPP_PROJECTLIST_PROJECT_INSTALLATIONSTEPS","PROJECTLIST_DETAILS","mapStateToProps","fittersAssignmentTransfer","orders","projects","partners","ownProps","match","params","projectName","OrderNos","Object","keys","filter","item","teamLeader","map","name1","fitterQuantity","length","orderQuantity","key","Set","join"],"mappings":"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","sourcesContent":["// import ProjectCard from \"components/ProjectCard\";\r\n// import ProjectOrderList from \"components/ProjectOrderList\";\r\n// import ProjectSearchBar from \"components/ProjectSearchBar\";\r\nimport ProjectSiteAddress from \"components/ProjectSiteAddress\";\r\nimport UnitDetail from \"components/UnitDetail\";\r\nimport { LocalizeContext } from \"i18n\";\r\n// import InstallMethodSelectDialog from \"components/InstallMethodSelectDialog\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ProjectDetailPage = ({ data, projectNumber }) => {\r\n  // const [searchCriteria, setSearchCriteria] = useState(null);\r\n  // const [installationMethod, setInstallationMethod] = useState(null);\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  const fields = [\r\n    {\r\n      label: i18n.PROJECTLIST_PROJECT_NO,\r\n      name: \"projectNumber\",\r\n    },\r\n    {\r\n      label: i18n.PROJECTLIST_PROJECT_DESCRIPTION,\r\n      name: \"projectName\",\r\n    },\r\n    {\r\n      label: i18n.PROJECTLIST_SITE_ADDRESS,\r\n      name: \"projectSite\",\r\n      component: () => <ProjectSiteAddress projectNumber={projectNumber} />,\r\n    },\r\n    {\r\n      label: i18n.JOBLIST_SUBCON_TL,\r\n      name: \"teamLeader\",\r\n    },\r\n    {\r\n      label: i18n.INSTAPP_PROJECTLIST_UnitCount,\r\n      name: \"orderQuantity\",\r\n    },\r\n    {\r\n      label: i18n.INSTAPP_PROJECTLIST_FitterCount,\r\n      name: \"fitterQuantity\",\r\n      muito: `/fitters/${projectNumber}`,\r\n    },\r\n    // {\r\n    //   label: i18n.ISNTAPP_PROJECTLIST_PROJECT_PROGRESS,\r\n    //   to: `/projectprogress/${projectNumber}`,\r\n    // },\r\n    // {\r\n    //   label: i18n.ISNTAPP_PROJECTLIST_PROJECT_INSTALLATIONSTEPS,\r\n    //   to: `/projectInstallationSteps/${projectNumber}`,\r\n    // },\r\n    {\r\n      label: i18n.ISNTAPP_PROJECTLIST_PROJECT_PROGRESS,\r\n      to: `/projectProgressPage/${projectNumber}`,\r\n      description: \"ACTIVITY\",\r\n    },\r\n    {\r\n      label: i18n.ISNTAPP_PROJECTLIST_PROJECT_INSTALLATIONSTEPS,\r\n      to: `/projectInstallationSteps/${projectNumber}`,\r\n      description: \"STEPS\",\r\n    },\r\n  ];\r\n\r\n  // const handleClick = (method) => {\r\n  //   setInstallationMethod(method);\r\n  // };\r\n\r\n  return (\r\n    <PrimaryLayout title={i18n.PROJECTLIST_DETAILS}>\r\n      <UnitDetail fields={fields} data={data} />\r\n      {/* <ProjectSearchBar\r\n        submit={(value) => {\r\n          setSearchCriteria(value);\r\n        }}\r\n      />\r\n      <ProjectCard projectNumber={projectNumber} link=\"/subconTeam/\" />\r\n      <InstallMethodSelectDialog handleClick={handleClick} />\r\n      <ProjectOrderList\r\n        installationMethod={installationMethod}\r\n        searchCriteria={searchCriteria}\r\n      /> */}\r\n    </PrimaryLayout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (\r\n  { fittersAssignmentTransfer, orders, projects, partners },\r\n  ownProps\r\n) => {\r\n  const { projectNumber } = ownProps.match.params;\r\n  const { description: projectName } = projects[projectNumber] || {}; //teamLeader\r\n\r\n  const OrderNos = Object.keys(orders).filter(\r\n    (item) => orders[item].projectNumber === projectNumber\r\n  );\r\n  const teamLeader = OrderNos.map((item) => {\r\n    return partners[`${item}-VW`]?.name1;\r\n  });\r\n\r\n  return {\r\n    projectNumber: projectNumber,\r\n    data: {\r\n      projectNumber,\r\n      fitterQuantity: fittersAssignmentTransfer[projectNumber]?.length,\r\n      orderQuantity: Object.keys(orders).filter((key) => {\r\n        return orders[key].projectNumber === projectNumber;\r\n      }).length,\r\n      projectName,\r\n      teamLeader: [...new Set(teamLeader)].join(\"/\"),\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ProjectDetailPage);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */import{appendChild,appendQuestionBlock,hasChildNode,getRequiredAttr,readQuestionBlock,getChildNode,getAttrWithDefault}from\"./utils/xml\";export default{serialize:function serialize(doc,findField,parentNode,field){var _field$settings=field.settings,notApplicableOption=_field$settings.notApplicableOption,changeDescription=_field$settings.changeDescription,fixedOption=_field$settings.fixedOption;// TODO string is probably not the ideal choice for return-type\nvar questionBlock=appendQuestionBlock(doc,findField,parentNode,\"string\",field);appendChild(doc,questionBlock,\"na_yes_no\",null,{\"not-applicable-option\":notApplicableOption,\"fixed-option\":fixedOption,\"change-button-description-option\":changeDescription?changeDescription:\"false\",value:field.settings.value,itemTexts:field.settings.itemTexts,itemValues:field.settings.itemValues});},canDeserialize:function canDeserialize(node){return node.nodeName===\"question_block\"&&hasChildNode(node,\"na_yes_no\");},deserialize:function deserialize(node){var field=readQuestionBlock(node,\"naYesNo\",\"string\");// eslint-disable-line prefer-const\nfield.settings.required=getRequiredAttr(node,\"required\")===\"true\";var naYesNoNode=getChildNode(node,\"na_yes_no\");field.settings.notApplicableOption=getRequiredAttr(naYesNoNode,\"not-applicable-option\")===\"true\";field.settings.fixedOption=getAttrWithDefault(naYesNoNode,\"fixed-option\",\"false\")===\"true\";field.settings.changeDescription=getAttrWithDefault(naYesNoNode,\"change-button-description-option\",\"false\")===\"true\";field.settings.value=getAttrWithDefault(naYesNoNode,\"value\",\"\").trim()||undefined;var itemTexts=getAttrWithDefault(naYesNoNode,\"itemTexts\",\"\");field.settings.itemTexts=itemTexts===\"\"?[]:itemTexts.split(\",\");var itemValues=getAttrWithDefault(naYesNoNode,\"itemValues\",\"\");field.settings.itemValues=itemValues===\"\"?[]:itemValues.split(\",\");return field;}};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/NaYesNoIO.js"],"names":["appendChild","appendQuestionBlock","hasChildNode","getRequiredAttr","readQuestionBlock","getChildNode","getAttrWithDefault","serialize","doc","findField","parentNode","field","settings","notApplicableOption","changeDescription","fixedOption","questionBlock","value","itemTexts","itemValues","canDeserialize","node","nodeName","deserialize","required","naYesNoNode","trim","undefined","split"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,OACEA,WADF,CAEEC,mBAFF,CAGEC,YAHF,CAIEC,eAJF,CAKEC,iBALF,CAMEC,YANF,CAOEC,kBAPF,KAQO,aARP,CAUA,cAAe,CACbC,SADa,oBACHC,GADG,CACEC,SADF,CACaC,UADb,CACyBC,KADzB,CACgC,qBAKvCA,KAAK,CAACC,QALiC,CAEzCC,mBAFyC,iBAEzCA,mBAFyC,CAGzCC,iBAHyC,iBAGzCA,iBAHyC,CAIzCC,WAJyC,iBAIzCA,WAJyC,CAO3C;AACA,GAAMC,CAAAA,aAAa,CAAGf,mBAAmB,CACvCO,GADuC,CAEvCC,SAFuC,CAGvCC,UAHuC,CAIvC,QAJuC,CAKvCC,KALuC,CAAzC,CAQAX,WAAW,CAACQ,GAAD,CAAMQ,aAAN,CAAqB,WAArB,CAAkC,IAAlC,CAAwC,CACjD,wBAAyBH,mBADwB,CAEjD,eAAgBE,WAFiC,CAGjD,mCAAoCD,iBAAiB,CACjDA,iBADiD,CAEjD,OAL6C,CAMjDG,KAAK,CAAEN,KAAK,CAACC,QAAN,CAAeK,KAN2B,CAOjDC,SAAS,CAAEP,KAAK,CAACC,QAAN,CAAeM,SAPuB,CAQjDC,UAAU,CAAER,KAAK,CAACC,QAAN,CAAeO,UARsB,CAAxC,CAAX,CAUD,CA3BY,CA6BbC,cA7Ba,yBA6BEC,IA7BF,CA6BQ,CACnB,MACEA,CAAAA,IAAI,CAACC,QAAL,GAAkB,gBAAlB,EAAsCpB,YAAY,CAACmB,IAAD,CAAO,WAAP,CADpD,CAGD,CAjCY,CAmCbE,WAnCa,sBAmCDF,IAnCC,CAmCK,CAChB,GAAIV,CAAAA,KAAK,CAAGP,iBAAiB,CAACiB,IAAD,CAAO,SAAP,CAAkB,QAAlB,CAA7B,CAA0D;AAC1DV,KAAK,CAACC,QAAN,CAAeY,QAAf,CAA0BrB,eAAe,CAACkB,IAAD,CAAO,UAAP,CAAf,GAAsC,MAAhE,CAEA,GAAMI,CAAAA,WAAW,CAAGpB,YAAY,CAACgB,IAAD,CAAO,WAAP,CAAhC,CACAV,KAAK,CAACC,QAAN,CAAeC,mBAAf,CACEV,eAAe,CAACsB,WAAD,CAAc,uBAAd,CAAf,GAA0D,MAD5D,CAEAd,KAAK,CAACC,QAAN,CAAeG,WAAf,CACET,kBAAkB,CAACmB,WAAD,CAAc,cAAd,CAA8B,OAA9B,CAAlB,GAA6D,MAD/D,CAEAd,KAAK,CAACC,QAAN,CAAeE,iBAAf,CACER,kBAAkB,CAChBmB,WADgB,CAEhB,kCAFgB,CAGhB,OAHgB,CAAlB,GAIM,MALR,CAOAd,KAAK,CAACC,QAAN,CAAeK,KAAf,CACEX,kBAAkB,CAACmB,WAAD,CAAc,OAAd,CAAuB,EAAvB,CAAlB,CAA6CC,IAA7C,IAAuDC,SADzD,CAGA,GAAIT,CAAAA,SAAS,CAAGZ,kBAAkB,CAACmB,WAAD,CAAc,WAAd,CAA2B,EAA3B,CAAlC,CACAd,KAAK,CAACC,QAAN,CAAeM,SAAf,CAA2BA,SAAS,GAAK,EAAd,CAAmB,EAAnB,CAAwBA,SAAS,CAACU,KAAV,CAAgB,GAAhB,CAAnD,CAEA,GAAIT,CAAAA,UAAU,CAAGb,kBAAkB,CAACmB,WAAD,CAAc,YAAd,CAA4B,EAA5B,CAAnC,CACAd,KAAK,CAACC,QAAN,CAAeO,UAAf,CAA4BA,UAAU,GAAK,EAAf,CAAoB,EAApB,CAAyBA,UAAU,CAACS,KAAX,CAAiB,GAAjB,CAArD,CAEA,MAAOjB,CAAAA,KAAP,CACD,CA7DY,CAAf","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nimport {\r\n  appendChild,\r\n  appendQuestionBlock,\r\n  hasChildNode,\r\n  getRequiredAttr,\r\n  readQuestionBlock,\r\n  getChildNode,\r\n  getAttrWithDefault,\r\n} from \"./utils/xml\";\r\n\r\nexport default {\r\n  serialize(doc, findField, parentNode, field) {\r\n    const {\r\n      notApplicableOption,\r\n      changeDescription,\r\n      fixedOption,\r\n    } = field.settings;\r\n\r\n    // TODO string is probably not the ideal choice for return-type\r\n    const questionBlock = appendQuestionBlock(\r\n      doc,\r\n      findField,\r\n      parentNode,\r\n      \"string\",\r\n      field\r\n    );\r\n\r\n    appendChild(doc, questionBlock, \"na_yes_no\", null, {\r\n      \"not-applicable-option\": notApplicableOption,\r\n      \"fixed-option\": fixedOption,\r\n      \"change-button-description-option\": changeDescription\r\n        ? changeDescription\r\n        : \"false\",\r\n      value: field.settings.value,\r\n      itemTexts: field.settings.itemTexts,\r\n      itemValues: field.settings.itemValues,\r\n    });\r\n  },\r\n\r\n  canDeserialize(node) {\r\n    return (\r\n      node.nodeName === \"question_block\" && hasChildNode(node, \"na_yes_no\")\r\n    );\r\n  },\r\n\r\n  deserialize(node) {\r\n    let field = readQuestionBlock(node, \"naYesNo\", \"string\"); // eslint-disable-line prefer-const\r\n    field.settings.required = getRequiredAttr(node, \"required\") === \"true\";\r\n\r\n    const naYesNoNode = getChildNode(node, \"na_yes_no\");\r\n    field.settings.notApplicableOption =\r\n      getRequiredAttr(naYesNoNode, \"not-applicable-option\") === \"true\";\r\n    field.settings.fixedOption =\r\n      getAttrWithDefault(naYesNoNode, \"fixed-option\", \"false\") === \"true\";\r\n    field.settings.changeDescription =\r\n      getAttrWithDefault(\r\n        naYesNoNode,\r\n        \"change-button-description-option\",\r\n        \"false\"\r\n      ) === \"true\";\r\n\r\n    field.settings.value =\r\n      getAttrWithDefault(naYesNoNode, \"value\", \"\").trim() || undefined;\r\n\r\n    let itemTexts = getAttrWithDefault(naYesNoNode, \"itemTexts\", \"\");\r\n    field.settings.itemTexts = itemTexts === \"\" ? [] : itemTexts.split(\",\");\r\n\r\n    let itemValues = getAttrWithDefault(naYesNoNode, \"itemValues\", \"\");\r\n    field.settings.itemValues = itemValues === \"\" ? [] : itemValues.split(\",\");\r\n\r\n    return field;\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
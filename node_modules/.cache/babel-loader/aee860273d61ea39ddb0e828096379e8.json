{"ast":null,"code":"/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */var ops={};// eslint-disable-line prefer-const\nvar ARG_TYPES=[\"string\",\"number\",\"bool\",\"date\",\"optionId\",\"extBool\"];// for the type optionId the value FREE_TEXT_VALUE (from ../utils/options.js)\n// can be used for the \"Other\" option\nfunction addOp(id,name,formulaOp,argType){if(ops[id]){throw new Error(\"Operator already exists: \"+id);}if(!ARG_TYPES.includes(argType)){throw new Error(\"Unknown operator argument type: \"+argType);}ops[id]={id:id,name:name,formulaOp:formulaOp,argType:argType};}addOp(\"isString\",\"is\",\"==\",\"string\");addOp(\"isNotString\",\"is not\",\"!=\",\"string\");addOp(\"isNumber\",\"is equal to\",\"==\",\"number\");addOp(\"isNotNumber\",\"is not equal to\",\"!=\",\"number\");addOp(\"isOption\",\"is\",\"==\",\"optionId\");addOp(\"isNotOption\",\"is not\",\"!=\",\"optionId\");addOp(\"isBool\",\"is\",\"==\",\"bool\");addOp(\"isExtBool\",\"is\",\"==\",\"extBool\");addOp(\"isNotExtBool\",\"is not\",\"!=\",\"extBool\");addOp(\"isDate\",\"is\",\"==\",\"date\");addOp(\"isNotDate\",\"is not\",\"!=\",\"date\");addOp(\"before\",\"is before\",\"before\",\"date\");addOp(\"after\",\"is after\",\"after\",\"date\");addOp(\"startsWith\",\"starts with\",\"startsWith\",\"string\");addOp(\"endsWith\",\"ends with\",\"endsWith\",\"string\");addOp(\"greaterThan\",\"is greater than\",\">=\",\"number\");addOp(\"lessThan\",\"is less than\",\"<=\",\"number\");addOp(\"containsString\",\"contains\",\"contains\",\"string\");addOp(\"containsOption\",\"contains\",\"contains\",\"optionId\");addOp(\"doesNotContainString\",\"does not contain\",\"doesntContain\",\"string\");addOp(\"doesNotContainOption\",\"does not contain\",\"doesntContain\",\"optionId\");export default ops;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/js/sfdl/constants/VisibilityOperators.js"],"names":["ops","ARG_TYPES","addOp","id","name","formulaOp","argType","Error","includes"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAEA,GAAIA,CAAAA,GAAG,CAAG,EAAV,CAAc;AAEd,GAAMC,CAAAA,SAAS,CAAG,CAAC,QAAD,CAAW,QAAX,CAAqB,MAArB,CAA6B,MAA7B,CAAqC,UAArC,CAAiD,SAAjD,CAAlB,CAEA;AACA;AAEA,QAASC,CAAAA,KAAT,CAAeC,EAAf,CAAmBC,IAAnB,CAAyBC,SAAzB,CAAoCC,OAApC,CAA6C,CAC3C,GAAIN,GAAG,CAACG,EAAD,CAAP,CAAa,CACX,KAAM,IAAII,CAAAA,KAAJ,CAAU,4BAA8BJ,EAAxC,CAAN,CACD,CACD,GAAI,CAACF,SAAS,CAACO,QAAV,CAAmBF,OAAnB,CAAL,CAAkC,CAChC,KAAM,IAAIC,CAAAA,KAAJ,CAAU,mCAAqCD,OAA/C,CAAN,CACD,CAEDN,GAAG,CAACG,EAAD,CAAH,CAAU,CAAEA,EAAE,CAAFA,EAAF,CAAMC,IAAI,CAAJA,IAAN,CAAYC,SAAS,CAATA,SAAZ,CAAuBC,OAAO,CAAPA,OAAvB,CAAV,CACD,CAEDJ,KAAK,CAAC,UAAD,CAAa,IAAb,CAAmB,IAAnB,CAAyB,QAAzB,CAAL,CACAA,KAAK,CAAC,aAAD,CAAgB,QAAhB,CAA0B,IAA1B,CAAgC,QAAhC,CAAL,CACAA,KAAK,CAAC,UAAD,CAAa,aAAb,CAA4B,IAA5B,CAAkC,QAAlC,CAAL,CACAA,KAAK,CAAC,aAAD,CAAgB,iBAAhB,CAAmC,IAAnC,CAAyC,QAAzC,CAAL,CACAA,KAAK,CAAC,UAAD,CAAa,IAAb,CAAmB,IAAnB,CAAyB,UAAzB,CAAL,CACAA,KAAK,CAAC,aAAD,CAAgB,QAAhB,CAA0B,IAA1B,CAAgC,UAAhC,CAAL,CACAA,KAAK,CAAC,QAAD,CAAW,IAAX,CAAiB,IAAjB,CAAuB,MAAvB,CAAL,CACAA,KAAK,CAAC,WAAD,CAAc,IAAd,CAAoB,IAApB,CAA0B,SAA1B,CAAL,CACAA,KAAK,CAAC,cAAD,CAAiB,QAAjB,CAA2B,IAA3B,CAAiC,SAAjC,CAAL,CACAA,KAAK,CAAC,QAAD,CAAW,IAAX,CAAiB,IAAjB,CAAuB,MAAvB,CAAL,CACAA,KAAK,CAAC,WAAD,CAAc,QAAd,CAAwB,IAAxB,CAA8B,MAA9B,CAAL,CACAA,KAAK,CAAC,QAAD,CAAW,WAAX,CAAwB,QAAxB,CAAkC,MAAlC,CAAL,CACAA,KAAK,CAAC,OAAD,CAAU,UAAV,CAAsB,OAAtB,CAA+B,MAA/B,CAAL,CACAA,KAAK,CAAC,YAAD,CAAe,aAAf,CAA8B,YAA9B,CAA4C,QAA5C,CAAL,CACAA,KAAK,CAAC,UAAD,CAAa,WAAb,CAA0B,UAA1B,CAAsC,QAAtC,CAAL,CACAA,KAAK,CAAC,aAAD,CAAgB,iBAAhB,CAAmC,IAAnC,CAAyC,QAAzC,CAAL,CACAA,KAAK,CAAC,UAAD,CAAa,cAAb,CAA6B,IAA7B,CAAmC,QAAnC,CAAL,CACAA,KAAK,CAAC,gBAAD,CAAmB,UAAnB,CAA+B,UAA/B,CAA2C,QAA3C,CAAL,CACAA,KAAK,CAAC,gBAAD,CAAmB,UAAnB,CAA+B,UAA/B,CAA2C,UAA3C,CAAL,CACAA,KAAK,CAAC,sBAAD,CAAyB,kBAAzB,CAA6C,eAA7C,CAA8D,QAA9D,CAAL,CACAA,KAAK,CAAC,sBAAD,CAAyB,kBAAzB,CAA6C,eAA7C,CAA8D,UAA9D,CAAL,CAEA,cAAeF,CAAAA,GAAf","sourcesContent":["/**\r\n * Copyright (C) 2016 All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are not permitted unless explicitly granted in writing.\r\n *\r\n * Usage and modification rights granted to Schindler AG, Ebikon.\r\n */\r\n\r\nlet ops = {}; // eslint-disable-line prefer-const\r\n\r\nconst ARG_TYPES = [\"string\", \"number\", \"bool\", \"date\", \"optionId\", \"extBool\"];\r\n\r\n// for the type optionId the value FREE_TEXT_VALUE (from ../utils/options.js)\r\n// can be used for the \"Other\" option\r\n\r\nfunction addOp(id, name, formulaOp, argType) {\r\n  if (ops[id]) {\r\n    throw new Error(\"Operator already exists: \" + id);\r\n  }\r\n  if (!ARG_TYPES.includes(argType)) {\r\n    throw new Error(\"Unknown operator argument type: \" + argType);\r\n  }\r\n\r\n  ops[id] = { id, name, formulaOp, argType };\r\n}\r\n\r\naddOp(\"isString\", \"is\", \"==\", \"string\");\r\naddOp(\"isNotString\", \"is not\", \"!=\", \"string\");\r\naddOp(\"isNumber\", \"is equal to\", \"==\", \"number\");\r\naddOp(\"isNotNumber\", \"is not equal to\", \"!=\", \"number\");\r\naddOp(\"isOption\", \"is\", \"==\", \"optionId\");\r\naddOp(\"isNotOption\", \"is not\", \"!=\", \"optionId\");\r\naddOp(\"isBool\", \"is\", \"==\", \"bool\");\r\naddOp(\"isExtBool\", \"is\", \"==\", \"extBool\");\r\naddOp(\"isNotExtBool\", \"is not\", \"!=\", \"extBool\");\r\naddOp(\"isDate\", \"is\", \"==\", \"date\");\r\naddOp(\"isNotDate\", \"is not\", \"!=\", \"date\");\r\naddOp(\"before\", \"is before\", \"before\", \"date\");\r\naddOp(\"after\", \"is after\", \"after\", \"date\");\r\naddOp(\"startsWith\", \"starts with\", \"startsWith\", \"string\");\r\naddOp(\"endsWith\", \"ends with\", \"endsWith\", \"string\");\r\naddOp(\"greaterThan\", \"is greater than\", \">=\", \"number\");\r\naddOp(\"lessThan\", \"is less than\", \"<=\", \"number\");\r\naddOp(\"containsString\", \"contains\", \"contains\", \"string\");\r\naddOp(\"containsOption\", \"contains\", \"contains\", \"optionId\");\r\naddOp(\"doesNotContainString\", \"does not contain\", \"doesntContain\", \"string\");\r\naddOp(\"doesNotContainOption\", \"does not contain\", \"doesntContain\", \"optionId\");\r\n\r\nexport default ops;\r\n"]},"metadata":{},"sourceType":"module"}
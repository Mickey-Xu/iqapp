{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TemplateForm\\\\Photo\\\\index.js\";\n// import { Box, FormLabel, makeStyles, Typography } from \"@material-ui/core\";\n// import Compressor from \"compressorjs\";\n// import { LocalizeContext } from \"i18n\";\n// import { fillTextToImg } from \"js/util\";\n// import React, { useRef, useState } from \"react\";\n// import { useParams } from 'react-router-dom';\n// const useStyles = makeStyles(({ spacing }) => ({\n//   btm: {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     margin: spacing(1, 1, 0, 1),\n//   },\n//   root: {\n//     display: \"grid\",\n//     padding: spacing(1, 0),\n//     borderBottom: \" 1px solid #e0e0e0\",\n//     backgroundColor: \"#FFF\",\n//   },\n//   lable: {\n//     margin: spacing(0, 0, 1, 0),\n//     color: \"rgba(0, 0, 0, 0.87)\",\n//   },\n//   inputFile: {\n//     width: \"0.1px\",\n//     height: \"0.1px\",\n//     opacity: 0,\n//     overflow: \"hidden\",\n//     position: \"absolute\",\n//     top: \"0\",\n//     zIndex: -1,\n//   },\n//   file: {\n//     height: \"160px\",\n//     position: \"relative\",\n//     overflow: \"hidden\",\n//     textAlign: \"center\",\n//   },\n// }));\n// export const Photo = (props) => {\n//   const i18n = React.useContext(LocalizeContext);\n//   const classes = useStyles();\n//   const [photoStyle, setPhotoStyle] = useState({\n//     width: \"auto\",\n//     height: \"100%\",\n//   });\n//   const photoEl = useRef(null);\n//   const iptRef = useRef(null);\n//   const projectData = useParams();\n//   const onPhotoChange = (e) => {\n//     const fileReader = new FileReader();\n//     const file = e.target.files[0];\n//     const isCamera = e.target.value.includes('camera');\n//     console.log(isCamera ? '用户选择了拍照' : '用户选择了本地图片');\n//     fileReader.onloadend = (e) => {\n//       const photo = e.target.result;\n//       fillTextToImg(photo, projectData).then((res) => {\n//         props.onChange(res);\n//        })\n//       const i = new Image();\n//       i.onload = () => {\n//         setPhotoStyle({\n//           // width: photoEl.current.clientWidth,\n//           // height: (photoEl.current.clientWidth / i.width) * i.height,\n//           width: \"auto\",\n//           height: \"100%\",\n//         });\n//       };\n//       i.src = photo;\n//     };\n//     if (file) {\n//       new Compressor(file, {\n//         quality: 0.2,\n//         convertSize: 400000,\n//         success(result) {\n//           fileReader.readAsDataURL(result);\n//         },\n//         error(err) {\n//           console.log(err.message);\n//         },\n//       });\n//     } else {\n//       props.onChange(\"#\");\n//     }\n//   };\n//   return (\n//     <div className={classes.root}>\n//       <Typography variant=\"subtitle2\" className={classes.lable}>\n//         {props.label}\n//       </Typography>\n//       <div>\n//         <input\n//           className={classes.inputFile}\n//           type=\"file\"\n//           accept=\"image/x-png,image/jpeg,image/gif\"\n//           id={props.id}\n//           ref={iptRef}\n//           onChange={onPhotoChange}\n//         />\n//       </div>\n//       <div>\n//         {/* <Typography variant=\"body2\">{props.description}</Typography> */}\n//         <FormLabel required={props.required}>\n//           <Typography\n//             component=\"span\"\n//             variant=\"subtitle2\"\n//             className={classes.lable}\n//           >\n//             {props.description}\n//           </Typography>\n//         </FormLabel>\n//       </div>\n//       <Box border={1} className={classes.file}>\n//         <img src={props.value} style={photoStyle} ref={photoEl} alt=\"\" />\n//       </Box>\n//       <Box className={classes.btm}>\n//         <Typography\n//           color=\"secondary\"\n//           variant=\"body2\"\n//           onClick={() => {\n//             props.onChange(\"#\");\n//             iptRef.current.value = \"\";\n//           }}\n//         >\n//           {i18n.ISNTAPP_DELETE}\n//         </Typography>\n//         <label htmlFor={props.id}>\n//           <Typography color=\"secondary\" variant=\"body2\">\n//             {i18n.ISNTAPP_IMPORT_PICTURES}\n//           </Typography>\n//         </label>\n//       </Box>\n//     </div>\n//   );\n// };\nimport React, { useRef, useEffect, useState } from 'react';\n\nconst Photo = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [stream, setStream] = useState(null);\n\n  const startCamera = async () => {\n    try {\n      const mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      setStream(mediaStream);\n\n      if (videoRef.current) {\n        videoRef.current.srcObject = mediaStream;\n      }\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n    }\n  };\n\n  const takePhoto = () => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n\n  useEffect(() => {\n    startCamera();\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: takePhoto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, \"Capture\"));\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TemplateForm/Photo/index.js"],"names":["React","useRef","useEffect","useState","Photo","videoRef","canvasRef","stream","setStream","startCamera","mediaStream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","takePhoto","ctx","getContext","drawImage","width","height","getTracks","forEach","track","stop","display"],"mappingsgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGJ,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMK,SAAS,GAAGL,MAAM,CAAC,IAAD,CAAxB;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMM,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMC,WAAW,GAAG,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAApC,CAA1B;AACAN,MAAAA,SAAS,CAACE,WAAD,CAAT;;AACA,UAAIL,QAAQ,CAACU,OAAb,EAAsB;AACpBV,QAAAA,QAAQ,CAACU,OAAT,CAAiBC,SAAjB,GAA6BN,WAA7B;AACD;AACF,KAND,CAME,OAAOO,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACD;AACF,GAVD;;AAYA,QAAME,SAAS,GAAG,MAAM;AACtB,UAAMC,GAAG,GAAGd,SAAS,CAACS,OAAV,CAAkBM,UAAlB,CAA6B,IAA7B,CAAZ;AACAD,IAAAA,GAAG,CAACE,SAAJ,CAAcjB,QAAQ,CAACU,OAAvB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsCT,SAAS,CAACS,OAAV,CAAkBQ,KAAxD,EAA+DjB,SAAS,CAACS,OAAV,CAAkBS,MAAjF;AACD,GAHD;;AAKAtB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW;AACX,WAAO,MAAM;AACX,UAAIF,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACkB,SAAP,GAAmBC,OAAnB,CAA2BC,KAAK,IAAIA,KAAK,CAACC,IAAN,EAApC;AACD;AACF,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,GAAG,EAAEvB,QAAZ;AAAsB,IAAA,QAAQ,MAA9B;AAA+B,IAAA,KAAK,EAAE;AAAEkB,MAAAA,KAAK,EAAE;AAAT,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,GAAG,EAAEjB,SAAb;AAAwB,IAAA,KAAK,EAAE;AAAEuB,MAAAA,OAAO,EAAE;AAAX,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAQ,IAAA,OAAO,EAAEV,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOD,CAtCD","sourcesContent":["// import { Box, FormLabel, makeStyles, Typography } from \"@material-ui/core\";\r\n// import Compressor from \"compressorjs\";\r\n// import { LocalizeContext } from \"i18n\";\r\n// import { fillTextToImg } from \"js/util\";\r\n// import React, { useRef, useState } from \"react\";\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles(({ spacing }) => ({\r\n//   btm: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"space-between\",\r\n//     margin: spacing(1, 1, 0, 1),\r\n//   },\r\n//   root: {\r\n//     display: \"grid\",\r\n//     padding: spacing(1, 0),\r\n//     borderBottom: \" 1px solid #e0e0e0\",\r\n//     backgroundColor: \"#FFF\",\r\n//   },\r\n//   lable: {\r\n//     margin: spacing(0, 0, 1, 0),\r\n//     color: \"rgba(0, 0, 0, 0.87)\",\r\n//   },\r\n//   inputFile: {\r\n//     width: \"0.1px\",\r\n//     height: \"0.1px\",\r\n//     opacity: 0,\r\n//     overflow: \"hidden\",\r\n//     position: \"absolute\",\r\n//     top: \"0\",\r\n//     zIndex: -1,\r\n//   },\r\n//   file: {\r\n//     height: \"160px\",\r\n//     position: \"relative\",\r\n//     overflow: \"hidden\",\r\n//     textAlign: \"center\",\r\n//   },\r\n// }));\r\n\r\n// export const Photo = (props) => {\r\n//   const i18n = React.useContext(LocalizeContext);\r\n//   const classes = useStyles();\r\n//   const [photoStyle, setPhotoStyle] = useState({\r\n//     width: \"auto\",\r\n//     height: \"100%\",\r\n//   });\r\n//   const photoEl = useRef(null);\r\n//   const iptRef = useRef(null);\r\n//   const projectData = useParams();\r\n//   const onPhotoChange = (e) => {\r\n//     const fileReader = new FileReader();\r\n//     const file = e.target.files[0];\r\n//     const isCamera = e.target.value.includes('camera');\r\n//     console.log(isCamera ? '用户选择了拍照' : '用户选择了本地图片');\r\n\r\n//     fileReader.onloadend = (e) => {\r\n//       const photo = e.target.result;\r\n//       fillTextToImg(photo, projectData).then((res) => {\r\n//         props.onChange(res);\r\n//        })\r\n//       const i = new Image();\r\n//       i.onload = () => {\r\n//         setPhotoStyle({\r\n//           // width: photoEl.current.clientWidth,\r\n//           // height: (photoEl.current.clientWidth / i.width) * i.height,\r\n//           width: \"auto\",\r\n//           height: \"100%\",\r\n//         });\r\n//       };\r\n//       i.src = photo;\r\n//     };\r\n//     if (file) {\r\n//       new Compressor(file, {\r\n//         quality: 0.2,\r\n//         convertSize: 400000,\r\n//         success(result) {\r\n//           fileReader.readAsDataURL(result);\r\n//         },\r\n//         error(err) {\r\n//           console.log(err.message);\r\n//         },\r\n//       });\r\n//     } else {\r\n//       props.onChange(\"#\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className={classes.root}>\r\n//       <Typography variant=\"subtitle2\" className={classes.lable}>\r\n//         {props.label}\r\n//       </Typography>\r\n//       <div>\r\n//         <input\r\n//           className={classes.inputFile}\r\n//           type=\"file\"\r\n//           accept=\"image/x-png,image/jpeg,image/gif\"\r\n//           id={props.id}\r\n//           ref={iptRef}\r\n//           onChange={onPhotoChange}\r\n//         />\r\n//       </div>\r\n//       <div>\r\n//         {/* <Typography variant=\"body2\">{props.description}</Typography> */}\r\n//         <FormLabel required={props.required}>\r\n//           <Typography\r\n//             component=\"span\"\r\n//             variant=\"subtitle2\"\r\n//             className={classes.lable}\r\n//           >\r\n//             {props.description}\r\n//           </Typography>\r\n//         </FormLabel>\r\n//       </div>\r\n//       <Box border={1} className={classes.file}>\r\n//         <img src={props.value} style={photoStyle} ref={photoEl} alt=\"\" />\r\n//       </Box>\r\n//       <Box className={classes.btm}>\r\n//         <Typography\r\n//           color=\"secondary\"\r\n//           variant=\"body2\"\r\n//           onClick={() => {\r\n//             props.onChange(\"#\");\r\n//             iptRef.current.value = \"\";\r\n//           }}\r\n//         >\r\n//           {i18n.ISNTAPP_DELETE}\r\n//         </Typography>\r\n//         <label htmlFor={props.id}>\r\n//           <Typography color=\"secondary\" variant=\"body2\">\r\n//             {i18n.ISNTAPP_IMPORT_PICTURES}\r\n//           </Typography>\r\n//         </label>\r\n//       </Box>\r\n//     </div>\r\n//   );\r\n// };\r\nimport React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst Photo = () => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [stream, setStream] = useState(null);\r\n\r\n  const startCamera = async () => {\r\n    try {\r\n      const mediaStream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      setStream(mediaStream);\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = mediaStream;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accessing camera:', error);\r\n    }\r\n  };\r\n\r\n  const takePhoto = () => {\r\n    const ctx = canvasRef.current.getContext('2d');\r\n    ctx.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\r\n  };\r\n\r\n  useEffect(() => {\r\n    startCamera();\r\n    return () => {\r\n      if (stream) {\r\n        stream.getTracks().forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <video ref={videoRef} autoPlay style={{ width: '100%' }} />\r\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n      <button onClick={takePhoto}>Capture</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\OrderActivityListPage\\\\index.js\";\nimport OrderActivityList from \"components/OrderActivityList\";\nimport OrderActivityListCard from \"components/OrderActivityListCard\";\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { LocalizeContext } from \"i18n\";\nimport * as action from \"actions\";\nimport * as publicFn from \"../../js/publicFn/index\";\n\nconst OrderActivityListPage = ({\n  data,\n  orderNumber,\n  submit\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  return /*#__PURE__*/React.createElement(PrimaryLayout, {\n    title: i18n.ISNTAPP_JOBLIST_ACTIVITY + \": \" + orderNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OrderActivityList, {\n    data: data,\n    component: OrderActivityListCard,\n    tabType: \"activity\",\n    submit: (activityNumber, date, type) => {\n      submit(activityNumber, orderNumber, date, type);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToState = dispatch => {\n  return {\n    submit: (activityNumber, orderNumber, date, type) => {\n      let data = {\n        activityNo: activityNumber,\n        date: date ? date : \"\",\n        orderNo: orderNumber,\n        type: type\n      };\n      dispatch(action.updateOrderActivityStatus(data));\n    }\n  };\n};\n\nexport default connect(({\n  orders,\n  orderActivities,\n  activities,\n  auth\n}, {\n  match: {\n    params: {\n      number: orderNumber\n    }\n  }\n}) => {\n  const hideInProgress = auth.activityAuth.hideInProgress;\n  const {\n    productFamily\n  } = orders[orderNumber] || {};\n  return {\n    data: Object.keys(orderActivities).filter(key => {\n      return orderActivities[key].orderNumber === orderNumber && activities[orderActivities[key].activityNumber] && !hideInProgress.includes(orderActivities[key].activityNumber);\n    }).map(key => {\n      const activityNumber = orderActivities[key].activityNumber;\n      const {\n        confirmedDate,\n        leadingDate,\n        leadingStartDate,\n        leadingEndDate,\n        info\n      } = orderActivities[key];\n      const {\n        descriptionShort\n      } = activities[activityNumber];\n      let authOrderActivities = {\n        auth,\n        orderActivities\n      };\n      let ownprops = {\n        activityNumber,\n        orderNumber\n      };\n      let isExecutable = publicFn.DatePermissionControl(authOrderActivities, ownprops);\n      return {\n        activityNumber: activityNumber,\n        confirmedDate: confirmedDate ? new Date(confirmedDate).toLocaleDateString() : \"-\",\n        descriptionShort: descriptionShort,\n        leadingDate: leadingDate ? new Date(leadingDate).toLocaleDateString() : leadingStartDate && leadingEndDate ? new Date(leadingEndDate).toLocaleDateString() : \"-\",\n        info: info || \"-\",\n        orderNumber: orderNumber,\n        productFamily,\n        isExecutable\n      };\n    }),\n    orderNumber: orderNumber\n  };\n}, mapDispatchToState)(OrderActivityListPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/OrderActivityListPage/index.js"],"names":["OrderActivityList","OrderActivityListCard","PrimaryLayout","React","connect","LocalizeContext","action","publicFn","OrderActivityListPage","data","orderNumber","submit","i18n","useContext","ISNTAPP_JOBLIST_ACTIVITY","activityNumber","date","type","mapDispatchToState","dispatch","activityNo","orderNo","updateOrderActivityStatus","orders","orderActivities","activities","auth","match","params","number","hideInProgress","activityAuth","productFamily","Object","keys","filter","key","includes","map","confirmedDate","leadingDate","leadingStartDate","leadingEndDate","info","descriptionShort","authOrderActivities","ownprops","isExecutable","DatePermissionControl","Date","toLocaleDateString"],"mappings":"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","sourcesContent":["import OrderActivityList from \"components/OrderActivityList\";\r\nimport OrderActivityListCard from \"components/OrderActivityListCard\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport * as action from \"actions\";\r\nimport * as publicFn from \"../../js/publicFn/index\";\r\n\r\nconst OrderActivityListPage = ({ data, orderNumber, submit }) => {\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  return (\r\n    <PrimaryLayout title={i18n.ISNTAPP_JOBLIST_ACTIVITY + \": \" + orderNumber}>\r\n      <OrderActivityList\r\n        data={data}\r\n        component={OrderActivityListCard}\r\n        tabType=\"activity\"\r\n        submit={(activityNumber, date, type) => {\r\n          submit(activityNumber, orderNumber, date, type);\r\n        }}\r\n      ></OrderActivityList>\r\n    </PrimaryLayout>\r\n  );\r\n};\r\n\r\nconst mapDispatchToState = (dispatch) => {\r\n  return {\r\n    submit: (activityNumber, orderNumber, date, type) => {\r\n      let data = {\r\n        activityNo: activityNumber,\r\n        date: date ? date : \"\",\r\n        orderNo: orderNumber,\r\n        type: type,\r\n      };\r\n      dispatch(action.updateOrderActivityStatus(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  (\r\n    { orders, orderActivities, activities, auth },\r\n    {\r\n      match: {\r\n        params: { number: orderNumber },\r\n      },\r\n    }\r\n  ) => {\r\n    const hideInProgress = auth.activityAuth.hideInProgress;\r\n    const { productFamily } = orders[orderNumber] || {};\r\n\r\n    return {\r\n      data: Object.keys(orderActivities)\r\n        .filter((key) => {\r\n          return (\r\n            orderActivities[key].orderNumber === orderNumber &&\r\n            activities[orderActivities[key].activityNumber] &&\r\n            !hideInProgress.includes(orderActivities[key].activityNumber)\r\n          );\r\n        })\r\n        .map((key) => {\r\n          const activityNumber = orderActivities[key].activityNumber;\r\n          const {\r\n            confirmedDate,\r\n            leadingDate,\r\n            leadingStartDate,\r\n            leadingEndDate,\r\n            info,\r\n          } = orderActivities[key];\r\n          const { descriptionShort } = activities[activityNumber];\r\n\r\n          let authOrderActivities = {\r\n            auth,\r\n            orderActivities,\r\n          };\r\n\r\n          let ownprops = {\r\n            activityNumber,\r\n            orderNumber,\r\n          };\r\n\r\n          let isExecutable = publicFn.DatePermissionControl(\r\n            authOrderActivities,\r\n            ownprops\r\n          );\r\n\r\n          return {\r\n            activityNumber: activityNumber,\r\n            confirmedDate: confirmedDate\r\n              ? new Date(confirmedDate).toLocaleDateString()\r\n              : \"-\",\r\n            descriptionShort: descriptionShort,\r\n            leadingDate: leadingDate\r\n              ? new Date(leadingDate).toLocaleDateString()\r\n              : leadingStartDate && leadingEndDate\r\n              ? new Date(leadingEndDate).toLocaleDateString()\r\n              : \"-\",\r\n            info: info || \"-\",\r\n            orderNumber: orderNumber,\r\n            productFamily,\r\n            isExecutable,\r\n          };\r\n        }),\r\n      orderNumber: orderNumber,\r\n    };\r\n  },\r\n  mapDispatchToState\r\n)(OrderActivityListPage);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{Box,Typography}from\"@material-ui/core\";import{DatePicker}from\"@material-ui/pickers\";import ConfirmModal from\"components/ConfirmModal\";import TaskListCard from\"components/TaskListCard\";import{LocalizeContext}from\"i18n\";import moment from\"moment\";import React from\"react\";var TaskList=function TaskList(_ref){var data=_ref.data,status=_ref.status,type=_ref.type,submit=_ref.submit;var i18n=React.useContext(LocalizeContext);var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),currentTask=_React$useState4[0],setCurrentTask=_React$useState4[1];var _React$useState5=React.useState(moment(new Date()).format(\"YYYY-MM-DD\")),_React$useState6=_slicedToArray(_React$useState5,2),cplDate=_React$useState6[0],setCplDate=_React$useState6[1];var _React$useState7=React.useState(\"\"),_React$useState8=_slicedToArray(_React$useState7,2),description=_React$useState8[0],setDescription=_React$useState8[1];var _React$useState9=React.useState(null),_React$useState10=_slicedToArray(_React$useState9,2),submitData=_React$useState10[0],setSubmitData=_React$useState10[1];var _handleClickOpen=function handleClickOpen(action,taskName,currentTaskData){setOpen(action);setCurrentTask(taskName);setSubmitData(currentTaskData);};var handleClose=function handleClose(){setOpen(false);setCplDate(moment(new Date()).format(\"YYYY-MM-DD\"));setDescription(\"\");};var handleClick=function handleClick(){var submitDatas=submitData;if(open===\"done\"&&cplDate&&description){submitDatas.CPLDate=cplDate;submitDatas.AssigneeCMNT=description;submitDatas.Status=\"D\";submit(submitDatas);setOpen(false);setCplDate(\"\");setDescription(\"\");}if(open===\"delete\"){submitDatas.Status=\"DL\";submit(submitDatas);setOpen(false);}if(open===\"close\"){submitDatas.Status=\"CL\";submit(submitDatas);setOpen(false);}};return/*#__PURE__*/React.createElement(Box,null,data.map(function(item,index){return/*#__PURE__*/React.createElement(TaskListCard,{data:item,type:type,status:status,handleClickOpen:function handleClickOpen(action,taskName,currentTaskData){return _handleClickOpen(action,taskName,currentTaskData);},key:index});}),/*#__PURE__*/React.createElement(ConfirmModal,{open:open===\"done\"||open===\"delete\"||open===\"close\",handleClick:handleClick,onClose:handleClose,title:currentTask},/*#__PURE__*/React.createElement(Box,{mb:1},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:open===\"done\"?cplDate?\"initial\":\"error\":\"initial\"},open===\"done\"&&\"*\"+i18n.ISNTAPP_PLEASE_SELECT_COnFIRM_DATE,open===\"delete\"&&i18n.ISNTAPP_CONFIRM_TO_DELETE_THIS_TASK,open===\"close\"&&i18n.ISNTAPP_CONFIRM_TO_CLOSE_THIS_TASK)),open===\"done\"&&/*#__PURE__*/React.createElement(Box,null,/*#__PURE__*/React.createElement(Box,{mb:1},/*#__PURE__*/React.createElement(DatePicker,{autoOk:true,fullWidth:true,required:true,disableToolbar:true,variant:\"inline\",value:cplDate?new Date(cplDate):null,format:\"YYYY/MM/DD\",maxDate:new Date(),onChange:function onChange(d){setCplDate(moment(d).format(\"YYYY-MM-DD\"));}})),/*#__PURE__*/React.createElement(Box,{mb:1},open===\"done\"&&/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:open===\"done\"?description?\"initial\":\"error\":\"initial\"},\"*\",i18n.ISNTAPP_COMPLETE_COMMENT)),/*#__PURE__*/React.createElement(Box,{mb:1},/*#__PURE__*/React.createElement(\"textarea\",{rows:\"6\",placeholder:i18n.ISNTAPP_COMPLETE_COMMENT,style:{width:\"100%\",resize:\"none\"},onChange:function onChange(e){setDescription(e.target.value);},value:description})))));};export default TaskList;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TaskList/index.js"],"names":["Box","Typography","DatePicker","ConfirmModal","TaskListCard","LocalizeContext","moment","React","TaskList","data","status","type","submit","i18n","useContext","useState","open","setOpen","currentTask","setCurrentTask","Date","format","cplDate","setCplDate","description","setDescription","submitData","setSubmitData","handleClickOpen","action","taskName","currentTaskData","handleClose","handleClick","submitDatas","CPLDate","AssigneeCMNT","Status","map","item","index","ISNTAPP_PLEASE_SELECT_COnFIRM_DATE","ISNTAPP_CONFIRM_TO_DELETE_THIS_TASK","ISNTAPP_CONFIRM_TO_CLOSE_THIS_TASK","d","ISNTAPP_COMPLETE_COMMENT","width","resize","e","target","value"],"mappings":"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","sourcesContent":["import { Box, Typography } from \"@material-ui/core\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport ConfirmModal from \"components/ConfirmModal\";\r\nimport TaskListCard from \"components/TaskListCard\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nconst TaskList = ({ data, status, type, submit }) => {\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  const [open, setOpen] = React.useState(null);\r\n\r\n  const [currentTask, setCurrentTask] = React.useState(\"\");\r\n  const [cplDate, setCplDate] = React.useState(\r\n    moment(new Date()).format(\"YYYY-MM-DD\")\r\n  );\r\n  const [description, setDescription] = React.useState(\"\");\r\n  const [submitData, setSubmitData] = React.useState(null);\r\n\r\n  const handleClickOpen = (action, taskName, currentTaskData) => {\r\n    setOpen(action);\r\n    setCurrentTask(taskName);\r\n    setSubmitData(currentTaskData);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setCplDate(moment(new Date()).format(\"YYYY-MM-DD\"));\r\n    setDescription(\"\");\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const submitDatas = submitData;\r\n\r\n    if (open === \"done\" && cplDate && description) {\r\n      submitDatas.CPLDate = cplDate;\r\n      submitDatas.AssigneeCMNT = description;\r\n      submitDatas.Status = \"D\";\r\n      submit(submitDatas);\r\n      setOpen(false);\r\n      setCplDate(\"\");\r\n      setDescription(\"\");\r\n    }\r\n    if (open === \"delete\") {\r\n      submitDatas.Status = \"DL\";\r\n      submit(submitDatas);\r\n      setOpen(false);\r\n    }\r\n    if (open === \"close\") {\r\n      submitDatas.Status = \"CL\";\r\n      submit(submitDatas);\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {data.map((item, index) => {\r\n        return (\r\n          <TaskListCard\r\n            data={item}\r\n            type={type}\r\n            status={status}\r\n            handleClickOpen={(action, taskName, currentTaskData) =>\r\n              handleClickOpen(action, taskName, currentTaskData)\r\n            }\r\n            key={index}\r\n          />\r\n        );\r\n      })}\r\n      <ConfirmModal\r\n        open={open === \"done\" || open === \"delete\" || open === \"close\"}\r\n        handleClick={handleClick}\r\n        onClose={handleClose}\r\n        title={currentTask}\r\n      >\r\n        <Box mb={1}>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color={\r\n              open === \"done\" ? (cplDate ? \"initial\" : \"error\") : \"initial\"\r\n            }\r\n          >\r\n            {open === \"done\" && `*` + i18n.ISNTAPP_PLEASE_SELECT_COnFIRM_DATE}\r\n            {open === \"delete\" && i18n.ISNTAPP_CONFIRM_TO_DELETE_THIS_TASK}\r\n            {open === \"close\" && i18n.ISNTAPP_CONFIRM_TO_CLOSE_THIS_TASK}\r\n          </Typography>\r\n        </Box>\r\n        {open === \"done\" && (\r\n          <Box>\r\n            <Box mb={1}>\r\n              {/* <input\r\n                type=\"date\"\r\n                style={{ width: \"100%\" }}\r\n                onChange={(e) => {\r\n                  setCplDate(e.target.value);\r\n                }}\r\n                value={cplDate}\r\n              /> */}\r\n              <DatePicker\r\n                autoOk\r\n                fullWidth\r\n                required\r\n                disableToolbar={true}\r\n                variant=\"inline\"\r\n                value={cplDate ? new Date(cplDate) : null}\r\n                format=\"YYYY/MM/DD\"\r\n                maxDate={new Date()}\r\n                onChange={(d) => {\r\n                  setCplDate(moment(d).format(\"YYYY-MM-DD\"));\r\n                }}\r\n              />\r\n            </Box>\r\n            <Box mb={1}>\r\n              {open === \"done\" && (\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  color={\r\n                    open === \"done\"\r\n                      ? description\r\n                        ? \"initial\"\r\n                        : \"error\"\r\n                      : \"initial\"\r\n                  }\r\n                >\r\n                  *{i18n.ISNTAPP_COMPLETE_COMMENT}\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n            <Box mb={1}>\r\n              <textarea\r\n                rows=\"6\"\r\n                placeholder={i18n.ISNTAPP_COMPLETE_COMMENT}\r\n                style={{ width: \"100%\", resize: \"none\" }}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                }}\r\n                value={description}\r\n              ></textarea>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n      </ConfirmModal>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"]},"metadata":{},"sourceType":"module"}
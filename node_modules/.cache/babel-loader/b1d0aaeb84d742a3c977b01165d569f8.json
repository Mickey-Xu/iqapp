{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\FFTab\\\\index.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport React from \"react\";\nconst useStyles = makeStyles(theme => ({\n  tab: {\n    whiteSpace: \"nowrap\",\n    textTransform: \"capitalize\"\n  },\n  root: {\n    backgroundColor: \" #FFF\"\n  }\n}));\n\nconst FFTab = ({\n  tabs,\n  selectedTabValue,\n  onTabChange\n}) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(selectedTabValue);\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n\n    if (onTabChange) {\n      onTabChange(newValue);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Tabs, {\n    className: classes.root,\n    value: value,\n    indicatorColor: \"secondary\",\n    textColor: \"secondary\",\n    onChange: handleTabChange,\n    variant: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, tabs.map((i, index) => {\n    return /*#__PURE__*/React.createElement(Tab, {\n      key: index,\n      label: i.title,\n      value: i.value,\n      className: classes.tab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default FFTab;","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/FFTab/index.js"],"names":["makeStyles","Tab","Tabs","React","useStyles","theme","tab","whiteSpace","textTransform","root","backgroundColor","FFTab","tabs","selectedTabValue","onTabChange","classes","value","setValue","useState","handleTabChange","event","newValue","map","i","index","title"],"mappings":";AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACvCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE,QADT;AAEHC,IAAAA,aAAa,EAAE;AAFZ,GADkC;AAKvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE;AADb;AALiC,CAAZ,CAAD,CAA5B;;AAUA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,gBAAR;AAA0BC,EAAAA;AAA1B,CAAD,KAA6C;AACzD,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AAEA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACe,QAAN,CAAeL,gBAAf,CAA1B;;AAEA,QAAMM,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3CJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;;AACA,QAAIP,WAAJ,EAAiB;AACfA,MAAAA,WAAW,CAACO,QAAD,CAAX;AACD;AACF,GALD;;AAOA,sBACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEN,OAAO,CAACN,IADrB;AAEE,IAAA,KAAK,EAAEO,KAFT;AAGE,IAAA,cAAc,EAAC,WAHjB;AAIE,IAAA,SAAS,EAAC,WAJZ;AAKE,IAAA,QAAQ,EAAEG,eALZ;AAME,IAAA,OAAO,EAAC,WANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGP,IAAI,CAACU,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACtB,wBACE,oBAAC,GAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,KAAK,EAAED,CAAC,CAACE,KAFX;AAGE,MAAA,KAAK,EAAEF,CAAC,CAACP,KAHX;AAIE,MAAA,SAAS,EAAED,OAAO,CAACT,GAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,GATA,CARH,CADF;AAqBD,CAjCD;;AAmCA,eAAeK,KAAf","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tab: {\r\n    whiteSpace: \"nowrap\",\r\n    textTransform: \"capitalize\",\r\n  },\r\n  root: {\r\n    backgroundColor: \" #FFF\",\r\n  },\r\n}));\r\n\r\nconst FFTab = ({ tabs, selectedTabValue, onTabChange }) => {\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = React.useState(selectedTabValue);\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    if (onTabChange) {\r\n      onTabChange(newValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tabs\r\n      className={classes.root}\r\n      value={value}\r\n      indicatorColor=\"secondary\"\r\n      textColor=\"secondary\"\r\n      onChange={handleTabChange}\r\n      variant=\"fullWidth\"\r\n    >\r\n      {tabs.map((i, index) => {\r\n        return (\r\n          <Tab\r\n            key={index}\r\n            label={i.title}\r\n            value={i.value}\r\n            className={classes.tab}\r\n          />\r\n        );\r\n      })}\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default FFTab;\r\n"]},"metadata":{},"sourceType":"module"}
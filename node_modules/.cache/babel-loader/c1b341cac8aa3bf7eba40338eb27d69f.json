{"ast":null,"code":"import * as action from \"actions\";\nimport * as repo from \"js/fetch\";\nimport * as installationStep from \"js/installationStep\";\nimport { getDocumentListParmas } from \"js/util\";\nimport { db } from \"js/db\";\nlet projectNos = [];\nexport const fetchAll = type => dispatch => {\n  dispatch(action.showLoading());\n  return repo.fetchTasks(type).then(data => {\n    dispatch(action.setTasks(data));\n  }).catch(error => {\n    if (error.code === 401) {\n      window.localStorage.removeItem(\"auth\");\n      dispatch(action.setAuth(null));\n    }\n\n    dispatch(action.setError(error.message));\n  }).finally(() => {\n    db.cache.get(\"dataVersion\").then(cache => {\n      if ((cache === null || cache === void 0 ? void 0 : cache.data) === \"lastVersion\") {\n        db.cache.put({\n          id: \"dataVersion\",\n          data: \"initVersion\"\n        });\n        window.location.reload();\n      }\n\n      dispatch(action.hideLoading());\n    });\n  });\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/actions/initialization.js"],"names":["action","repo","installationStep","getDocumentListParmas","db","projectNos","fetchAll","type","dispatch","showLoading","fetchTasks","then","data","setTasks","catch","error","code","window","localStorage","removeItem","setAuth","setError","message","finally","cache","get","put","id","location","reload","hideLoading"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,SAAxB;AACA,OAAO,KAAKC,IAAZ,MAAsB,UAAtB;AACA,OAAO,KAAKC,gBAAZ,MAAkC,qBAAlC;AACA,SAASC,qBAAT,QAAsC,SAAtC;AACA,SAASC,EAAT,QAAmB,OAAnB;AAEA,IAAIC,UAAU,GAAG,EAAjB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAACR,MAAM,CAACS,WAAP,EAAD,CAAR;AACA,SAAOR,IAAI,CACVS,UADM,CACKH,IADL,EAEJI,IAFI,CAEEC,IAAD,IAAU;AACdJ,IAAAA,QAAQ,CAACR,MAAM,CAACa,QAAP,CAAgBD,IAAhB,CAAD,CAAR;AACD,GAJI,EAKJE,KALI,CAKGC,KAAD,IAAW;AAChB,QAAIA,KAAK,CAACC,IAAN,KAAe,GAAnB,EAAwB;AACtBC,MAAAA,MAAM,CAACC,YAAP,CAAoBC,UAApB,CAA+B,MAA/B;AACAX,MAAAA,QAAQ,CAACR,MAAM,CAACoB,OAAP,CAAe,IAAf,CAAD,CAAR;AACD;;AACDZ,IAAAA,QAAQ,CAACR,MAAM,CAACqB,QAAP,CAAgBN,KAAK,CAACO,OAAtB,CAAD,CAAR;AACD,GAXI,EAYJC,OAZI,CAYI,MAAM;AACbnB,IAAAA,EAAE,CAACoB,KAAH,CAASC,GAAT,CAAa,aAAb,EAA4Bd,IAA5B,CAAiCa,KAAK,IAAI;AACxC,UAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEZ,IAAP,MAAgB,aAApB,EAAmC;AACjCR,QAAAA,EAAE,CAACoB,KAAH,CAASE,GAAT,CAAa;AAAEC,UAAAA,EAAE,EAAE,aAAN;AAAqBf,UAAAA,IAAI,EAAE;AAA3B,SAAb;AACAK,QAAAA,MAAM,CAACW,QAAP,CAAgBC,MAAhB;AACD;;AACDrB,MAAAA,QAAQ,CAACR,MAAM,CAAC8B,WAAP,EAAD,CAAR;AACD,KAND;AAOD,GApBI,CAAP;AAqBD,CAvBM","sourcesContent":["import * as action from \"actions\";\r\nimport * as repo from \"js/fetch\";\r\nimport * as installationStep from \"js/installationStep\";\r\nimport { getDocumentListParmas } from \"js/util\";\r\nimport { db } from \"js/db\";\r\n\r\nlet projectNos = [];\r\n\r\nexport const fetchAll = (type) => (dispatch) => {\r\n  dispatch(action.showLoading());\r\n  return repo\r\n  .fetchTasks(type)\r\n    .then((data) => {\r\n      dispatch(action.setTasks(data));\r\n    })\r\n    .catch((error) => {\r\n      if (error.code === 401) {\r\n        window.localStorage.removeItem(\"auth\");\r\n        dispatch(action.setAuth(null));\r\n      }\r\n      dispatch(action.setError(error.message));\r\n    })\r\n    .finally(() => {\r\n      db.cache.get(\"dataVersion\").then(cache => {\r\n        if (cache?.data === \"lastVersion\") {\r\n          db.cache.put({ id: \"dataVersion\", data: \"initVersion\" })\r\n          window.location.reload()\r\n        }\r\n        dispatch(action.hideLoading());\r\n      })\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import{get,post}from\"./base\";import store from\"js/store\";import _ from\"lodash\";export var fetchMasterData=function fetchMasterData(data){return get(\"/app/orderMDGet\",data);};export var fetchOrdersData=function fetchOrdersData(data){return get(\"/app/ordersGet\",data);};export var fetchOrdersDataByProjects=function fetchOrdersDataByProjects(data){return get(\"/app/ordersGet/ByProjects\",data);};function customizer(objValue,srcValue){if(_.isArray(objValue)){return objValue.concat(srcValue);}}export var fetchOrdersDataByProjectsAndMerge=function fetchOrdersDataByProjectsAndMerge(projects,step,userInfo){var auth=store.getState().auth;var promises=[];var splitCount=Math.ceil(projects.length/step);for(var i=0;i<splitCount;i++){var ps={projectNos:projects.slice(i*step,(i+1)*step)};if(userInfo===null||userInfo===void 0?void 0:userInfo.pNumber){ps[\"pNumber\"]=userInfo.pNumber;}promises.push(fetchOrdersDataByProjects(ps));}if(promises.length===0){// Just get the error message through call api\nvar message=(auth===null||auth===void 0?void 0:auth.roles[0])===\"SL\"?\"请到我的->同步界面上，点最右上角的同步按钮同步数据\":\"未发现该用户的订单信息\";return Promise.reject({message:message});}var result={};var fulfilledValues=[];return Promise.allSettled(promises).then(function(results){results.forEach(function(result){if(result.status===\"fulfilled\"){fulfilledValues.push(result.value);}});if(fulfilledValues.length===0){var _message=(auth===null||auth===void 0?void 0:auth.roles[0])===\"SL\"?\"请到我的->同步界面上，点最右上角的同步按钮同步数据\":\"未发现该用户的订单信息\";return Promise.reject({message:_message});}else{for(var _i=0;_i<fulfilledValues.length;_i++){_.mergeWith(result,fulfilledValues[_i].data,customizer);}return Promise.resolve(result);}});};export var updateOrderInstallationsMethod=function updateOrderInstallationsMethod(data){return post(\"/app/orderInstallationMethod\",data);};export var updateOrderActivityStatus=function updateOrderActivityStatus(data){return post(\"/app/activityStatusSet\",data);};export var getInstMethods=function getInstMethods(){return get(\"/app/instMethods\");};export var updateLocalInstallationStepConfirmDate=function updateLocalInstallationStepConfirmDate(data){return post(\"/app/convertStepsConfirmedDate\",data);};export var getLocalInstallationStepConfirmDate=function getLocalInstallationStepConfirmDate(data){return get(\"/app/convertStepsConfirmedDate\",data);};export var checkFileIsExisting=function checkFileIsExisting(data){return post(\"/app/CheckFileExisting\",data);};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/api/orders.js"],"names":["get","post","store","_","fetchMasterData","data","fetchOrdersData","fetchOrdersDataByProjects","customizer","objValue","srcValue","isArray","concat","fetchOrdersDataByProjectsAndMerge","projects","step","userInfo","auth","getState","promises","splitCount","Math","ceil","length","i","ps","projectNos","slice","pNumber","push","message","roles","Promise","reject","result","fulfilledValues","allSettled","then","results","forEach","status","value","mergeWith","resolve","updateOrderInstallationsMethod","updateOrderActivityStatus","getInstMethods","updateLocalInstallationStepConfirmDate","getLocalInstallationStepConfirmDate","checkFileIsExisting"],"mappings":"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","sourcesContent":["import { get, post } from \"./base\";\r\nimport store from \"js/store\";\r\nimport _ from \"lodash\";\r\n\r\nexport const fetchMasterData = (data) => {\r\n  return get(\"/app/orderMDGet\", data);\r\n};\r\n\r\nexport const fetchOrdersData = (data) => {\r\n  return get(\"/app/ordersGet\", data);\r\n};\r\n\r\nexport const fetchOrdersDataByProjects = (data) => {\r\n  return get(\"/app/ordersGet/ByProjects\", data);\r\n};\r\n\r\nfunction customizer(objValue, srcValue) {\r\n  if (_.isArray(objValue)) {\r\n    return objValue.concat(srcValue);\r\n  }\r\n}\r\n\r\nexport const fetchOrdersDataByProjectsAndMerge = (projects, step, userInfo) => {\r\n  const auth = store.getState().auth;\r\n  let promises = [];\r\n\r\n  let splitCount = Math.ceil(projects.length / step);\r\n  for (let i = 0; i < splitCount; i++) {\r\n    let ps = { projectNos: projects.slice(i * step, (i + 1) * step) };\r\n    if (userInfo?.pNumber) {\r\n      ps[\"pNumber\"] = userInfo.pNumber;\r\n    }\r\n    promises.push(fetchOrdersDataByProjects(ps));\r\n  }\r\n\r\n  if (promises.length === 0) {\r\n    // Just get the error message through call api\r\n    const message = auth?.roles[0] === \"SL\" ? \"请到我的->同步界面上，点最右上角的同步按钮同步数据\" : \"未发现该用户的订单信息\";\r\n\r\n    return Promise.reject({ message: message });\r\n  }\r\n\r\n  let result = {};\r\n  let fulfilledValues = [];\r\n\r\n  return Promise.allSettled(promises).then((results) => {\r\n    results.forEach((result) => {\r\n      if (result.status === \"fulfilled\") {\r\n        fulfilledValues.push(result.value);\r\n      }\r\n    });\r\n\r\n    if (fulfilledValues.length === 0) {\r\n      const message = auth?.roles[0] === \"SL\" ? \"请到我的->同步界面上，点最右上角的同步按钮同步数据\" : \"未发现该用户的订单信息\";\r\n\r\n      return Promise.reject({ message: message });\r\n    } else {\r\n      for (let i = 0; i < fulfilledValues.length; i++) {\r\n        _.mergeWith(result, fulfilledValues[i].data, customizer);\r\n      }\r\n\r\n      return Promise.resolve(result);\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateOrderInstallationsMethod = (data) => {\r\n  return post(\"/app/orderInstallationMethod\", data);\r\n};\r\n\r\nexport const updateOrderActivityStatus = (data) => {\r\n  return post(\"/app/activityStatusSet\", data);\r\n};\r\n\r\nexport const getInstMethods = () => {\r\n  return get(\"/app/instMethods\");\r\n};\r\n\r\nexport const updateLocalInstallationStepConfirmDate = (data) => {\r\n  return post(\"/app/convertStepsConfirmedDate\", data);\r\n};\r\n\r\nexport const getLocalInstallationStepConfirmDate = (data) => {\r\n  return get(\"/app/convertStepsConfirmedDate\", data);\r\n};\r\n\r\nexport const checkFileIsExisting = (data) => {\r\n  return post(\"/app/CheckFileExisting\", data);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
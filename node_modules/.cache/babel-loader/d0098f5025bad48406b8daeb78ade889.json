{"ast":null,"code":"import{Snackbar}from\"@material-ui/core\";import{alertAutoHideDuration}from\"config\";import React from\"react\";import{connect}from\"react-redux\";import*as action from\"actions\";var Alert=function Alert(_ref){var message=_ref.message,onClose=_ref.onClose;return/*#__PURE__*/React.createElement(Snackbar,{anchorOrigin:{horizontal:\"center\",vertical:\"bottom\"},autoHideDuration:alertAutoHideDuration,message:message,onClose:onClose,open:!!message});};export default connect(function(_ref2){var alert=_ref2.alert;return{message:alert.message};},function(dispatch){return{onClose:function onClose(){dispatch(action.hideAlert());}};})(Alert);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/Alert/index.js"],"names":["Snackbar","alertAutoHideDuration","React","connect","action","Alert","message","onClose","horizontal","vertical","alert","dispatch","hideAlert"],"mappings":"AAAA,OAASA,QAAT,KAAyB,mBAAzB,CACA,OAASC,qBAAT,KAAsC,QAAtC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,SAAxB,CAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAA0B,IAAvBC,CAAAA,OAAuB,MAAvBA,OAAuB,CAAdC,OAAc,MAAdA,OAAc,CACtC,mBACE,oBAAC,QAAD,EACE,YAAY,CAAE,CAAEC,UAAU,CAAE,QAAd,CAAwBC,QAAQ,CAAE,QAAlC,CADhB,CAEE,gBAAgB,CAAER,qBAFpB,CAGE,OAAO,CAAEK,OAHX,CAIE,OAAO,CAAEC,OAJX,CAKE,IAAI,CAAE,CAAC,CAACD,OALV,EADF,CASD,CAVD,CAYA,cAAeH,CAAAA,OAAO,CACpB,mBAAGO,CAAAA,KAAH,OAAGA,KAAH,OAAgB,CACdJ,OAAO,CAAEI,KAAK,CAACJ,OADD,CAAhB,EADoB,CAIpB,SAACK,QAAD,CAAc,CACZ,MAAO,CACLJ,OAAO,CAAE,kBAAM,CACbI,QAAQ,CAACP,MAAM,CAACQ,SAAP,EAAD,CAAR,CACD,CAHI,CAAP,CAKD,CAVmB,CAAP,CAWbP,KAXa,CAAf","sourcesContent":["import { Snackbar } from \"@material-ui/core\";\r\nimport { alertAutoHideDuration } from \"config\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"actions\";\r\n\r\nconst Alert = ({ message, onClose }) => {\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{ horizontal: \"center\", vertical: \"bottom\" }}\r\n      autoHideDuration={alertAutoHideDuration}\r\n      message={message}\r\n      onClose={onClose}\r\n      open={!!message}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  ({ alert }) => ({\r\n    message: alert.message,\r\n  }),\r\n  (dispatch) => {\r\n    return {\r\n      onClose: () => {\r\n        dispatch(action.hideAlert());\r\n      },\r\n    };\r\n  }\r\n)(Alert);\r\n"]},"metadata":{},"sourceType":"module"}
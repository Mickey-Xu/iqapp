{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\TemplateForm\\\\Photo\\\\index.js\";\nimport React, { useRef, useEffect } from 'react';\n\nconst CameraComponent = () => {\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const getCameraStream = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        videoRef.current.srcObject = stream;\n        videoRef.current.play();\n      } catch (err) {\n        console.error(\"Error accessing the camera: \", err);\n      }\n    };\n\n    getCameraStream();\n    return () => {\n      // 清理流\n      const stream = videoRef.current.srcObject;\n\n      if (stream) {\n        const tracks = stream.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n\n  const captureImage = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const video = videoRef.current;\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    const image = canvas.toDataURL('image/png');\n    console.log(image); // 处理或上传图像\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    ref: videoRef,\n    style: {\n      width: '100%',\n      height: 'auto'\n    },\n    autoPlay: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay\",\n    style: {\n      border: '2px solid red',\n      position: 'absolute',\n      top: '40%',\n      left: '10%',\n      width: '80%',\n      height: '20%',\n      pointerEvents: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: captureImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Capture\"));\n};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TemplateForm/Photo/index.js"],"names":["React","useRef","useEffect","CameraComponent","videoRef","canvasRef","getCameraStream","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","play","err","console","error","tracks","getTracks","forEach","track","stop","captureImage","canvas","context","getContext","drawImage","width","height","image","toDataURL","log","position","display","border","top","left","pointerEvents"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nconst CameraComponent = () => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const getCameraStream = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n      } catch (err) {\r\n        console.error(\"Error accessing the camera: \", err);\r\n      }\r\n    };\r\n\r\n    getCameraStream();\r\n\r\n    return () => {\r\n      // 清理流\r\n      const stream = videoRef.current.srcObject;\r\n      if (stream) {\r\n        const tracks = stream.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const captureImage = () => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    const video = videoRef.current;\r\n\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    const image = canvas.toDataURL('image/png');\r\n    console.log(image);  // 处理或上传图像\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100%' }}>\r\n      <video ref={videoRef} style={{ width: '100%', height: 'auto' }} autoPlay />\r\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n      <div className=\"overlay\" style={{\r\n        border: '2px solid red',\r\n        position: 'absolute',\r\n        top: '40%',\r\n        left: '10%',\r\n        width: '80%',\r\n        height: '20%',\r\n        pointerEvents: 'none',\r\n      }}></div>\r\n      <button onClick={captureImage}>Capture</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\FitterOverview\\\\index.js\";\nimport { Box, Grid } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { LocalizeContext } from \"i18n\";\nconst FitterOverview = withStyles(({\n  spacing,\n  palette\n}) => {\n  return {\n    root: {\n      borderBottomColor: palette.grey[\"300\"],\n      borderBottomStyle: \"solid\",\n      borderBottomWidth: 1,\n      padding: spacing(1, 0)\n    }\n  };\n})(({\n  assignedTotal,\n  classes,\n  data,\n  projectNumber\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    fontSize: \"h6.fontSize\",\n    fontWeight: \"fontWeightMedium\",\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, i18n.ISNTAPP_PROJECTLIST_FITTER_ASSIGNED_TOTAL, \": \", assignedTotal), data.map((item, key) => {\n    return /*#__PURE__*/React.createElement(Box, {\n      className: classes.root,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, item.name), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, i18n.INSTAPP_PROJECTLIST_UnitCount, \": \", item.units), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, i18n.ISNTAPP_PROJECTLIST_FITTER_NEED, \": \", item.need), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, i18n.ISNTAPP_PROJECTLIST_FITTER_Qualified, \": \", item.qualified), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, i18n.ISNTAPP_PROJECTLIST_FITTER_Assigned, \": \", item.assigned)));\n  }));\n});\n\nconst mapStateToProps = ({\n  fittersAssignmentTransfer,\n  fittersDemand,\n  fittersCertification,\n  orders,\n  productFamilies\n}, {\n  projectNumber\n}) => {\n  let productFamilyList = [];\n  Object.keys(orders).forEach(item => {\n    if (orders[item].projectNumber === projectNumber) {\n      productFamilyList.push(orders[item].productFamily);\n    }\n  });\n  const productFamilyCountList = productFamilyList.reduce(function (prev, next) {\n    prev[next] = prev[next] + 1 || 1;\n    return prev;\n  }, {});\n\n  const currentFamilyAssigned = productFamily => {\n    let assignedCount = 0;\n    Object.keys(fittersCertification).forEach(key => {\n      Object.keys(fittersAssignmentTransfer[projectNumber] ? fittersAssignmentTransfer[projectNumber] : {}).forEach(item => {\n        if (fittersAssignmentTransfer[projectNumber][item].sqmNr === key && fittersCertification[key].productFamily.includes(productFamily)) {\n          assignedCount += 1;\n        }\n      });\n    });\n    return assignedCount;\n  };\n\n  return {\n    data: Object.keys(productFamilyCountList).map(item => {\n      const name = productFamilies[item].name;\n      const units = productFamilyCountList[item];\n      return {\n        name: name,\n        units: units,\n        need: units * (fittersDemand[item] ? fittersDemand[item].fittersNeed : 1),\n        qualified: Object.keys(fittersCertification).filter(key => {\n          return fittersCertification[key].productFamily.indexOf(item) !== -1;\n        }).length,\n        assigned: currentFamilyAssigned(item)\n      };\n    }),\n    assignedTotal: fittersAssignmentTransfer[projectNumber] ? fittersAssignmentTransfer[projectNumber].length : 0\n  };\n};\n\nexport default connect(mapStateToProps)(FitterOverview);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/FitterOverview/index.js"],"names":["Box","Grid","withStyles","React","connect","LocalizeContext","FitterOverview","spacing","palette","root","borderBottomColor","grey","borderBottomStyle","borderBottomWidth","padding","assignedTotal","classes","data","projectNumber","i18n","useContext","ISNTAPP_PROJECTLIST_FITTER_ASSIGNED_TOTAL","map","item","key","name","INSTAPP_PROJECTLIST_UnitCount","units","ISNTAPP_PROJECTLIST_FITTER_NEED","need","ISNTAPP_PROJECTLIST_FITTER_Qualified","qualified","ISNTAPP_PROJECTLIST_FITTER_Assigned","assigned","mapStateToProps","fittersAssignmentTransfer","fittersDemand","fittersCertification","orders","productFamilies","productFamilyList","Object","keys","forEach","push","productFamily","productFamilyCountList","reduce","prev","next","currentFamilyAssigned","assignedCount","sqmNr","includes","fittersNeed","filter","indexOf","length"],"mappings":"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","sourcesContent":["import { Box, Grid } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LocalizeContext } from \"i18n\";\r\n\r\nconst FitterOverview = withStyles(({ spacing, palette }) => {\r\n  return {\r\n    root: {\r\n      borderBottomColor: palette.grey[\"300\"],\r\n      borderBottomStyle: \"solid\",\r\n      borderBottomWidth: 1,\r\n      padding: spacing(1, 0),\r\n    },\r\n  };\r\n})(({ assignedTotal, classes, data, projectNumber }) => {\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  return (\r\n    <Box>\r\n      <Box fontSize=\"h6.fontSize\" fontWeight=\"fontWeightMedium\" my={2}>\r\n        {i18n.ISNTAPP_PROJECTLIST_FITTER_ASSIGNED_TOTAL}: {assignedTotal}\r\n      </Box>\r\n      {data.map((item, key) => {\r\n        return (\r\n          <Box className={classes.root} key={key}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={4}>\r\n                {item.name}\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                {i18n.INSTAPP_PROJECTLIST_UnitCount}: {item.units}\r\n              </Grid>\r\n              <Grid item xs={4}></Grid>\r\n            </Grid>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={4}>\r\n                {i18n.ISNTAPP_PROJECTLIST_FITTER_NEED}: {item.need}\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                {i18n.ISNTAPP_PROJECTLIST_FITTER_Qualified}: {item.qualified}\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                {i18n.ISNTAPP_PROJECTLIST_FITTER_Assigned}: {item.assigned}\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n});\r\n\r\nconst mapStateToProps = (\r\n  {\r\n    fittersAssignmentTransfer,\r\n    fittersDemand,\r\n    fittersCertification,\r\n    orders,\r\n    productFamilies,\r\n  },\r\n  { projectNumber }\r\n) => {\r\n  let productFamilyList = [];\r\n\r\n  Object.keys(orders).forEach((item) => {\r\n    if (orders[item].projectNumber === projectNumber) {\r\n      productFamilyList.push(orders[item].productFamily);\r\n    }\r\n  });\r\n\r\n  const productFamilyCountList = productFamilyList.reduce(function (\r\n    prev,\r\n    next\r\n  ) {\r\n    prev[next] = prev[next] + 1 || 1;\r\n    return prev;\r\n  },\r\n  {});\r\n\r\n  const currentFamilyAssigned = (productFamily) => {\r\n    let assignedCount = 0;\r\n    Object.keys(fittersCertification).forEach((key) => {\r\n      Object.keys(\r\n        fittersAssignmentTransfer[projectNumber]\r\n          ? fittersAssignmentTransfer[projectNumber]\r\n          : {}\r\n      ).forEach((item) => {\r\n        if (\r\n          fittersAssignmentTransfer[projectNumber][item].sqmNr === key &&\r\n          fittersCertification[key].productFamily.includes(productFamily)\r\n        ) {\r\n          assignedCount += 1;\r\n        }\r\n      });\r\n    });\r\n    return assignedCount;\r\n  };\r\n\r\n  return {\r\n    data: Object.keys(productFamilyCountList).map((item) => {\r\n      const name = productFamilies[item].name;\r\n      const units = productFamilyCountList[item];\r\n      return {\r\n        name: name,\r\n        units: units,\r\n        need:\r\n          units * (fittersDemand[item] ? fittersDemand[item].fittersNeed : 1),\r\n        qualified: Object.keys(fittersCertification).filter((key) => {\r\n          return fittersCertification[key].productFamily.indexOf(item) !== -1;\r\n        }).length,\r\n        assigned: currentFamilyAssigned(item),\r\n      };\r\n    }),\r\n    assignedTotal: fittersAssignmentTransfer[projectNumber]\r\n      ? fittersAssignmentTransfer[projectNumber].length\r\n      : 0,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(FitterOverview);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\TemplatePage\\\\index.js\";\nimport { Box, Button } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as action from \"actions\";\nimport ConfirmModal from \"components/ConfirmModal\";\nimport { TitlePage } from \"components/TemplateForm/TitlePage\";\nimport { LocalizeContext } from \"i18n\";\nimport { Base64 } from \"js-base64\";\nimport { deserialize, serialize } from \"js/sfdl\";\nimport { componentGenerator, initProps, isVisible, tmplLangMapper } from \"js/templateFormUtil\";\nimport { deleteDraftFromLocal, isFormUpdated, verify, removeNotVisibleFields } from \"js/util\";\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport * as repo from \"js/fetch\";\nimport FilterIcon from \"../../assets/img/filter.png\";\nimport TemplateFilter from \"../../components/TemplateFilter\";\nimport { offlineSaving } from \"js/util\";\nimport { deleteOfflineFromLocal } from \"js/util\";\nconst TemplatePage = withStyles(({\n  spacing\n}) => {\n  return {\n    root: {\n      width: \"100%\",\n      fontWeight: 500,\n      position: \"fixed\",\n      top: \"54px\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      backgroundColor: \" #efe9e9\",\n      borderBottom: \"1px solid #eae9e9\",\n      zIndex: \"1\"\n    },\n    btn: {\n      color: \"#123db5\",\n      textTransform: \"capitalize\",\n      marginRight: spacing(2)\n    },\n    container: {\n      margin: spacing(7, 2, 0, 2)\n    }\n  };\n})(({\n  description,\n  savePDF,\n  classes,\n  formState,\n  fieldsState,\n  getTemplateForm,\n  templateFormData,\n  initTemplateForm,\n  storeCurrentParams,\n  activityNo,\n  orderNo,\n  projectNumber,\n  fo: foe,\n  region,\n  prctr: branch,\n  saveAndReturn,\n  removeTemplateState,\n  productFamily,\n  productLine,\n  language\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  let {\n    documentNo,\n    documentPart\n  } = useParams();\n  const [initData, setInitData] = useState(null);\n  const [dialog, setDialog] = React.useState(false);\n  const [checked, setChecked] = React.useState([1]);\n  const [templateForm, setTemplateForm] = useState({\n    fields: []\n  });\n  const key = `${projectNumber}-${orderNo}-${activityNo}`;\n\n  const useInitForm = () => {\n    useEffect(() => {\n      getTemplateForm({\n        documentNo,\n        documentPart\n      }, {\n        ProjectNo: projectNumber,\n        orderNo,\n        activityNo,\n        description,\n        branch,\n        foe,\n        region\n      }, {\n        activityNo,\n        productFamily,\n        productLine,\n        language\n      }).then(res => {\n        if (!res) {\n          return false;\n        }\n\n        initTemplateForm(documentNo, documentPart, activityNo, productFamily, productLine, language, res.value, {\n          orderNo\n        }).then(data => {\n          setInitData(data);\n        });\n\n        if (res.code === 2) {\n          alert(\"模板有更新，之前草稿已被清理\");\n          deleteDraftFromLocal({\n            documentNo,\n            documentPart\n          });\n        }\n      });\n      storeCurrentParams({\n        documentNo,\n        documentPart,\n        activityNo,\n        productFamily,\n        productLine,\n        language\n      });\n    }, []);\n  };\n\n  useInitForm();\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n\n  const closeMenu = () => {\n    removeTemplateState(documentNo, documentPart, activityNo, productFamily, productLine, language);\n    history.goBack();\n    setOpen(false);\n  };\n\n  const submit = e => {\n    alert('9999');\n    const result = verify(templateFormData.fields);\n\n    if (result) {\n      let data = {\n        projectNo: projectNumber,\n        orderNo: orderNo,\n        activityNo: activityNo,\n        description: description,\n        branch,\n        foe,\n        region,\n        override: true,\n        form: Base64.encode(serialize(removeNotVisibleFields(templateFormData)))\n      };\n      let draftData = {\n        projectNo: projectNumber,\n        orderNo: orderNo,\n        activityNo: activityNo,\n        description: description,\n        branch: branch,\n        foe: foe,\n        region: region,\n        form: Base64.encode(serialize(templateFormData))\n      };\n      savePDF(data, draftData, {\n        documentNo,\n        documentPart,\n        activityNo,\n        productFamily,\n        productLine,\n        language\n      });\n      deleteOfflineFromLocal(key);\n    }\n  };\n\n  const goBack = () => {\n    if (isFormUpdated(templateFormData, deserialize(Base64.decode(initData)))) {\n      setOpen(true);\n    } else {\n      removeTemplateState(documentNo, documentPart, activityNo, productFamily, productLine, language);\n      history.goBack();\n    }\n  };\n\n  const saveDraft = type => {\n    setOpen(false);\n    let data = {\n      projectNo: projectNumber,\n      orderNo: orderNo,\n      activityNo: activityNo,\n      description: description,\n      branch: branch,\n      foe: foe,\n      region: region,\n      form: Base64.encode(serialize(templateFormData))\n    };\n    const currentParams = {\n      documentNo,\n      documentPart\n    };\n\n    if (type === \"save\") {\n      offlineSaving(templateFormData, key);\n      saveAndReturn(data, currentParams, {\n        productFamily,\n        productLine,\n        language\n      }).then(res => {\n        setInitData(data.form);\n        res.code === 0 ? alert('当前网络不佳，已为您离线存储') : alert(\"草稿保存成功\");\n      });\n    } else {\n      saveAndReturn(data, currentParams, {\n        productFamily,\n        productLine,\n        language\n      }).then(() => {\n        history.goBack();\n        removeTemplateState(documentNo, documentPart, activityNo, productFamily, productLine, language);\n      });\n    }\n  };\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const confirmFilter = () => {\n    if (checked.length > 1) {\n      const checkedId = [];\n      checked.forEach(item => (item === null || item === void 0 ? void 0 : item.id) && checkedId.push(item.id));\n      const fields = [];\n      checkedId.forEach(item => {\n        templateFormData[\"fields\"].forEach(field => {\n          field.settings.tagRules.forEach(tagRule => {\n            item === tagRule.tagId && fields.push(field);\n          });\n        });\n      });\n      console.log(fields);\n      setTemplateForm({ ...templateFormData,\n        fields: fields\n      });\n    } else {\n      setTemplateForm(templateFormData);\n    }\n\n    setDialog(false);\n  };\n\n  return /*#__PURE__*/React.createElement(PrimaryLayout, {\n    title: i18n.ISNTAPP_TEMPLATE,\n    isDirectReturn: false,\n    isFetchAll: false,\n    goBack: goBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }\n  }, (templateFormData === null || templateFormData === void 0 ? void 0 : templateFormData.form[\"settings\"][\"tagUniverse\"].length) > 0 ? /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setDialog(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 75\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: FilterIcon,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.btn,\n    onClick: () => saveDraft(\"save\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }, i18n.ISNTAPP_SAVE_AS_PDF), /*#__PURE__*/React.createElement(Button, {\n    className: classes.btn,\n    onClick: () => submit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }\n  }, i18n.ISNTAPP_TEMPLATE_UPLOAD))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TitlePage, Object.assign({}, formState, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 11\n    }\n  })), (checked.length > 1 ? templateForm[\"fields\"] : fieldsState).map(field => {\n    return isVisible(field) ? componentGenerator(field, initProps(field, language)) : null;\n  })), /*#__PURE__*/React.createElement(ConfirmModal, {\n    open: open,\n    onClose: closeMenu,\n    handleClick: () => saveDraft(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }\n  }, i18n.INSTALLATION_DO_YOU_WANGT_TO_SAVE_THE_DRAFT), /*#__PURE__*/React.createElement(TemplateFilter, {\n    templateForm: templateFormData,\n    open: dialog,\n    setOpen: setDialog,\n    handleToggle: handleToggle,\n    checked: checked,\n    confirmFilter: confirmFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }));\n});\n\nconst mapStateToProps = ({\n  templateForm,\n  templates,\n  orders\n}, ownProps) => {\n  var _templates$activityNo;\n\n  let {\n    activityNo,\n    documentPart,\n    orderNo,\n    projectNumber,\n    documentNo,\n    productFamily,\n    productLine,\n    language\n  } = ownProps.match.params;\n  const key = documentNo + \"-\" + documentPart + \"-\" + activityNo + \"-\" + productFamily + \"-\" + productLine + \"-\" + language;\n  let formState = {};\n  let fieldsState = [];\n\n  if (templateForm[key]) {\n    var _templateForm$key$for, _templateForm$key$for2, _templateForm$key$for3, _templateForm$key$for4, _templateForm$key$for5, _templateForm$key$for6, _templateForm$key$for7, _templateForm$key$for8;\n\n    formState = {\n      title: ((_templateForm$key$for = templateForm[key].form) === null || _templateForm$key$for === void 0 ? void 0 : _templateForm$key$for.settings.titleI18n[tmplLangMapper[language]]) ? (_templateForm$key$for2 = templateForm[key].form) === null || _templateForm$key$for2 === void 0 ? void 0 : _templateForm$key$for2.settings.titleI18n[tmplLangMapper[language]] : (_templateForm$key$for3 = templateForm[key].form) === null || _templateForm$key$for3 === void 0 ? void 0 : _templateForm$key$for3.settings.titleI18n.English,\n      description: ((_templateForm$key$for4 = templateForm[key].form) === null || _templateForm$key$for4 === void 0 ? void 0 : _templateForm$key$for4.settings.descriptionI18n[tmplLangMapper[language]]) ? (_templateForm$key$for5 = templateForm[key].form) === null || _templateForm$key$for5 === void 0 ? void 0 : _templateForm$key$for5.settings.descriptionI18n[tmplLangMapper[language]] : (_templateForm$key$for6 = templateForm[key].form) === null || _templateForm$key$for6 === void 0 ? void 0 : _templateForm$key$for6.settings.descriptionI18n.English,\n      logos: (_templateForm$key$for7 = templateForm[key].form) === null || _templateForm$key$for7 === void 0 ? void 0 : _templateForm$key$for7.settings.logos,\n      identifier: (_templateForm$key$for8 = templateForm[key].form) === null || _templateForm$key$for8 === void 0 ? void 0 : _templateForm$key$for8.settings.identifier\n    };\n    fieldsState = templateForm[key].fields;\n  }\n\n  let templateFormData = templateForm[key];\n  let description = (_templates$activityNo = templates[activityNo]) === null || _templates$activityNo === void 0 ? void 0 : _templates$activityNo.find(item => item.documentPart === documentPart && item.documentNo === documentNo && item.productFamily === (productFamily === \"null\" ? null : productFamily) && item.productLine === (productLine === \"null\" ? null : productLine) && item.language === language).documentDescription;\n  let order = orders === null || orders === void 0 ? void 0 : orders[orderNo];\n  return {\n    formState,\n    fieldsState,\n    templateFormData,\n    activityNo,\n    orderNo,\n    projectNumber,\n    description,\n    fo: order === null || order === void 0 ? void 0 : order.fo,\n    region: order === null || order === void 0 ? void 0 : order.region,\n    prctr: order === null || order === void 0 ? void 0 : order.prctr,\n    productFamily,\n    productLine,\n    language\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    storeCurrentParams: param => {\n      dispatch(action.storeCurrentParams(param));\n    },\n    getTemplateForm: (param, draftParam, expendParam) => {\n      dispatch(action.fetchAll(repo.type.CACHE));\n      return dispatch(action.fetchTemplateForm(param, draftParam, expendParam));\n    },\n    initTemplateForm: (documentNo, documentPart, activityNo, productFamily, productLine, language, data, routeParams) => {\n      return dispatch(action.initTemplateForm(documentNo, documentPart, activityNo, productFamily, productLine, language, data, routeParams));\n    },\n    savePDF: (data, draftData, param) => {\n      dispatch(action.uploadDocumentForm(data, draftData, param));\n    },\n    saveAndReturn: (data, currentParams, extendParam) => {\n      return dispatch(action.saveDraft(data, currentParams, extendParam));\n    },\n    removeTemplateState: (documentNo, documentPart, activityNo, productFamily, productLine, language) => {\n      dispatch(action.removeTemplateFormState({\n        documentNo,\n        documentPart,\n        activityNo,\n        productFamily,\n        productLine,\n        language\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplatePage);\n/*\r\n离线表单\r\n  1.如果本地存在 则先用本地离线表单\r\n  2.没有则用草稿\r\n  3.草稿没有 用接口模板\r\n\r\n  反之 如果保存了离线表单  远端草稿发生更新 本地离线表单则不能及时更新  （因为优先本地离线表单）\r\n\r\n\r\n\r\n  什么情况下草稿会更新？？？\r\n*/","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/TemplatePage/index.js"],"names":["Box","Button","withStyles","action","ConfirmModal","TitlePage","LocalizeContext","Base64","deserialize","serialize","componentGenerator","initProps","isVisible","tmplLangMapper","deleteDraftFromLocal","isFormUpdated","verify","removeNotVisibleFields","PrimaryLayout","React","useEffect","useState","connect","useHistory","useParams","repo","FilterIcon","TemplateFilter","offlineSaving","deleteOfflineFromLocal","TemplatePage","spacing","root","width","fontWeight","position","top","display","justifyContent","backgroundColor","borderBottom","zIndex","btn","color","textTransform","marginRight","container","margin","description","savePDF","classes","formState","fieldsState","getTemplateForm","templateFormData","initTemplateForm","storeCurrentParams","activityNo","orderNo","projectNumber","fo","foe","region","prctr","branch","saveAndReturn","removeTemplateState","productFamily","productLine","language","i18n","useContext","documentNo","documentPart","initData","setInitData","dialog","setDialog","checked","setChecked","templateForm","setTemplateForm","fields","key","useInitForm","ProjectNo","then","res","value","data","code","alert","history","open","setOpen","closeMenu","goBack","submit","e","result","projectNo","override","form","encode","draftData","decode","saveDraft","type","currentParams","handleToggle","currentIndex","indexOf","newChecked","push","splice","confirmFilter","length","checkedId","forEach","item","id","field","settings","tagRules","tagRule","tagId","console","log","ISNTAPP_TEMPLATE","ISNTAPP_SAVE_AS_PDF","ISNTAPP_TEMPLATE_UPLOAD","map","INSTALLATION_DO_YOU_WANGT_TO_SAVE_THE_DRAFT","mapStateToProps","templates","orders","ownProps","match","params","title","titleI18n","English","descriptionI18n","logos","identifier","find","documentDescription","order","mapDispatchToProps","dispatch","param","draftParam","expendParam","fetchAll","CACHE","fetchTemplateForm","routeParams","uploadDocumentForm","extendParam","removeTemplateFormState"],"mappings":"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","sourcesContent":["import { Box, Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as action from \"actions\";\r\nimport ConfirmModal from \"components/ConfirmModal\";\r\nimport { TitlePage } from \"components/TemplateForm/TitlePage\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport { Base64 } from \"js-base64\";\r\nimport { deserialize, serialize } from \"js/sfdl\";\r\nimport {\r\n  componentGenerator,\r\n  initProps,\r\n  isVisible,\r\n  tmplLangMapper,\r\n} from \"js/templateFormUtil\";\r\nimport {\r\n  deleteDraftFromLocal,\r\n  isFormUpdated,\r\n  verify,\r\n  removeNotVisibleFields,\r\n} from \"js/util\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport * as repo from \"js/fetch\";\r\nimport FilterIcon from \"../../assets/img/filter.png\";\r\nimport TemplateFilter from \"../../components/TemplateFilter\"\r\nimport { offlineSaving } from \"js/util\";\r\nimport { deleteOfflineFromLocal } from \"js/util\";\r\n\r\nconst TemplatePage = withStyles(({ spacing }) => {\r\n  return {\r\n    root: {\r\n      width: \"100%\",\r\n      fontWeight: 500,\r\n      position: \"fixed\",\r\n      top: \"54px\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      backgroundColor: \" #efe9e9\",\r\n      borderBottom: \"1px solid #eae9e9\",\r\n      zIndex: \"1\",\r\n    },\r\n    btn: {\r\n      color: \"#123db5\",\r\n      textTransform: \"capitalize\",\r\n      marginRight: spacing(2),\r\n    },\r\n    container: {\r\n      margin: spacing(7, 2, 0, 2),\r\n    },\r\n  };\r\n})(\r\n  ({\r\n    description,\r\n    savePDF,\r\n    classes,\r\n    formState,\r\n    fieldsState,\r\n    getTemplateForm,\r\n    templateFormData,\r\n    initTemplateForm,\r\n    storeCurrentParams,\r\n    activityNo,\r\n    orderNo,\r\n    projectNumber,\r\n    fo: foe,\r\n    region,\r\n    prctr: branch,\r\n    saveAndReturn,\r\n    removeTemplateState,\r\n    productFamily,\r\n    productLine,\r\n    language,\r\n  }) => {\r\n    const i18n = React.useContext(LocalizeContext);\r\n    let { documentNo, documentPart } = useParams();\r\n    const [initData, setInitData] = useState(null);\r\n    const [dialog, setDialog] = React.useState(false);\r\n    const [checked, setChecked] = React.useState([1]);\r\n    const [templateForm, setTemplateForm] = useState({ fields:[]});\r\n    const key = `${projectNumber}-${orderNo}-${activityNo}`;\r\n\r\n    const useInitForm = () => {\r\n      useEffect(() => {\r\n        getTemplateForm(\r\n          {\r\n            documentNo,\r\n            documentPart,\r\n          },\r\n          {\r\n            ProjectNo: projectNumber,\r\n            orderNo,\r\n            activityNo,\r\n            description,\r\n            branch,\r\n            foe,\r\n            region,\r\n          },\r\n          {\r\n            activityNo,\r\n            productFamily,\r\n            productLine,\r\n            language,\r\n          }\r\n        ).then((res) => {\r\n          if (!res) {\r\n            return false\r\n          }\r\n          initTemplateForm(\r\n            documentNo,\r\n            documentPart,\r\n            activityNo,\r\n            productFamily,\r\n            productLine,\r\n            language,\r\n            res.value,\r\n            { orderNo }\r\n          ).then((data) => {\r\n            setInitData(data);\r\n          });\r\n          if (res.code === 2) {\r\n            alert(\"模板有更新，之前草稿已被清理\");\r\n            deleteDraftFromLocal({\r\n              documentNo,\r\n              documentPart,\r\n            });\r\n          }\r\n        });\r\n\r\n        storeCurrentParams({\r\n          documentNo,\r\n          documentPart,\r\n          activityNo,\r\n          productFamily,\r\n          productLine,\r\n          language,\r\n        });\r\n      }, []);\r\n    };\r\n\r\n    useInitForm();\r\n\r\n    const history = useHistory();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const closeMenu = () => {\r\n      removeTemplateState(\r\n        documentNo,\r\n        documentPart,\r\n        activityNo,\r\n        productFamily,\r\n        productLine,\r\n        language\r\n      );\r\n      history.goBack();\r\n      setOpen(false);\r\n    };\r\n\r\n    const submit = (e) => {\r\n      alert('9999')\r\n      const result = verify(templateFormData.fields);\r\n      if (result) {\r\n        let data = {\r\n          projectNo: projectNumber,\r\n          orderNo: orderNo,\r\n          activityNo: activityNo,\r\n          description: description,\r\n          branch,\r\n          foe,\r\n          region,\r\n          override: true,\r\n          form: Base64.encode(\r\n            serialize(removeNotVisibleFields(templateFormData))\r\n          ),\r\n        };\r\n        let draftData = {\r\n          projectNo: projectNumber,\r\n          orderNo: orderNo,\r\n          activityNo: activityNo,\r\n          description: description,\r\n          branch: branch,\r\n          foe: foe,\r\n          region: region,\r\n          form: Base64.encode(serialize(templateFormData)),\r\n        };\r\n        savePDF(data, draftData, {\r\n          documentNo,\r\n          documentPart,\r\n          activityNo,\r\n          productFamily,\r\n          productLine,\r\n          language,\r\n        });\r\n        deleteOfflineFromLocal(key)\r\n      }\r\n    };\r\n\r\n    const goBack = () => {\r\n      if (\r\n        isFormUpdated(templateFormData, deserialize(Base64.decode(initData)))\r\n      ) {\r\n        setOpen(true);\r\n      } else {\r\n        removeTemplateState(\r\n          documentNo,\r\n          documentPart,\r\n          activityNo,\r\n          productFamily,\r\n          productLine,\r\n          language\r\n        );\r\n        history.goBack();\r\n      }\r\n    };\r\n\r\n    const saveDraft = (type) => {\r\n      setOpen(false);\r\n      let data = {\r\n        projectNo: projectNumber,\r\n        orderNo: orderNo,\r\n        activityNo: activityNo,\r\n        description: description,\r\n        branch: branch,\r\n        foe: foe,\r\n        region: region,\r\n        form: Base64.encode(serialize(templateFormData)),\r\n      };\r\n\r\n      const currentParams = {\r\n        documentNo,\r\n        documentPart,\r\n      };\r\n\r\n      if (type === \"save\") {\r\n        offlineSaving(templateFormData, key)\r\n        saveAndReturn(data, currentParams, {\r\n          productFamily,\r\n          productLine,\r\n          language,\r\n        }).then((res) => {\r\n          setInitData(data.form);\r\n          res.code === 0 ? alert('当前网络不佳，已为您离线存储') : alert(\"草稿保存成功\");\r\n        });\r\n      } else {\r\n        saveAndReturn(data, currentParams, {\r\n          productFamily,\r\n          productLine,\r\n          language,\r\n        }).then(() => {\r\n          history.goBack();\r\n          removeTemplateState(\r\n            documentNo,\r\n            documentPart,\r\n            activityNo,\r\n            productFamily,\r\n            productLine,\r\n            language\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    const handleToggle = (value) => () => {\r\n      const currentIndex = checked.indexOf(value);\r\n      const newChecked = [...checked];\r\n      if (currentIndex === -1) {\r\n        newChecked.push(value);\r\n      } else {\r\n        newChecked.splice(currentIndex, 1);\r\n      }\r\n      setChecked(newChecked);\r\n    };\r\n\r\n    const confirmFilter = () => {      \r\n      if (checked.length > 1) {\r\n        const checkedId = [];\r\n        checked.forEach((item) => item?.id && checkedId.push(item.id))\r\n        const fields = []\r\n        checkedId.forEach(item => {\r\n          templateFormData[\"fields\"].forEach((field) => {\r\n            field.settings.tagRules.forEach((tagRule) => {\r\n              item === tagRule.tagId && fields.push(field)\r\n            })\r\n          })\r\n        });\r\n        console.log(fields)\r\n        setTemplateForm({ ...templateFormData, fields: fields })\r\n      } else {\r\n        setTemplateForm(templateFormData)\r\n      }\r\n      setDialog(false)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <PrimaryLayout\r\n        title={i18n.ISNTAPP_TEMPLATE}\r\n        isDirectReturn={false}\r\n        isFetchAll={false}\r\n        goBack={goBack}\r\n      >\r\n        <Box className={classes.root}>\r\n          {templateFormData?.form[\"settings\"][\"tagUniverse\"].length > 0 ? <Button\r\n            onClick={() => setDialog(true)}\r\n          >\r\n            <img src={FilterIcon} alt=\"\" />\r\n          </Button>:<Box></Box>}\r\n          <Box>\r\n            <Button className={classes.btn} onClick={() => saveDraft(\"save\")}>\r\n              {i18n.ISNTAPP_SAVE_AS_PDF}\r\n            </Button>\r\n            <Button className={classes.btn} onClick={() => submit()}>\r\n              {i18n.ISNTAPP_TEMPLATE_UPLOAD}\r\n            </Button>\r\n            </Box>\r\n        </Box>\r\n        <Box className={classes.container}>\r\n          <TitlePage {...formState} />\r\n          {(checked.length > 1 ? templateForm[\"fields\"] : fieldsState).map((field) => {\r\n            return isVisible(field)\r\n              ? componentGenerator(field, initProps(field, language))\r\n              : null;\r\n          })}\r\n        </Box>\r\n        <ConfirmModal\r\n          open={open}\r\n          onClose={closeMenu}\r\n          handleClick={() => saveDraft()}\r\n        >\r\n          {i18n.INSTALLATION_DO_YOU_WANGT_TO_SAVE_THE_DRAFT}\r\n        </ConfirmModal>\r\n        <TemplateFilter\r\n          templateForm={templateFormData}\r\n          open={dialog}\r\n          setOpen={setDialog}\r\n          handleToggle={handleToggle}\r\n          checked={checked}\r\n          confirmFilter={confirmFilter}\r\n        />\r\n      </PrimaryLayout>\r\n    );\r\n  }\r\n);\r\n\r\nconst mapStateToProps = ({ templateForm, templates, orders }, ownProps) => {\r\n  let {\r\n    activityNo,\r\n    documentPart,\r\n    orderNo,\r\n    projectNumber,\r\n    documentNo,\r\n    productFamily,\r\n    productLine,\r\n    language,\r\n  } = ownProps.match.params;\r\n\r\n  const key =\r\n    documentNo +\r\n    \"-\" +\r\n    documentPart +\r\n    \"-\" +\r\n    activityNo +\r\n    \"-\" +\r\n    productFamily +\r\n    \"-\" +\r\n    productLine +\r\n    \"-\" +\r\n    language;\r\n\r\n  let formState = {};\r\n  let fieldsState = [];\r\n  if (templateForm[key]) {\r\n    formState = {\r\n      title: templateForm[key].form?.settings.titleI18n[\r\n        tmplLangMapper[language]\r\n      ]\r\n        ? templateForm[key].form?.settings.titleI18n[tmplLangMapper[language]]\r\n        : templateForm[key].form?.settings.titleI18n.English,\r\n      description: templateForm[key].form?.settings.descriptionI18n[\r\n        tmplLangMapper[language]\r\n      ]\r\n        ? templateForm[key].form?.settings.descriptionI18n[\r\n            tmplLangMapper[language]\r\n          ]\r\n        : templateForm[key].form?.settings.descriptionI18n.English,\r\n      logos: templateForm[key].form?.settings.logos,\r\n      identifier: templateForm[key].form?.settings.identifier,\r\n    };\r\n    fieldsState = templateForm[key].fields;\r\n  }\r\n\r\n  let templateFormData = templateForm[key];\r\n\r\n  let description = templates[activityNo]?.find(\r\n    (item) =>\r\n      item.documentPart === documentPart &&\r\n      item.documentNo === documentNo &&\r\n      item.productFamily ===\r\n        (productFamily === \"null\" ? null : productFamily) &&\r\n      item.productLine === (productLine === \"null\" ? null : productLine) &&\r\n      item.language === language\r\n  ).documentDescription;\r\n  let order = orders?.[orderNo];\r\n  return {\r\n    formState,\r\n    fieldsState,\r\n    templateFormData,\r\n    activityNo,\r\n    orderNo,\r\n    projectNumber,\r\n    description,\r\n    fo: order?.fo,\r\n    region: order?.region,\r\n    prctr: order?.prctr,\r\n    productFamily,\r\n    productLine,\r\n    language,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    storeCurrentParams: (param) => {\r\n      dispatch(action.storeCurrentParams(param));\r\n    },\r\n    getTemplateForm: (param, draftParam, expendParam) => {\r\n      dispatch(action.fetchAll(repo.type.CACHE));\r\n      return dispatch(action.fetchTemplateForm(param, draftParam, expendParam));\r\n    },\r\n    initTemplateForm: (\r\n      documentNo,\r\n      documentPart,\r\n      activityNo,\r\n      productFamily,\r\n      productLine,\r\n      language,\r\n      data,\r\n      routeParams\r\n    ) => {\r\n      return dispatch(\r\n        action.initTemplateForm(\r\n          documentNo,\r\n          documentPart,\r\n          activityNo,\r\n          productFamily,\r\n          productLine,\r\n          language,\r\n          data,\r\n          routeParams\r\n        )\r\n      );\r\n    },\r\n    savePDF: (data, draftData, param) => {\r\n      dispatch(action.uploadDocumentForm(data, draftData, param));\r\n    },\r\n    saveAndReturn: (data, currentParams, extendParam) => {\r\n      return dispatch(action.saveDraft(data, currentParams, extendParam));\r\n    },\r\n    removeTemplateState: (\r\n      documentNo,\r\n      documentPart,\r\n      activityNo,\r\n      productFamily,\r\n      productLine,\r\n      language\r\n    ) => {\r\n      dispatch(\r\n        action.removeTemplateFormState({\r\n          documentNo,\r\n          documentPart,\r\n          activityNo,\r\n          productFamily,\r\n          productLine,\r\n          language,\r\n        })\r\n      );\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplatePage);\r\n/*\r\n离线表单\r\n  1.如果本地存在 则先用本地离线表单\r\n  2.没有则用草稿\r\n  3.草稿没有 用接口模板\r\n\r\n  反之 如果保存了离线表单  远端草稿发生更新 本地离线表单则不能及时更新  （因为优先本地离线表单）\r\n\r\n\r\n\r\n  什么情况下草稿会更新？？？\r\n*/"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\components\\\\FitterAssignment\\\\index.js\";\nimport { Box, Button, Checkbox, Grid } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as action from \"actions\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { LocalizeContext } from \"i18n\";\nconst FitterAssignment = withStyles(({\n  spacing,\n  palette\n}) => {\n  return {\n    root: {\n      display: \"flex\",\n      borderBottomColor: palette.grey[\"300\"],\n      borderBottomStyle: \"solid\",\n      borderBottomWidth: 1,\n      padding: spacing(1, 0)\n    }\n  };\n})(({\n  defaultAssignedList,\n  classes,\n  data,\n  projectNumber,\n  confirm\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  const [fitterConfirmList, setFitterConfirmList] = useState(defaultAssignedList);\n\n  const assignedList = sqmNr => {\n    let newFitterConfirmList = fitterConfirmList.slice(0);\n    const fitterIndex = newFitterConfirmList.indexOf(sqmNr);\n\n    if (fitterIndex > -1) {\n      newFitterConfirmList.splice(fitterIndex, 1);\n    } else {\n      newFitterConfirmList.push(sqmNr);\n    }\n\n    setFitterConfirmList(newFitterConfirmList);\n  };\n\n  return /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    textAlign: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    style: {\n      textTransform: \"none\"\n    },\n    color: \"primary\",\n    onClick: () => {\n      confirm({\n        projectNo: projectNumber,\n        sqmNr: fitterConfirmList\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, i18n.GENERAL_CONFIRM)), data.map((item, key) => {\n    return /*#__PURE__*/React.createElement(Box, {\n      className: classes.root,\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 0,\n      style: {\n        flex: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, item.fitterName), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, item.sqmNr)), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, item.fitterRole), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, item.productFamilyName))), /*#__PURE__*/React.createElement(Box, {\n      style: {\n        flex: \"auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: fitterConfirmList.includes(item.sqmNr),\n      onChange: () => {\n        assignedList(item.sqmNr);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    })));\n  }));\n});\n\nconst mapStateToProps = ({\n  fittersAssignmentTransfer,\n  fittersCertification,\n  productFamilies\n}, {\n  projectNumber\n}) => {\n  let fitterAssignmentList = [];\n  let defaultAssignedList = [];\n\n  const joinProductFramilyName = item => {\n    let framilyNames = \"\";\n    let bias = \"\";\n    const productFamilyLists = item.productFamily.split(\"/\");\n\n    if (productFamilyLists.length > 1) {\n      productFamilyLists.forEach((key, index) => {\n        if (index !== 0) {\n          bias = \"/\";\n        }\n\n        framilyNames += bias + productFamilies[key].name;\n      });\n    } else {\n      framilyNames = productFamilies[item.productFamily].name;\n    }\n\n    return framilyNames;\n  };\n\n  Object.keys(fittersCertification).forEach(key => {\n    if (fittersCertification[key].fitterRole === \"TL\") {\n      fittersCertification[key].productFamilyName = joinProductFramilyName(fittersCertification[key]);\n      fitterAssignmentList.unshift(fittersCertification[key]);\n    } else {\n      fittersCertification[key].productFamilyName = joinProductFramilyName(fittersCertification[key]);\n      fitterAssignmentList.push(fittersCertification[key]);\n    }\n  });\n  (fittersAssignmentTransfer[projectNumber] ? fittersAssignmentTransfer[projectNumber] : []).forEach(item => {\n    defaultAssignedList.push(item.sqmNr);\n  });\n  return {\n    data: fitterAssignmentList,\n    defaultAssignedList: defaultAssignedList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    confirm: data => {\n      dispatch(action.confirmFittersAssignmentList(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FitterAssignment);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/FitterAssignment/index.js"],"names":["Box","Button","Checkbox","Grid","withStyles","action","React","useState","connect","LocalizeContext","FitterAssignment","spacing","palette","root","display","borderBottomColor","grey","borderBottomStyle","borderBottomWidth","padding","defaultAssignedList","classes","data","projectNumber","confirm","i18n","useContext","fitterConfirmList","setFitterConfirmList","assignedList","sqmNr","newFitterConfirmList","slice","fitterIndex","indexOf","splice","push","textTransform","projectNo","GENERAL_CONFIRM","map","item","key","flex","fitterName","fitterRole","productFamilyName","includes","mapStateToProps","fittersAssignmentTransfer","fittersCertification","productFamilies","fitterAssignmentList","joinProductFramilyName","framilyNames","bias","productFamilyLists","productFamily","split","length","forEach","index","name","Object","keys","unshift","mapDispatchToProps","dispatch","confirmFittersAssignmentList"],"mappings":"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","sourcesContent":["import { Box, Button, Checkbox, Grid } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport * as action from \"actions\";\r\nimport React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LocalizeContext } from \"i18n\";\r\n\r\nconst FitterAssignment = withStyles(({ spacing, palette }) => {\r\n  return {\r\n    root: {\r\n      display: \"flex\",\r\n      borderBottomColor: palette.grey[\"300\"],\r\n      borderBottomStyle: \"solid\",\r\n      borderBottomWidth: 1,\r\n      padding: spacing(1, 0),\r\n    },\r\n  };\r\n})(({ defaultAssignedList, classes, data, projectNumber, confirm }) => {\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  const [fitterConfirmList, setFitterConfirmList] = useState(\r\n    defaultAssignedList\r\n  );\r\n\r\n  const assignedList = (sqmNr) => {\r\n    let newFitterConfirmList = fitterConfirmList.slice(0);\r\n    const fitterIndex = newFitterConfirmList.indexOf(sqmNr);\r\n    if (fitterIndex > -1) {\r\n      newFitterConfirmList.splice(fitterIndex, 1);\r\n    } else {\r\n      newFitterConfirmList.push(sqmNr);\r\n    }\r\n    setFitterConfirmList(newFitterConfirmList);\r\n  };\r\n\r\n  return (\r\n    <Box my={2}>\r\n      <Box textAlign={\"right\"}>\r\n        <Button\r\n          style={{ textTransform: \"none\" }}\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            confirm({ projectNo: projectNumber, sqmNr: fitterConfirmList });\r\n          }}\r\n        >\r\n          {i18n.GENERAL_CONFIRM}\r\n        </Button>\r\n      </Box>\r\n      {data.map((item, key) => {\r\n        return (\r\n          <Box className={classes.root} key={key}>\r\n            <Grid container spacing={0} style={{ flex: \"auto\" }}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={6}>\r\n                  {item.fitterName}\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item.sqmNr}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={6}>\r\n                  {item.fitterRole}\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  {item.productFamilyName}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Box style={{ flex: \"auto\" }}>\r\n              <Checkbox\r\n                color=\"primary\"\r\n                checked={fitterConfirmList.includes(item.sqmNr)}\r\n                onChange={() => {\r\n                  assignedList(item.sqmNr);\r\n                }}\r\n              ></Checkbox>\r\n            </Box>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n});\r\n\r\nconst mapStateToProps = (\r\n  { fittersAssignmentTransfer, fittersCertification, productFamilies },\r\n  { projectNumber }\r\n) => {\r\n  let fitterAssignmentList = [];\r\n  let defaultAssignedList = [];\r\n\r\n  const joinProductFramilyName = (item) => {\r\n    let framilyNames = \"\";\r\n    let bias = \"\";\r\n    const productFamilyLists = item.productFamily.split(\"/\");\r\n    if (productFamilyLists.length > 1) {\r\n      productFamilyLists.forEach((key, index) => {\r\n        if (index !== 0) {\r\n          bias = \"/\";\r\n        }\r\n        framilyNames += bias + productFamilies[key].name;\r\n      });\r\n    } else {\r\n      framilyNames = productFamilies[item.productFamily].name;\r\n    }\r\n    return framilyNames;\r\n  };\r\n\r\n  Object.keys(fittersCertification).forEach((key) => {\r\n    if (fittersCertification[key].fitterRole === \"TL\") {\r\n      fittersCertification[key].productFamilyName = joinProductFramilyName(\r\n        fittersCertification[key]\r\n      );\r\n      fitterAssignmentList.unshift(fittersCertification[key]);\r\n    } else {\r\n      fittersCertification[key].productFamilyName = joinProductFramilyName(\r\n        fittersCertification[key]\r\n      );\r\n      fitterAssignmentList.push(fittersCertification[key]);\r\n    }\r\n  });\r\n\r\n  (fittersAssignmentTransfer[projectNumber]\r\n    ? fittersAssignmentTransfer[projectNumber]\r\n    : []\r\n  ).forEach((item) => {\r\n    defaultAssignedList.push(item.sqmNr);\r\n  });\r\n\r\n  return {\r\n    data: fitterAssignmentList,\r\n    defaultAssignedList: defaultAssignedList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    confirm: (data) => {\r\n      dispatch(action.confirmFittersAssignmentList(data));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FitterAssignment);\r\n"]},"metadata":{},"sourceType":"module"}
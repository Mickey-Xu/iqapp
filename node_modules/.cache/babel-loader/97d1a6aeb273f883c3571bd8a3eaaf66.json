{"ast":null,"code":"import{Checkbox,FormControl,FormControlLabel,FormGroup,FormHelperText,FormLabel,Typography}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import{disableForm}from\"js/util\";import{useParams}from'react-router-dom';import React from\"react\";var useStyles=makeStyles(function(theme){return{root:{display:\"flex\"},lable:{color:\"rgba(0, 0, 0, 0.87)\"}};});export var Checkboxes=function Checkboxes(props){var classes=useStyles();var params=useParams();return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\"},/*#__PURE__*/React.createElement(FormLabel,{component:\"legend\",required:props.required},/*#__PURE__*/React.createElement(Typography,{component:\"span\",variant:\"subtitle2\",className:classes.lable},props.label)),/*#__PURE__*/React.createElement(FormGroup,null,props.options.map(function(item,index){return/*#__PURE__*/React.createElement(FormControlLabel,{key:index,control:/*#__PURE__*/React.createElement(Checkbox,{disabled:disableForm(params),checked:props.value.some(function(propsChecked){return propsChecked===item.value;}),onChange:function onChange(){return props.onChange(item.value);},id:item.id,value:item.value}),label:item.nameI18n.English});})),/*#__PURE__*/React.createElement(FormHelperText,null,props.descriptionI18n)));};","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/components/TemplateForm/Checkboxes/index.js"],"names":["Checkbox","FormControl","FormControlLabel","FormGroup","FormHelperText","FormLabel","Typography","makeStyles","disableForm","useParams","React","useStyles","theme","root","display","lable","color","Checkboxes","props","classes","params","required","label","options","map","item","index","value","some","propsChecked","onChange","id","nameI18n","English","descriptionI18n"],"mappings":"AAAA,OACEA,QADF,CAEEC,WAFF,CAGEC,gBAHF,CAIEC,SAJF,CAKEC,cALF,CAMEC,SANF,CAOEC,UAPF,KAQO,mBARP,CASA,OAASC,UAAT,KAA2B,0BAA3B,CACA,OAASC,WAAT,KAA4B,SAA5B,CACA,OAASC,SAAT,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,SAAS,CAAGJ,UAAU,CAAC,SAACK,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,OAAO,CAAE,MADL,CADiC,CAIvCC,KAAK,CAAE,CACLC,KAAK,CAAE,qBADF,CAJgC,CAAZ,EAAD,CAA5B,CASA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACnC,GAAMC,CAAAA,OAAO,CAAGR,SAAS,EAAzB,CACA,GAAMS,CAAAA,MAAM,CAAGX,SAAS,EAAxB,CAEA,mBACE,2BAAK,SAAS,CAAEU,OAAO,CAACN,IAAxB,eACE,oBAAC,WAAD,EAAa,SAAS,CAAC,UAAvB,eACE,oBAAC,SAAD,EAAW,SAAS,CAAC,QAArB,CAA8B,QAAQ,CAAEK,KAAK,CAACG,QAA9C,eACE,oBAAC,UAAD,EACE,SAAS,CAAC,MADZ,CAEE,OAAO,CAAC,WAFV,CAGE,SAAS,CAAEF,OAAO,CAACJ,KAHrB,EAKGG,KAAK,CAACI,KALT,CADF,CADF,cAUE,oBAAC,SAAD,MACGJ,KAAK,CAACK,OAAN,CAAcC,GAAd,CAAkB,SAACC,IAAD,CAAOC,KAAP,CAAiB,CAClC,mBACE,oBAAC,gBAAD,EACE,GAAG,CAAEA,KADP,CAEE,OAAO,cACL,oBAAC,QAAD,EACE,QAAQ,CAAElB,WAAW,CAACY,MAAD,CADvB,CAEE,OAAO,CAAEF,KAAK,CAACS,KAAN,CAAYC,IAAZ,CAAiB,SAACC,YAAD,CAAkB,CAC1C,MAAOA,CAAAA,YAAY,GAAKJ,IAAI,CAACE,KAA7B,CACD,CAFQ,CAFX,CAKE,QAAQ,CAAE,0BAAMT,CAAAA,KAAK,CAACY,QAAN,CAAeL,IAAI,CAACE,KAApB,CAAN,EALZ,CAME,EAAE,CAAEF,IAAI,CAACM,EANX,CAOE,KAAK,CAAEN,IAAI,CAACE,KAPd,EAHJ,CAaE,KAAK,CAAEF,IAAI,CAACO,QAAL,CAAcC,OAbvB,EADF,CAiBD,CAlBA,CADH,CAVF,cA+BE,oBAAC,cAAD,MAAiBf,KAAK,CAACgB,eAAvB,CA/BF,CADF,CADF,CAqCD,CAzCM","sourcesContent":["import {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { disableForm } from \"js/util\";\r\nimport { useParams } from 'react-router-dom';\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  lable: {\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n  },\r\n}));\r\n\r\nexport const Checkboxes = (props) => {\r\n  const classes = useStyles();\r\n  const params = useParams()\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\" required={props.required}>\r\n          <Typography\r\n            component=\"span\"\r\n            variant=\"subtitle2\"\r\n            className={classes.lable}\r\n          >\r\n            {props.label}\r\n          </Typography>\r\n        </FormLabel>\r\n        <FormGroup>\r\n          {props.options.map((item, index) => {\r\n            return (\r\n              <FormControlLabel\r\n                key={index}\r\n                control={\r\n                  <Checkbox\r\n                    disabled={disableForm(params)}\r\n                    checked={props.value.some((propsChecked) => {\r\n                      return propsChecked === item.value;\r\n                    })}\r\n                    onChange={() => props.onChange(item.value)}\r\n                    id={item.id}\r\n                    value={item.value}\r\n                  />\r\n                }\r\n                label={item.nameI18n.English}\r\n              />\r\n            );\r\n          })}\r\n        </FormGroup>\r\n        <FormHelperText>{props.descriptionI18n}</FormHelperText>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
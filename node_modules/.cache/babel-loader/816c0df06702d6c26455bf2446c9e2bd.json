{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\SCF-NI_PM_App\\\\SCF.InstallationQuality\\\\react-client\\\\src\\\\pages\\\\ProjectProgressPage\\\\index.js\";\nimport { Box } from \"@material-ui/core\";\nimport ProjectItemList from \"components/ProjectItemList\";\nimport ProjectSearchBar from \"components/ProjectSearchBar\";\nimport { LocalizeContext } from \"i18n\";\nimport { allActivitiesNosInProjectProgress } from \"js/publicFn\";\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { getCurrentElevatorStatus, getDocumentComplateStatus, getStopsOrHoistHeight, scrollToPosition } from \"../../js/util\";\n\nconst ProjectProgressPage = ({\n  data,\n  projectNumber,\n  activityNumberList\n}) => {\n  const i18n = React.useContext(LocalizeContext);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [selectedActivityNumber, setSelectedActivityNumber] = useState(\"\");\n  data = data.filter(item => {\n    return item.activityNumber === selectedActivityNumber;\n  });\n  data = searchValue ? data.filter(item => {\n    var _item$orderNumber, _item$installationMet;\n\n    return ((_item$orderNumber = item.orderNumber) === null || _item$orderNumber === void 0 ? void 0 : _item$orderNumber.indexOf(searchValue)) > -1 || ((_item$installationMet = item.installationMethod) === null || _item$installationMet === void 0 ? void 0 : _item$installationMet.indexOf(searchValue)) > -1;\n  }) : data;\n\n  const useInitSelectedActivityNumber = () => {\n    useEffect(() => {\n      setSelectedActivityNumber(activityNumberList.length > 0 ? activityNumberList[0] : \"1000\");\n    }, []);\n  };\n\n  useInitSelectedActivityNumber();\n  const scrollRef = useRef(null);\n  const location = useLocation();\n  useEffect(() => {\n    setTimeout(() => {\n      scrollToPosition(scrollRef, location.pathname);\n    }, 1000);\n  }, [location.pathname]);\n  return /*#__PURE__*/React.createElement(PrimaryLayout, {\n    title: `${i18n.ISNTAPP_PROJECT_PROGRESS}: ${projectNumber}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    style: {\n      width: \"90%\",\n      position: \"fixed\",\n      left: \"17px\",\n      zIndex: \"100\",\n      backgroundColor: \"#fafafa\",\n      height: \"48px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ProjectSearchBar, {\n    placeholder: i18n.ISNTAPP_SEARCH_ORDER,\n    onChange: value => {\n      setSearchValue(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    style: {\n      width: \"100%\",\n      marginTop: \"8px\",\n      padding: \"16px\",\n      position: \"absolute\",\n      top: \"32px\",\n      height: window.screen.height - 168 + \"px\",\n      overflow: \"hidden auto\"\n    },\n    ref: scrollRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ProjectItemList, {\n    data: data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default connect(({\n  orderActivities,\n  orders,\n  orderInstallationMethods,\n  productFamilies,\n  activities,\n  auth,\n  wayToInstallList,\n  templates,\n  documentList,\n  chars\n}, {\n  match\n}) => {\n  const {\n    projectNumber\n  } = match.params;\n  const data = [];\n  const ordersOfThisProject = Object.keys(orders).filter(order => {\n    return orders[order].projectNumber === projectNumber;\n  });\n  const activityNumberAndUnitDesignationMapping = {};\n  const activityNumberList = allActivitiesNosInProjectProgress(auth.activityAuth, auth.roles[0]);\n  activityNumberList.forEach(number => {\n    var _activities$number;\n\n    activityNumberAndUnitDesignationMapping[number] = (_activities$number = activities[number]) === null || _activities$number === void 0 ? void 0 : _activities$number.descriptionShort;\n  });\n\n  for (let i = 0; i < ordersOfThisProject.length; i++) {\n    var _wayToInstallList, _wayToInstallList$ins;\n\n    const toDoOrDne = getDocumentComplateStatus(auth, projectNumber, ordersOfThisProject[i], orderActivities, templates, documentList);\n    const elevatorProgress = getCurrentElevatorStatus(orderActivities, ordersOfThisProject[i]);\n    const stops = getStopsOrHoistHeight(chars, ordersOfThisProject[i], \"stops\");\n    const hoistHeight = getStopsOrHoistHeight(chars, ordersOfThisProject[i], \"hoistHeight\");\n    const productLine = orders[ordersOfThisProject[i]].productLine;\n    const productFamily = orders[ordersOfThisProject[i]].productFamily;\n    const installationMethodCode = orderInstallationMethods[ordersOfThisProject[i]].installationMethod;\n    const installationMethodName = (_wayToInstallList = wayToInstallList[productLine + \"-\" + productFamily]) === null || _wayToInstallList === void 0 ? void 0 : (_wayToInstallList$ins = _wayToInstallList.installationMethods) === null || _wayToInstallList$ins === void 0 ? void 0 : _wayToInstallList$ins[installationMethodCode];\n\n    for (let j = 0; j < activityNumberList.length; j++) {\n      const orderActivity = orderActivities[ordersOfThisProject[i] + \"-\" + activityNumberList[j]];\n\n      if (orderActivity) {\n        data.push({\n          unitDesignation: orders[ordersOfThisProject[i]].unitDesignation,\n          productFamily: productFamilies[orders[ordersOfThisProject[i]].productFamily].name,\n          installationMethod: installationMethodName,\n          orderNumber: ordersOfThisProject[i],\n          activityNumber: activityNumberList[j],\n          documentCompleteStatus: toDoOrDne,\n          elevatorProgress: elevatorProgress,\n          stops: stops,\n          hoistHeight: hoistHeight\n        });\n      }\n    }\n  }\n\n  console.log(toDoOrDne);\n  return {\n    data,\n    projectNumber,\n    activityNumberList\n  };\n})(ProjectProgressPage);","map":{"version":3,"sources":["C:/project/SCF-NI_PM_App/SCF.InstallationQuality/react-client/src/pages/ProjectProgressPage/index.js"],"names":["Box","ProjectItemList","ProjectSearchBar","LocalizeContext","allActivitiesNosInProjectProgress","PrimaryLayout","React","useEffect","useRef","useState","connect","useLocation","getCurrentElevatorStatus","getDocumentComplateStatus","getStopsOrHoistHeight","scrollToPosition","ProjectProgressPage","data","projectNumber","activityNumberList","i18n","useContext","searchValue","setSearchValue","selectedActivityNumber","setSelectedActivityNumber","filter","item","activityNumber","orderNumber","indexOf","installationMethod","useInitSelectedActivityNumber","length","scrollRef","location","setTimeout","pathname","ISNTAPP_PROJECT_PROGRESS","width","position","left","zIndex","backgroundColor","height","ISNTAPP_SEARCH_ORDER","value","marginTop","padding","top","window","screen","overflow","orderActivities","orders","orderInstallationMethods","productFamilies","activities","auth","wayToInstallList","templates","documentList","chars","match","params","ordersOfThisProject","Object","keys","order","activityNumberAndUnitDesignationMapping","activityAuth","roles","forEach","number","descriptionShort","i","toDoOrDne","elevatorProgress","stops","hoistHeight","productLine","productFamily","installationMethodCode","installationMethodName","installationMethods","j","orderActivity","push","unitDesignation","name","documentCompleteStatus","console","log"],"mappings":"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","sourcesContent":["import { Box } from \"@material-ui/core\";\r\nimport ProjectItemList from \"components/ProjectItemList\";\r\nimport ProjectSearchBar from \"components/ProjectSearchBar\";\r\nimport { LocalizeContext } from \"i18n\";\r\nimport { allActivitiesNosInProjectProgress } from \"js/publicFn\";\r\nimport PrimaryLayout from \"layouts/PrimaryLayout\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  getCurrentElevatorStatus,\r\n  getDocumentComplateStatus,\r\n  getStopsOrHoistHeight,\r\n  scrollToPosition,\r\n} from \"../../js/util\";\r\n\r\nconst ProjectProgressPage = ({ data, projectNumber, activityNumberList }) => {\r\n  const i18n = React.useContext(LocalizeContext);\r\n\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [selectedActivityNumber, setSelectedActivityNumber] = useState(\"\");\r\n\r\n  data = data.filter((item) => {\r\n    return item.activityNumber === selectedActivityNumber;\r\n  });\r\n\r\n  data = searchValue\r\n    ? data.filter((item) => {\r\n        return (\r\n          item.orderNumber?.indexOf(searchValue) > -1 ||\r\n          item.installationMethod?.indexOf(searchValue) > -1\r\n        );\r\n      })\r\n    : data;\r\n\r\n  const useInitSelectedActivityNumber = () => {\r\n    useEffect(() => {\r\n      setSelectedActivityNumber(\r\n        activityNumberList.length > 0 ? activityNumberList[0] : \"1000\"\r\n      );\r\n    }, []);\r\n  };\r\n\r\n  useInitSelectedActivityNumber();\r\n\r\n  const scrollRef = useRef(null);\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      scrollToPosition(scrollRef, location.pathname);\r\n    }, 1000);\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <PrimaryLayout title={`${i18n.ISNTAPP_PROJECT_PROGRESS}: ${projectNumber}`}>\r\n      <Box\r\n        style={{\r\n          width: \"90%\",\r\n          position: \"fixed\",\r\n          left: \"17px\",\r\n          zIndex: \"100\",\r\n          backgroundColor: \"#fafafa\",\r\n          height: \"48px\",\r\n        }}\r\n      >\r\n        <ProjectSearchBar\r\n          placeholder={i18n.ISNTAPP_SEARCH_ORDER}\r\n          onChange={(value) => {\r\n            setSearchValue(value);\r\n          }}\r\n        />\r\n      </Box>\r\n      <Box\r\n        mt={2}\r\n        style={{\r\n          width: \"100%\",\r\n          marginTop: \"8px\",\r\n          padding: \"16px\",\r\n          position: \"absolute\",\r\n          top: \"32px\",\r\n          height: window.screen.height - 168 + \"px\",\r\n          overflow: \"hidden auto\",\r\n        }}\r\n        ref={scrollRef}\r\n      >\r\n        <ProjectItemList data={data} />\r\n      </Box>\r\n    </PrimaryLayout>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (\r\n    {\r\n      orderActivities,\r\n      orders,\r\n      orderInstallationMethods,\r\n      productFamilies,\r\n      activities,\r\n      auth,\r\n      wayToInstallList,\r\n      templates,\r\n      documentList,\r\n      chars,\r\n    },\r\n    { match }\r\n  ) => {\r\n    const { projectNumber } = match.params;\r\n    const data = [];\r\n    const ordersOfThisProject = Object.keys(orders).filter((order) => {\r\n      return orders[order].projectNumber === projectNumber;\r\n    });\r\n\r\n    const activityNumberAndUnitDesignationMapping = {};\r\n\r\n    const activityNumberList = allActivitiesNosInProjectProgress(\r\n      auth.activityAuth,\r\n      auth.roles[0]\r\n    );\r\n\r\n    activityNumberList.forEach((number) => {\r\n      activityNumberAndUnitDesignationMapping[number] =\r\n        activities[number]?.descriptionShort;\r\n    });\r\n\r\n    for (let i = 0; i < ordersOfThisProject.length; i++) {\r\n      const toDoOrDne = getDocumentComplateStatus(\r\n        auth,\r\n        projectNumber,\r\n        ordersOfThisProject[i],\r\n        orderActivities,\r\n        templates,\r\n        documentList\r\n      );\r\n\r\n      const elevatorProgress = getCurrentElevatorStatus(\r\n        orderActivities,\r\n        ordersOfThisProject[i]\r\n      );\r\n\r\n      const stops = getStopsOrHoistHeight(\r\n        chars,\r\n        ordersOfThisProject[i],\r\n        \"stops\"\r\n      );\r\n\r\n      const hoistHeight = getStopsOrHoistHeight(\r\n        chars,\r\n        ordersOfThisProject[i],\r\n        \"hoistHeight\"\r\n      );\r\n      const productLine = orders[ordersOfThisProject[i]].productLine;\r\n      const productFamily = orders[ordersOfThisProject[i]].productFamily;\r\n      const installationMethodCode =\r\n        orderInstallationMethods[ordersOfThisProject[i]].installationMethod;\r\n      const installationMethodName =\r\n        wayToInstallList[productLine + \"-\" + productFamily]\r\n          ?.installationMethods?.[installationMethodCode];\r\n\r\n      for (let j = 0; j < activityNumberList.length; j++) {\r\n        const orderActivity =\r\n          orderActivities[ordersOfThisProject[i] + \"-\" + activityNumberList[j]];\r\n        if (orderActivity) {\r\n          data.push({\r\n            unitDesignation: orders[ordersOfThisProject[i]].unitDesignation,\r\n            productFamily:\r\n              productFamilies[orders[ordersOfThisProject[i]].productFamily]\r\n                .name,\r\n            installationMethod: installationMethodName,\r\n            orderNumber: ordersOfThisProject[i],\r\n            activityNumber: activityNumberList[j],\r\n            documentCompleteStatus: toDoOrDne,\r\n            elevatorProgress: elevatorProgress,\r\n            stops: stops,\r\n            hoistHeight: hoistHeight,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    console.log(toDoOrDne)\r\n    return {\r\n      data,\r\n      projectNumber,\r\n      activityNumberList,\r\n    };\r\n  }\r\n)(ProjectProgressPage);\r\n"]},"metadata":{},"sourceType":"module"}